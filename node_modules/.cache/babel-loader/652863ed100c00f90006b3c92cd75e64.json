{"ast":null,"code":"import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n *\n * @hidden\n */\n\nvar Page =\n/** @class */\nfunction () {\n  function Page(parent) {\n    Grid.Inject(GridPage);\n    this.parent = parent;\n    this.addEventListener();\n  }\n  /**\n   * @hidden\n   * @returns {void}\n   */\n\n\n  Page.prototype.addEventListener = function () {\n    this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n    this.parent.on(events.pagingActions, this.pageAction, this);\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n\n\n  Page.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n    this.parent.off(events.pagingActions, this.pageAction);\n  };\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @private\n   * @returns {string} Returns Pager module name\n   */\n\n\n  Page.prototype.getModuleName = function () {\n    return 'pager';\n  };\n  /**\n   * Refreshes the page count, pager information, and external message.\n   *\n   * @returns {void}\n   */\n\n\n  Page.prototype.refresh = function () {\n    this.parent.grid.pagerModule.refresh();\n  };\n  /**\n   * To destroy the pager\n   *\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Page.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n  /**\n   * Navigates to the target page according to the given number.\n   *\n   * @param  {number} pageNo - Defines the page number to navigate.\n   * @returns {void}\n   */\n\n\n  Page.prototype.goToPage = function (pageNo) {\n    this.parent.grid.pagerModule.goToPage(pageNo);\n  };\n  /**\n   * Defines the text of the external message.\n   *\n   * @param  {string} message - Defines the message to update.\n   * @returns {void}\n   */\n\n\n  Page.prototype.updateExternalMessage = function (message) {\n    this.parent.grid.pagerModule.updateExternalMessage(message);\n  };\n  /**\n   * @param {{action: string, row: HTMLTableRowElement, record: ITreeData, args: RowCollapsedEventArgs}} rowDetails - Expand Collapse details arguments\n   * @param {string} rowDetails.action - Expand Collapse action type\n   * @param {HTMLTableRowElement} rowDetails.row - Row element\n   * @param {ITreeData} rowDetails.record - Row object data\n   * @param {RowCollapsedEventArgs} rowDetails.args - Expand Collapse event arguments\n   * @hidden\n   * @returns {void}\n   */\n\n\n  Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n    rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n\n    if (this.parent.enableImmutableMode) {\n      var primaryKeyField_1 = this.parent.getPrimaryKeyFieldNames()[0];\n      var record = this.parent.flatData.filter(function (e) {\n        return e[primaryKeyField_1] === rowDetails.record[primaryKeyField_1];\n      });\n\n      if (record.length) {\n        record[0].expanded = rowDetails.record.expanded;\n      }\n    }\n\n    var ret = {\n      result: this.parent.flatData,\n      row: rowDetails.row,\n      action: rowDetails.action,\n      record: rowDetails.record,\n      count: this.parent.flatData.length\n    };\n    getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n\n    if (this.parent.enableImmutableMode) {\n      var row = 'row';\n      var action = 'action';\n      var targetEle = void 0;\n\n      if (ret[action] === 'collapse') {\n        targetEle = ret[row].getElementsByClassName('e-treegridexpand')[0];\n\n        if (!isNullOrUndefined(targetEle)) {\n          removeClass([targetEle], 'e-treegridexpand');\n          addClass([targetEle], 'e-treegridcollapse');\n        }\n      } else if (ret[action] === 'expand') {\n        targetEle = ret[row].getElementsByClassName('e-treegridcollapse')[0];\n\n        if (!isNullOrUndefined(targetEle)) {\n          removeClass([targetEle], 'e-treegridcollapse');\n          addClass([targetEle], 'e-treegridexpand');\n        }\n      }\n    }\n  };\n\n  Page.prototype.pageRoot = function (pagedResults, temp, result) {\n    var newResults = isNullOrUndefined(result) ? [] : result;\n\n    var _loop_1 = function (t) {\n      newResults.push(temp[t]);\n      var res = [];\n\n      if (temp[t].hasChildRecords) {\n        res = pagedResults.filter(function (e) {\n          return temp[t].uniqueID === e.parentUniqueID;\n        });\n        newResults = this_1.pageRoot(pagedResults, res, newResults);\n      }\n    };\n\n    var this_1 = this;\n\n    for (var t = 0; t < temp.length; t++) {\n      _loop_1(t);\n    }\n\n    return newResults;\n  };\n\n  Page.prototype.pageAction = function (pageingDetails) {\n    var _this = this;\n\n    var dm = new DataManager(pageingDetails.result);\n\n    if (this.parent.pageSettings.pageSizeMode === 'Root') {\n      var temp = [];\n      var propname = this.parent.grid.filterSettings.columns.length > 0 && (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ? 'filterLevel' : 'level';\n      var query = new Query().where(propname, 'equal', 0);\n      temp = dm.executeLocal(query);\n      pageingDetails.count = temp.length;\n      var size = this.parent.grid.pageSettings.pageSize;\n      var current = this.parent.grid.pageSettings.currentPage;\n      var skip = size * (current - 1);\n      query = query.skip(skip).take(size);\n      temp = dm.executeLocal(query);\n      var newResults = this.pageRoot(pageingDetails.result, temp);\n      pageingDetails.result = newResults;\n    } else {\n      var dm_1 = new DataManager(pageingDetails.result);\n      var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n      var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n      var visualData = void 0;\n\n      if (isFilterChildHierarchy(this.parent) && (this.parent.searchSettings.key !== this.parent.grid.searchSettings.key || this.parent.filterSettings.columns.length !== this.parent.grid.filterSettings.columns.length)) {\n        visualData = parents_1;\n      } else {\n        visualData = parents_1.filter(function (e) {\n          return getExpandStatus(_this.parent, e, parents_1);\n        });\n      }\n\n      pageingDetails.count = visualData.length;\n      var query = new Query();\n      var size = this.parent.grid.pageSettings.pageSize;\n      var current = this.parent.grid.pageSettings.currentPage;\n\n      if (visualData.length < current * size) {\n        current = Math.floor(visualData.length / size) + (visualData.length % size ? 1 : 0);\n        current = current ? current : 1;\n        this.parent.grid.setProperties({\n          pageSettings: {\n            currentPage: current\n          }\n        }, true);\n      }\n\n      var skip = size * (current - 1);\n      query = query.skip(skip).take(size);\n      dm_1.dataSource.json = visualData;\n      pageingDetails.result = dm_1.executeLocal(query);\n    }\n\n    this.parent.notify('updateAction', pageingDetails);\n  };\n\n  return Page;\n}();\n\nexport { Page };","map":{"version":3,"sources":["/Users/zhouzhou/Desktop/lightfront/node_modules/@syncfusion/ej2-treegrid/src/treegrid/actions/page.js"],"names":["Grid","Page","GridPage","events","DataManager","Query","Predicate","getValue","isNullOrUndefined","addClass","removeClass","getExpandStatus","isFilterChildHierarchy","parent","Inject","addEventListener","prototype","on","localPagedExpandCollapse","collapseExpandPagedchilds","pagingActions","pageAction","removeEventListener","isDestroyed","off","getModuleName","refresh","grid","pagerModule","destroy","goToPage","pageNo","updateExternalMessage","message","rowDetails","record","expanded","action","enableImmutableMode","primaryKeyField_1","getPrimaryKeyFieldNames","flatData","filter","e","length","ret","result","row","count","dataManagerSuccess","targetEle","getElementsByClassName","pageRoot","pagedResults","temp","newResults","_loop_1","t","push","res","hasChildRecords","uniqueID","parentUniqueID","this_1","pageingDetails","_this","dm","pageSettings","pageSizeMode","propname","filterSettings","columns","hierarchyMode","query","where","executeLocal","size","pageSize","current","currentPage","skip","take","dm_1","or","undefined","parents_1","visualData","searchSettings","key","Math","floor","setProperties","dataSource","json","notify"],"mappings":"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","sourcesContent":["import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n *\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Pager module name\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     *\n     * @returns {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @param {{action: string, row: HTMLTableRowElement, record: ITreeData, args: RowCollapsedEventArgs}} rowDetails - Expand Collapse details arguments\n     * @param {string} rowDetails.action - Expand Collapse action type\n     * @param {HTMLTableRowElement} rowDetails.row - Row element\n     * @param {ITreeData} rowDetails.record - Row object data\n     * @param {RowCollapsedEventArgs} rowDetails.args - Expand Collapse event arguments\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (this.parent.enableImmutableMode) {\n            var primaryKeyField_1 = this.parent.getPrimaryKeyFieldNames()[0];\n            var record = this.parent.flatData.filter(function (e) {\n                return e[primaryKeyField_1] === rowDetails.record[primaryKeyField_1];\n            });\n            if (record.length) {\n                record[0].expanded = rowDetails.record.expanded;\n            }\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n        if (this.parent.enableImmutableMode) {\n            var row = 'row';\n            var action = 'action';\n            var targetEle = void 0;\n            if (ret[action] === 'collapse') {\n                targetEle = ret[row].getElementsByClassName('e-treegridexpand')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridexpand');\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n            }\n            else if (ret[action] === 'expand') {\n                targetEle = ret[row].getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n        }\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent) && ((this.parent.searchSettings.key !== this.parent.grid.searchSettings.key) ||\n                (this.parent.filterSettings.columns.length !== this.parent.grid.filterSettings.columns.length))) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n"]},"metadata":{},"sourceType":"module"}