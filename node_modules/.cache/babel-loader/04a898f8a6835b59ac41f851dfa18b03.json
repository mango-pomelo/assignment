{"ast":null,"code":"import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, select } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n *\n * @hidden\n */\n\nvar ContextMenu =\n/** @class */\nfunction () {\n  function ContextMenu(parent) {\n    Grid.Inject(cmenu);\n    this.parent = parent;\n    this.addEventListener();\n  }\n  /**\n   * @hidden\n   * @returns {void}\n   */\n\n\n  ContextMenu.prototype.addEventListener = function () {\n    this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n    this.parent.on('contextMenuClick', this.contextMenuClick, this);\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n\n\n  ContextMenu.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.off('contextMenuOpen', this.contextMenuOpen);\n    this.parent.off('contextMenuClick', this.contextMenuClick);\n  };\n\n  ContextMenu.prototype.contextMenuOpen = function (args) {\n    var addRow = select('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow', args.element);\n    var editRecord = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit', args.element);\n\n    if (addRow) {\n      if (this.parent.grid.editSettings.allowAdding === false) {\n        addRow.style.display = 'none';\n      } else {\n        addRow.style.display = 'block';\n      }\n    }\n\n    if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') && !isNullOrUndefined(editRecord) && !editRecord.classList.contains('e-menu-hide')) {\n      editRecord.style.display = 'none';\n    }\n  };\n\n  ContextMenu.prototype.contextMenuClick = function (args) {\n    if (args.item.id === 'Above' || args.item.id === 'Below' || args.item.id === 'Child') {\n      this.parent.notify('savePreviousRowPosition', args);\n      this.parent.setProperties({\n        editSettings: {\n          newRowPosition: args.item.id\n        }\n      }, true);\n      this.parent.addRecord();\n    }\n  };\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @private\n   * @returns {string} Returns ContextMenu module name\n   */\n\n\n  ContextMenu.prototype.getModuleName = function () {\n    return 'contextMenu';\n  };\n  /**\n   * Destroys the ContextMenu.\n   *\n   * @function destroy\n   * @returns {void}\n   */\n\n\n  ContextMenu.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n  /**\n   * Gets the context menu element from the TreeGrid.\n   *\n   * @returns {Element} Return Context Menu root element.\n   */\n\n\n  ContextMenu.prototype.getContextMenu = function () {\n    return this.parent.grid.contextMenuModule.getContextMenu();\n  };\n\n  return ContextMenu;\n}();\n\nexport { ContextMenu };","map":{"version":3,"sources":["/Users/zhouzhou/Desktop/lightfront/node_modules/@syncfusion/ej2-treegrid/src/treegrid/actions/context-menu.js"],"names":["Grid","ContextMenu","cmenu","isNullOrUndefined","select","parent","Inject","addEventListener","prototype","on","contextMenuOpen","contextMenuClick","removeEventListener","isDestroyed","off","args","addRow","element","id","editRecord","grid","editSettings","allowAdding","style","display","mode","classList","contains","item","notify","setProperties","newRowPosition","addRecord","getModuleName","destroy","getContextMenu","contextMenuModule"],"mappings":"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","sourcesContent":["import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, select } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n *\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = select('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow', args.element);\n        var editRecord = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit', args.element);\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below' || args.item.id === 'Child') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ContextMenu module name\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     *\n     * @returns {Element} Return Context Menu root element.\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n"]},"metadata":{},"sourceType":"module"}