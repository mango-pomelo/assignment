{"ast":null,"code":"import { extend, addClass, removeClass, setValue, isBlazor, closest, select } from '@syncfusion/ej2-base';\nimport { remove, classList } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, isUndefined } from '@syncfusion/ej2-base';\nimport { CellType } from '../base/enum';\nimport { parentsUntil, inArray, refreshForeignData, getObject, alignFrozenEditForm, gridActionHandler, addRemoveEventListener } from '../base/util';\nimport { splitFrozenRowObjectCells, getGridRowElements } from '../base/util';\nimport { sliceElements, getCellByColAndRowIndex, getMovableTbody, getFrozenRightTbody } from '../base/util';\nimport { getGridRowObjects } from '../base/util';\nimport * as events from '../base/constant';\nimport { RowRenderer } from '../renderer/row-renderer';\nimport { CellRenderer } from '../renderer/cell-renderer';\nimport { Row } from '../models/row';\nimport { Cell } from '../models/cell';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { DataUtil } from '@syncfusion/ej2-data';\nimport * as literals from '../base/string-literals';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n *\n * @hidden\n */\n\nvar BatchEdit =\n/** @class */\nfunction () {\n  function BatchEdit(parent, serviceLocator, renderer) {\n    this.cellDetails = {};\n    this.originalCell = {};\n    this.cloneCell = {};\n    this.editNext = false;\n    this.preventSaveCell = false;\n    this.parent = parent;\n    this.serviceLocator = serviceLocator;\n    this.renderer = renderer;\n    this.focus = serviceLocator.getService('focus');\n    this.addEventListener();\n  }\n  /**\n   * @returns {void}\n   * @hidden\n   */\n\n\n  BatchEdit.prototype.addEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.evtHandlers = [{\n      event: events.click,\n      handler: this.clickHandler\n    }, {\n      event: events.dblclick,\n      handler: this.dblClickHandler\n    }, {\n      event: events.beforeCellFocused,\n      handler: this.onBeforeCellFocused\n    }, {\n      event: events.cellFocused,\n      handler: this.onCellFocused\n    }, {\n      event: events.doubleTap,\n      handler: this.dblClickHandler\n    }, {\n      event: events.keyPressed,\n      handler: this.keyDownHandler\n    }, {\n      event: events.editNextValCell,\n      handler: this.editNextValCell\n    }, {\n      event: events.closeBatch,\n      handler: this.closeForm\n    }];\n    addRemoveEventListener(this.parent, this.evtHandlers, true, this);\n    this.dataBoundFunction = this.dataBound.bind(this);\n    this.batchCancelFunction = this.batchCancel.bind(this);\n    this.parent.addEventListener(events.dataBound, this.dataBoundFunction);\n    this.parent.addEventListener(events.batchCancel, this.batchCancelFunction);\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n\n\n  BatchEdit.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    addRemoveEventListener(this.parent, this.evtHandlers, false);\n    this.parent.removeEventListener(events.dataBound, this.dataBoundFunction);\n    this.parent.removeEventListener(events.batchCancel, this.batchCancelFunction);\n  };\n\n  BatchEdit.prototype.batchCancel = function () {\n    this.parent.focusModule.restoreFocus();\n  };\n\n  BatchEdit.prototype.dataBound = function () {\n    this.parent.notify(events.toolbarRefresh, {});\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n\n\n  BatchEdit.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n\n  BatchEdit.prototype.clickHandler = function (e) {\n    if (!parentsUntil(e.target, this.parent.element.id + '_add', true)) {\n      if (this.parent.isEdit && closest(this.form, 'td') !== closest(e.target, 'td')) {\n        this.saveCell();\n        this.editNextValCell();\n      }\n\n      if (parentsUntil(e.target, literals.rowCell) && !this.parent.isEdit) {\n        this.setCellIdx(e.target);\n      }\n    }\n  };\n\n  BatchEdit.prototype.dblClickHandler = function (e) {\n    var target = parentsUntil(e.target, literals.rowCell);\n    var tr = parentsUntil(e.target, literals.row);\n    var rowIndex = tr && parseInt(tr.getAttribute(literals.ariaRowIndex), 10);\n    var colIndex = target && parseInt(target.getAttribute(literals.ariaColIndex), 10);\n\n    if (!isNullOrUndefined(target) && !isNullOrUndefined(rowIndex) && !isNaN(colIndex) && !target.parentElement.classList.contains(literals.editedRow)) {\n      this.editCell(rowIndex, this.parent.getColumns()[colIndex].field, this.isAddRow(rowIndex));\n    }\n  };\n\n  BatchEdit.prototype.onBeforeCellFocused = function (e) {\n    if (this.parent.isEdit && this.validateFormObj() && (e.byClick || ['tab', 'shiftTab', 'enter', 'shiftEnter'].indexOf(e.keyArgs.action) > -1)) {\n      e.cancel = true;\n\n      if (e.byClick) {\n        e.clickArgs.preventDefault();\n      } else {\n        e.keyArgs.preventDefault();\n      }\n    }\n  };\n\n  BatchEdit.prototype.onCellFocused = function (e) {\n    var frzCols = this.parent.getFrozenLeftCount();\n    var frzRightCols = this.parent.getFrozenRightColumnsCount();\n    var mCont = this.parent.getContent().querySelector('.' + literals.movableContent);\n    var mHdr = this.parent.getHeaderContent().querySelector('.' + literals.movableHeader);\n    var clear = (!e.container.isContent || !e.container.isDataCell) && !(this.parent.frozenRows && e.container.isHeader);\n\n    if (!e.byKey || clear) {\n      if (this.parent.isEdit && clear) {\n        this.saveCell();\n      }\n\n      return;\n    }\n\n    var _a = e.container.indexes,\n        rowIndex = _a[0],\n        cellIndex = _a[1];\n\n    if (frzCols && (mCont.contains(e.element) || this.parent.frozenRows && mHdr.contains(e.element))) {\n      cellIndex += frzCols;\n    }\n\n    if (frzRightCols) {\n      var frHdr = this.parent.getHeaderContent().querySelector('.e-frozen-right-header');\n      var frCont = this.parent.getContent().querySelector('.e-frozen-right-content');\n\n      if (frCont.contains(e.element) || this.parent.frozenRows && frHdr.contains(e.element)) {\n        cellIndex += frzCols + this.parent.getMovableColumnsCount();\n      }\n    }\n\n    if (this.parent.frozenRows && e.container.isContent) {\n      rowIndex += this.parent.frozenRows;\n    }\n\n    var isEdit = this.parent.isEdit;\n\n    if (!this.parent.element.getElementsByClassName('e-popup-open').length) {\n      isEdit = isEdit && !this.validateFormObj();\n\n      switch (e.keyArgs.action) {\n        case 'tab':\n        case 'shiftTab':\n          // eslint-disable-next-line no-case-declarations\n          var col = this.parent.getColumns()[e.indexes[1]];\n\n          if (col && !this.parent.isEdit) {\n            this.editCell(e.indexes[0], col.field);\n          }\n\n          if (isEdit || this.parent.isLastCellPrimaryKey) {\n            this.editCellFromIndex(rowIndex, cellIndex);\n          }\n\n          break;\n\n        case 'enter':\n        case 'shiftEnter':\n          e.keyArgs.preventDefault(); // eslint-disable-next-line no-case-declarations\n\n          var args = {\n            cancel: false,\n            keyArgs: e.keyArgs\n          };\n          this.parent.notify('beforeFocusCellEdit', args);\n\n          if (!args.cancel && isEdit) {\n            this.editCell(rowIndex, this.cellDetails.column.field);\n          }\n\n          break;\n\n        case 'f2':\n          this.editCellFromIndex(rowIndex, cellIndex);\n          this.focus.focus();\n          break;\n      }\n    }\n  };\n\n  BatchEdit.prototype.isAddRow = function (index) {\n    return this.parent.getDataRows()[index].classList.contains('e-insertedrow');\n  };\n\n  BatchEdit.prototype.editCellFromIndex = function (rowIdx, cellIdx) {\n    this.cellDetails.rowIndex = rowIdx;\n    this.cellDetails.cellIndex = cellIdx;\n    this.editCell(rowIdx, this.parent.getColumns()[cellIdx].field, this.isAddRow(rowIdx));\n  };\n\n  BatchEdit.prototype.closeEdit = function () {\n    var _this = this;\n\n    var gObj = this.parent;\n    var rows = this.parent.getRowsObject();\n    var argument = {\n      cancel: false,\n      batchChanges: this.getBatchChanges()\n    };\n    gObj.notify(events.beforeBatchCancel, argument);\n\n    if (argument.cancel) {\n      return;\n    }\n\n    if (gObj.isEdit) {\n      this.saveCell(true);\n    }\n\n    this.isAdded = false;\n    gObj.clearSelection();\n    var allRows = getGridRowObjects(this.parent);\n\n    var _loop_1 = function (i) {\n      var isInsert = false;\n      var isDirty = rows[i].isDirty;\n      gridActionHandler(this_1.parent, function (tableName, rows) {\n        isInsert = _this.removeBatchElementChanges(rows[i], isDirty);\n\n        if (isInsert) {\n          rows.splice(i, 1);\n        }\n      }, allRows);\n\n      if (isInsert) {\n        i--;\n      }\n\n      out_i_1 = i;\n    };\n\n    var this_1 = this,\n        out_i_1;\n\n    for (var i = 0; i < rows.length; i++) {\n      _loop_1(i);\n\n      i = out_i_1;\n    }\n\n    if (!gObj.getContentTable().querySelector('tr.e-row')) {\n      gObj.renderModule.renderEmptyRow();\n    }\n\n    var args = {\n      requestType: 'batchCancel',\n      rows: this.parent.getRowsObject()\n    };\n    gObj.notify(events.batchCancel, {\n      rows: this.parent.getRowsObject().length ? this.parent.getRowsObject() : [new Row({\n        isDataRow: true,\n        cells: [new Cell({\n          isDataCell: true,\n          visible: true\n        })]\n      })]\n    });\n    gObj.selectRow(this.cellDetails.rowIndex);\n    this.refreshRowIdx();\n    gObj.notify(events.toolbarRefresh, {});\n    this.parent.notify(events.tooltipDestroy, {});\n    args = {\n      requestType: 'batchCancel',\n      rows: this.parent.getRowsObject()\n    };\n    gObj.trigger(events.batchCancel, args);\n  };\n\n  BatchEdit.prototype.removeBatchElementChanges = function (row, isDirty) {\n    var gObj = this.parent;\n    var rowRenderer = new RowRenderer(this.serviceLocator, null, this.parent);\n    var isInstertedRemoved = false;\n\n    if (isDirty) {\n      row.isDirty = isDirty;\n      var tr = gObj.getRowElementByUID(row.uid);\n\n      if (tr) {\n        if (tr.classList.contains('e-insertedrow')) {\n          remove(tr);\n          isInstertedRemoved = true;\n        } else {\n          refreshForeignData(row, this.parent.getForeignKeyColumns(), row.data);\n          delete row.changes;\n          delete row.edit;\n          row.isDirty = false;\n          classList(tr, [], ['e-hiddenrow', 'e-updatedtd']);\n          rowRenderer.refresh(row, gObj.getColumns(), false);\n        }\n\n        if (this.parent.aggregates.length > 0) {\n          var type = 'type';\n          var editType = [];\n          editType[type] = 'cancel';\n          this.parent.notify(events.refreshFooterRenderer, editType);\n\n          if (this.parent.groupSettings.columns.length > 0) {\n            this.parent.notify(events.groupAggregates, editType);\n          }\n        }\n      }\n    }\n\n    return isInstertedRemoved;\n  };\n\n  BatchEdit.prototype.removeHideAndSelection = function (tr) {\n    if (tr.classList.contains('e-hiddenrow')) {\n      tr.removeAttribute('aria-selected');\n      var tdElements = [].slice.call(tr.getElementsByClassName('e-selectionbackground'));\n\n      for (var i = 0; i < tdElements.length; i++) {\n        removeClass([tdElements[i]], ['e-selectionbackground', 'e-active']);\n      }\n    }\n\n    classList(tr, [], ['e-hiddenrow', 'e-updatedtd']);\n  };\n\n  BatchEdit.prototype.deleteRecord = function (fieldname, data) {\n    this.saveCell();\n\n    if (this.validateFormObj()) {\n      this.saveCell(true);\n    }\n\n    this.isAdded = false;\n    this.bulkDelete(fieldname, data);\n\n    if (this.parent.aggregates.length > 0) {\n      this.parent.notify(events.refreshFooterRenderer, {});\n\n      if (this.parent.groupSettings.columns.length > 0) {\n        this.parent.notify(events.groupAggregates, {});\n      }\n    }\n  };\n\n  BatchEdit.prototype.addRecord = function (data) {\n    this.bulkAddRow(data);\n  };\n\n  BatchEdit.prototype.endEdit = function () {\n    if (this.parent.isEdit && this.validateFormObj()) {\n      return;\n    }\n\n    this.batchSave();\n  };\n\n  BatchEdit.prototype.closeForm = function () {\n    for (var i = 0; i < Object.keys(this.originalCell).length; i++) {\n      for (var j = 0; j < Object.keys(this.cloneCell).length; j++) {\n        if (Object.keys(this.originalCell)[i] === Object.keys(this.cloneCell)[j]) {\n          this.cloneCell[Object.keys(this.cloneCell)[j]].replaceWith(this.originalCell[Object.keys(this.originalCell)[i]]);\n\n          if (this.originalCell[Object.keys(this.originalCell)[i]].classList.contains('e-selectionbackground')) {\n            this.originalCell[Object.keys(this.originalCell)[i]].classList.remove('e-selectionbackground', 'e-cellselectionbackground', 'e-active');\n          }\n        }\n      }\n    }\n\n    this.cloneCell = {};\n    this.originalCell = {};\n  };\n\n  BatchEdit.prototype.validateFormObj = function () {\n    return this.parent.editModule.formObj && !this.parent.editModule.formObj.validate();\n  };\n\n  BatchEdit.prototype.batchSave = function () {\n    var gObj = this.parent;\n    var deletedRecords = 'deletedRecords';\n\n    if (gObj.isCheckBoxSelection) {\n      var checkAllBox = gObj.element.querySelector('.e-checkselectall').parentElement;\n\n      if (checkAllBox.classList.contains('e-checkbox-disabled') && gObj.pageSettings.totalRecordsCount > gObj.currentViewData.length) {\n        removeClass([checkAllBox], ['e-checkbox-disabled']);\n      }\n    }\n\n    this.saveCell();\n\n    if (gObj.isEdit || this.editNextValCell() || gObj.isEdit) {\n      return;\n    }\n\n    var changes = this.getBatchChanges();\n\n    if (this.parent.selectionSettings.type === 'Multiple' && changes[deletedRecords].length && this.parent.selectionSettings.persistSelection) {\n      changes[deletedRecords] = this.removeSelectedData;\n      this.removeSelectedData = [];\n    }\n\n    var original = {\n      changedRecords: this.parent.getRowsObject().filter(function (row) {\n        return row.isDirty && ['add', 'delete'].indexOf(row.edit) === -1;\n      }).map(function (row) {\n        return row.data;\n      })\n    };\n    var args = {\n      batchChanges: changes,\n      cancel: false\n    };\n    gObj.trigger(events.beforeBatchSave, args, function (beforeBatchSaveArgs) {\n      if (beforeBatchSaveArgs.cancel) {\n        return;\n      }\n\n      gObj.showSpinner();\n      gObj.notify(events.bulkSave, {\n        changes: changes,\n        original: original\n      });\n    });\n  };\n\n  BatchEdit.prototype.getBatchChanges = function () {\n    var changes = {\n      addedRecords: [],\n      deletedRecords: [],\n      changedRecords: []\n    };\n    var rows = this.parent.getRowsObject();\n\n    for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n      var row = rows_1[_i];\n\n      if (row.isDirty) {\n        switch (row.edit) {\n          case 'add':\n            changes.addedRecords.push(row.changes);\n            break;\n\n          case 'delete':\n            changes.deletedRecords.push(row.data);\n            break;\n\n          default:\n            changes.changedRecords.push(row.changes);\n        }\n      }\n    }\n\n    return changes;\n  };\n  /**\n   * @param {string} uid - specifes the uid\n   * @returns {void}\n   * @hidden\n   */\n\n\n  BatchEdit.prototype.removeRowObjectFromUID = function (uid) {\n    var rows = this.parent.getRowsObject();\n    var i = 0;\n\n    for (var len = rows.length; i < len; i++) {\n      if (rows[i].uid === uid) {\n        break;\n      }\n    }\n\n    gridActionHandler(this.parent, function (tableName, rows) {\n      rows.splice(i, 1);\n    }, getGridRowObjects(this.parent));\n  };\n  /**\n   * @param {Row<Column>} row - specifies the row object\n   * @returns {void}\n   * @hidden\n   */\n\n\n  BatchEdit.prototype.addRowObject = function (row) {\n    var gObj = this.parent;\n    var isTop = gObj.editSettings.newRowPosition === 'Top';\n    gridActionHandler(this.parent, function (tableName, rows) {\n      var rowClone = row.clone();\n      rowClone.cells = splitFrozenRowObjectCells(gObj, rowClone.cells, tableName);\n\n      if (isTop) {\n        rows.unshift(rowClone);\n      } else {\n        rows.push(rowClone);\n      }\n    }, getGridRowObjects(this.parent), true);\n  }; // tslint:disable-next-line:max-func-body-length\n\n\n  BatchEdit.prototype.bulkDelete = function (fieldname, data) {\n    var _this = this;\n\n    this.removeSelectedData = [];\n    var gObj = this.parent;\n    var index = gObj.selectedRowIndex;\n    var selectedRows = gObj.getSelectedRows();\n    var args = {\n      primaryKey: this.parent.getPrimaryKeyFieldNames(),\n      rowIndex: index,\n      rowData: data ? data : gObj.getSelectedRecords()[0],\n      cancel: false\n    };\n\n    if (!isBlazor() || this.parent.isJsComponent) {\n      if (data) {\n        args.row = gObj.editModule.deleteRowUid ? gObj.getRowElementByUID(gObj.editModule.deleteRowUid) : gObj.getRows()[gObj.getCurrentViewRecords().indexOf(data)];\n      } else {\n        args.row = data ? gObj.getRows()[index] : selectedRows[0];\n      }\n\n      if (!args.row) {\n        return;\n      }\n    } // tslint:disable-next-line:max-func-body-length\n\n\n    gObj.trigger(events.beforeBatchDelete, args, function (beforeBatchDeleteArgs) {\n      if (beforeBatchDeleteArgs.cancel) {\n        return;\n      }\n\n      _this.removeSelectedData = gObj.getSelectedRecords();\n      gObj.clearSelection();\n      beforeBatchDeleteArgs.row = beforeBatchDeleteArgs.row ? beforeBatchDeleteArgs.row : data ? gObj.getRows()[index] : selectedRows[0];\n\n      if (_this.parent.isFrozenGrid()) {\n        if (data) {\n          index = parseInt(beforeBatchDeleteArgs.row.getAttribute(literals.ariaRowIndex), 10);\n          selectedRows = [];\n          selectedRows.push(gObj.getRowByIndex(index));\n          selectedRows.push(gObj.getMovableRowByIndex(index));\n\n          if (gObj.getFrozenMode() === literals.leftRight) {\n            selectedRows.push(gObj.getFrozenRightRowByIndex(index));\n          }\n        }\n\n        for (var i = 0; i < selectedRows.length; i++) {\n          var uid = selectedRows[i].getAttribute('data-uid');\n\n          if (selectedRows[i].classList.contains('e-insertedrow')) {\n            _this.removeRowObjectFromUID(uid);\n\n            remove(selectedRows[i]);\n          } else {\n            var rowObj = gObj.getRowObjectFromUID(uid);\n            rowObj.isDirty = true;\n            rowObj.edit = 'delete';\n            classList(selectedRows[i], ['e-hiddenrow', 'e-updatedtd'], []);\n\n            if (gObj.frozenRows && index < gObj.frozenRows && gObj.getMovableDataRows().length >= gObj.frozenRows) {\n              gObj.getMovableHeaderTbody().appendChild(gObj.getMovableRowByIndex(gObj.frozenRows - 1));\n              gObj.getFrozenHeaderTbody().appendChild(gObj.getRowByIndex(gObj.frozenRows - 1));\n\n              if (gObj.getFrozenMode() === literals.leftRight) {\n                gObj.getFrozenRightHeaderTbody().appendChild(gObj.getFrozenRightRowByIndex(gObj.frozenRows - 1));\n              }\n            }\n\n            if (gObj.frozenRows && index < gObj.frozenRows && gObj.getDataRows().length >= gObj.frozenRows) {\n              gObj.getHeaderTable().querySelector(literals.tbody).appendChild(gObj.getRowByIndex(gObj.frozenRows - 1));\n            }\n          }\n\n          delete selectedRows[i];\n        }\n      } else if (!_this.parent.isFrozenGrid() && (selectedRows.length === 1 || data)) {\n        var uid = beforeBatchDeleteArgs.row.getAttribute('data-uid');\n        uid = data && _this.parent.editModule.deleteRowUid ? uid = _this.parent.editModule.deleteRowUid : uid;\n\n        if (beforeBatchDeleteArgs.row.classList.contains('e-insertedrow')) {\n          _this.removeRowObjectFromUID(uid);\n\n          remove(beforeBatchDeleteArgs.row);\n        } else {\n          var rowObj = gObj.getRowObjectFromUID(uid);\n          rowObj.isDirty = true;\n          rowObj.edit = 'delete';\n          classList(beforeBatchDeleteArgs.row, ['e-hiddenrow', 'e-updatedtd'], []);\n        }\n\n        delete beforeBatchDeleteArgs.row;\n      } else {\n        for (var i = 0; i < selectedRows.length; i++) {\n          var uniqueid = selectedRows[i].getAttribute('data-uid');\n\n          if (selectedRows[i].classList.contains('e-insertedrow')) {\n            _this.removeRowObjectFromUID(uniqueid);\n\n            remove(selectedRows[i]);\n          } else {\n            classList(selectedRows[i], ['e-hiddenrow', 'e-updatedtd'], []);\n            var selectedRow = gObj.getRowObjectFromUID(uniqueid);\n            selectedRow.isDirty = true;\n            selectedRow.edit = 'delete';\n            delete selectedRows[i];\n          }\n        }\n      }\n\n      _this.refreshRowIdx();\n\n      if (data) {\n        gObj.editModule.deleteRowUid = undefined;\n\n        if (gObj.getSelectedRows().length) {\n          index = parseInt(gObj.getSelectedRows()[0].getAttribute(literals.ariaRowIndex), 10);\n        }\n      }\n\n      if (!gObj.isCheckBoxSelection) {\n        gObj.selectRow(index);\n      }\n\n      gObj.trigger(events.batchDelete, beforeBatchDeleteArgs);\n      gObj.notify(events.batchDelete, {\n        rows: _this.parent.getRowsObject()\n      });\n      gObj.notify(events.toolbarRefresh, {});\n    });\n  };\n\n  BatchEdit.prototype.refreshRowIdx = function () {\n    var gObj = this.parent;\n    var rows = gObj.getAllDataRows(true);\n    var dataRows = getGridRowElements(this.parent);\n    var dataObjects = getGridRowObjects(this.parent);\n\n    var _loop_2 = function (i, j, len) {\n      if (rows[i].classList.contains(literals.row) && !rows[i].classList.contains('e-hiddenrow')) {\n        gridActionHandler(this_2.parent, function (tableName, rowElements, rowObjects) {\n          rowElements[i].setAttribute(literals.ariaRowIndex, j.toString());\n          rowObjects[i].index = j;\n        }, dataRows, null, dataObjects);\n        j++;\n      } else {\n        gridActionHandler(this_2.parent, function (tableName, rowElements, rowObjects) {\n          rowElements[i].removeAttribute(literals.ariaRowIndex);\n          rowObjects[i].index = -1;\n        }, dataRows, null, dataObjects);\n      }\n\n      out_j_1 = j;\n    };\n\n    var this_2 = this,\n        out_j_1;\n\n    for (var i = 0, j = 0, len = rows.length; i < len; i++) {\n      _loop_2(i, j, len);\n\n      j = out_j_1;\n    }\n  };\n\n  BatchEdit.prototype.getIndexFromData = function (data) {\n    return inArray(data, this.parent.getCurrentViewRecords());\n  };\n\n  BatchEdit.prototype.bulkAddRow = function (data) {\n    var _this = this;\n\n    var gObj = this.parent;\n\n    if (!gObj.editSettings.allowAdding) {\n      return;\n    }\n\n    if (gObj.isEdit) {\n      this.saveCell();\n      this.parent.notify(events.editNextValCell, {});\n    }\n\n    if (gObj.isEdit) {\n      return;\n    }\n\n    this.parent.element.classList.add('e-editing');\n    var defaultData = data ? data : this.getDefaultData();\n    var args = {\n      defaultData: defaultData,\n      primaryKey: gObj.getPrimaryKeyFieldNames(),\n      cancel: false\n    };\n    gObj.trigger(events.beforeBatchAdd, args, function (beforeBatchAddArgs) {\n      if (beforeBatchAddArgs.cancel) {\n        return;\n      }\n\n      _this.isAdded = true;\n      gObj.clearSelection();\n      var mTr;\n      var frTr;\n      var row = new RowRenderer(_this.serviceLocator, null, _this.parent);\n      var model = new RowModelGenerator(_this.parent);\n      var modelData = model.generateRows([beforeBatchAddArgs.defaultData]);\n      var tr = row.render(modelData[0], gObj.getColumns());\n      var col;\n      var index;\n\n      for (var i = 0; i < _this.parent.groupSettings.columns.length; i++) {\n        tr.insertBefore(_this.parent.createElement('td', {\n          className: 'e-indentcell'\n        }), tr.firstChild);\n        modelData[0].cells.unshift(new Cell({\n          cellType: CellType.Indent\n        }));\n      }\n\n      var tbody = gObj.getContentTable().querySelector(literals.tbody);\n      tr.classList.add('e-insertedrow');\n\n      if (tbody.querySelector('.e-emptyrow')) {\n        var emptyRow = tbody.querySelector('.e-emptyrow');\n        emptyRow.parentNode.removeChild(emptyRow);\n\n        _this.removeFrozenTbody();\n      }\n\n      if (gObj.isFrozenGrid()) {\n        frTr = tr.cloneNode(true);\n        mTr = _this.renderMovable(tr, frTr);\n        tr = gObj.getFrozenMode() === 'Right' ? frTr : tr;\n\n        _this.renderFrozenAddRow(tr, mTr, frTr);\n      }\n\n      if (gObj.frozenRows && gObj.editSettings.newRowPosition === 'Top') {\n        tbody = gObj.getHeaderTable().querySelector(literals.tbody);\n      } else {\n        tbody = gObj.getContentTable().querySelector(literals.tbody);\n      }\n\n      if (_this.parent.editSettings.newRowPosition === 'Top') {\n        tbody.insertBefore(tr, tbody.firstChild);\n      } else {\n        tbody.appendChild(tr);\n      }\n\n      addClass([].slice.call(tr.getElementsByClassName(literals.rowCell)), ['e-updatedtd']);\n      modelData[0].isDirty = true;\n      modelData[0].changes = extend({}, {}, modelData[0].data, true);\n      modelData[0].edit = 'add';\n\n      _this.addRowObject(modelData[0]);\n\n      _this.refreshRowIdx();\n\n      _this.focus.forgetPrevious();\n\n      gObj.notify(events.batchAdd, {\n        rows: _this.parent.getRowsObject(),\n        args: {\n          isFrozen: _this.parent.isFrozenGrid()\n        }\n      });\n\n      var changes = _this.getBatchChanges();\n\n      var btmIdx = _this.getBottomIndex();\n\n      if (_this.parent.editSettings.newRowPosition === 'Top') {\n        gObj.selectRow(0);\n      } else {\n        gObj.selectRow(btmIdx);\n      }\n\n      if (!data) {\n        index = _this.findNextEditableCell(0, true);\n        col = gObj.getColumns()[index];\n\n        if (_this.parent.editSettings.newRowPosition === 'Top') {\n          _this.editCell(0, col.field, true);\n        } else {\n          _this.editCell(btmIdx, col.field, true);\n        }\n      }\n\n      if (_this.parent.aggregates.length > 0 && (data || changes[literals.addedRecords].length)) {\n        _this.parent.notify(events.refreshFooterRenderer, {});\n      }\n\n      var args1 = {\n        defaultData: beforeBatchAddArgs.defaultData,\n        row: tr,\n        columnObject: col,\n        columnIndex: index,\n        primaryKey: beforeBatchAddArgs.primaryKey,\n        cell: tr.cells[index]\n      };\n      gObj.trigger(events.batchAdd, args1);\n\n      if (gObj.isFrozenGrid()) {\n        alignFrozenEditForm(mTr.querySelector('td:not(.e-hide)'), tr.querySelector('td:not(.e-hide)'));\n      }\n    });\n  };\n\n  BatchEdit.prototype.renderFrozenAddRow = function (tr, mTr, frTr) {\n    var gObj = this.parent;\n    var mTbody = getMovableTbody(this.parent);\n    var frTbody = getFrozenRightTbody(this.parent);\n\n    if (gObj.editSettings.newRowPosition === 'Top') {\n      mTbody.insertBefore(mTr, mTbody.firstChild);\n    } else {\n      mTbody.appendChild(mTr);\n    }\n\n    addClass([].slice.call(mTr.getElementsByClassName(literals.rowCell)), ['e-updatedtd']);\n\n    if (frTbody && frTr) {\n      if (gObj.editSettings.newRowPosition === 'Top') {\n        frTbody.insertBefore(frTr, frTbody.firstChild);\n      } else {\n        frTbody.appendChild(frTr);\n      }\n\n      addClass([].slice.call(frTr.getElementsByClassName(literals.rowCell)), ['e-updatedtd']);\n      alignFrozenEditForm(frTr.querySelector('td:not(.e-hide)'), tr.querySelector('td:not(.e-hide)'));\n    }\n\n    if (gObj.height === 'auto') {\n      gObj.notify(events.frozenHeight, {});\n    }\n  };\n\n  BatchEdit.prototype.removeFrozenTbody = function () {\n    var gObj = this.parent;\n\n    if (gObj.isFrozenGrid()) {\n      var moveTbody = gObj.getContent().querySelector('.' + literals.movableContent).querySelector(literals.tbody);\n      moveTbody.firstElementChild.parentNode.removeChild(moveTbody.firstElementChild);\n\n      if (gObj.getFrozenMode() === literals.leftRight) {\n        var frTbody = gObj.getContent().querySelector('.e-frozen-right-content').querySelector(literals.tbody);\n        frTbody.firstElementChild.parentNode.removeChild(frTbody.firstElementChild);\n      }\n    }\n  };\n\n  BatchEdit.prototype.renderMovable = function (ele, rightEle) {\n    var mEle = ele.cloneNode(true);\n    var movable = this.parent.getMovableColumnsCount();\n    var left = this.parent.getFrozenLeftCount();\n    var right = this.parent.getFrozenRightColumnsCount();\n    sliceElements(ele, 0, left);\n    sliceElements(mEle, left, right ? mEle.children.length - right : mEle.children.length);\n    sliceElements(rightEle, left + movable, rightEle.children.length);\n    return mEle;\n  };\n\n  BatchEdit.prototype.findNextEditableCell = function (columnIndex, isAdd, isValOnly) {\n    var cols = this.parent.getColumns();\n    var endIndex = cols.length;\n    var validation;\n\n    for (var i = columnIndex; i < endIndex; i++) {\n      validation = isValOnly ? isNullOrUndefined(cols[i].validationRules) : false;\n\n      if (!isAdd && this.checkNPCell(cols[i])) {\n        return i;\n      } else if (isAdd && !cols[i].template && cols[i].visible && cols[i].allowEditing && !(cols[i].isIdentity && cols[i].isPrimaryKey) && !validation) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  BatchEdit.prototype.checkNPCell = function (col) {\n    return !col.template && col.visible && !col.isPrimaryKey && !col.isIdentity && col.allowEditing;\n  };\n\n  BatchEdit.prototype.getDefaultData = function () {\n    var gObj = this.parent;\n    var data = {};\n    var dValues = {\n      'number': 0,\n      'string': null,\n      'boolean': false,\n      'date': null,\n      'datetime': null\n    };\n\n    for (var _i = 0, _a = gObj.columnModel; _i < _a.length; _i++) {\n      var col = _a[_i];\n\n      if (col.field) {\n        setValue(col.field, Object.keys(col).indexOf('defaultValue') >= 0 ? col.defaultValue : dValues[col.type], data);\n      }\n    }\n\n    return data;\n  };\n\n  BatchEdit.prototype.setCellIdx = function (target) {\n    var gLen = 0;\n\n    if (this.parent.allowGrouping) {\n      gLen = this.parent.groupSettings.columns.length;\n    }\n\n    this.cellDetails.cellIndex = target.cellIndex - gLen;\n    this.cellDetails.rowIndex = parseInt(target.getAttribute('index'), 10);\n  };\n\n  BatchEdit.prototype.editCell = function (index, field, isAdd) {\n    var gObj = this.parent;\n    var col = gObj.getColumnByField(field);\n    this.index = index;\n    this.field = field;\n    this.isAdd = isAdd;\n    var checkEdit = gObj.isEdit && !(this.cellDetails.column.field === field && this.cellDetails.rowIndex === index && this.parent.getDataRows().length - 1 !== index);\n\n    if (gObj.editSettings.allowEditing) {\n      if (!checkEdit && col.allowEditing) {\n        this.editCellExtend(index, field, isAdd);\n      } else if (checkEdit) {\n        this.editNext = true;\n        this.saveCell();\n      }\n    }\n  };\n\n  BatchEdit.prototype.editCellExtend = function (index, field, isAdd) {\n    var _this = this;\n\n    var gObj = this.parent;\n    var col = gObj.getColumnByField(field);\n    var keys = gObj.getPrimaryKeyFieldNames();\n\n    if (gObj.isEdit) {\n      return;\n    }\n\n    var row;\n    var mRowData;\n    var rowData = extend({}, {}, this.getDataByIndex(index), true);\n\n    if (col.getFreezeTableName() === 'movable' || col.getFreezeTableName() === literals.frozenRight) {\n      row = col.getFreezeTableName() === 'movable' ? gObj.getMovableDataRows()[index] : gObj.getFrozenRightDataRows()[index];\n      mRowData = this.parent.getRowObjectFromUID(row.getAttribute('data-uid'));\n      rowData = mRowData.changes ? extend({}, {}, mRowData.changes, true) : rowData;\n    } else {\n      row = gObj.getDataRows()[index];\n      rowData = extend({}, {}, this.getDataByIndex(index), true);\n    }\n\n    if (keys[0] === col.field && !row.classList.contains('e-insertedrow') || col.columns || col.isPrimaryKey && col.isIdentity) {\n      this.parent.isLastCellPrimaryKey = true;\n      return;\n    }\n\n    this.parent.isLastCellPrimaryKey = false;\n    this.parent.element.classList.add('e-editing');\n    var rowObj = gObj.getRowObjectFromUID(row.getAttribute('data-uid'));\n    var cells = [].slice.apply(row.cells);\n    var args = {\n      columnName: col.field,\n      isForeignKey: !isNullOrUndefined(col.foreignKeyValue),\n      primaryKey: keys,\n      rowData: rowData,\n      validationRules: extend({}, col.validationRules ? col.validationRules : {}),\n      value: getObject(col.field, rowData),\n      type: !isAdd ? 'edit' : 'add',\n      cancel: false,\n      foreignKeyData: rowObj && rowObj.foreignKeyData\n    };\n\n    if (!isBlazor() || this.parent.isJsComponent) {\n      args.cell = cells[this.getColIndex(cells, this.getCellIdx(col.uid))];\n      args.row = row;\n      args.columnObject = col;\n\n      if (!args.cell) {\n        return;\n      }\n    }\n\n    gObj.trigger(events.cellEdit, args, function (cellEditArgs) {\n      if (cellEditArgs.cancel) {\n        return;\n      }\n\n      cellEditArgs.cell = cellEditArgs.cell ? cellEditArgs.cell : cells[_this.getColIndex(cells, _this.getCellIdx(col.uid))];\n      cellEditArgs.row = cellEditArgs.row ? cellEditArgs.row : row;\n      cellEditArgs.columnObject = cellEditArgs.columnObject ? cellEditArgs.columnObject : col;\n      cellEditArgs.columnObject.index = isNullOrUndefined(cellEditArgs.columnObject.index) ? 0 : cellEditArgs.columnObject.index;\n      _this.cellDetails = {\n        rowData: rowData,\n        column: col,\n        value: cellEditArgs.value,\n        isForeignKey: cellEditArgs.isForeignKey,\n        rowIndex: index,\n        cellIndex: parseInt(cellEditArgs.cell.getAttribute(literals.ariaColIndex), 10),\n        foreignKeyData: cellEditArgs.foreignKeyData\n      };\n\n      if (cellEditArgs.cell.classList.contains('e-updatedtd')) {\n        _this.isColored = true;\n        cellEditArgs.cell.classList.remove('e-updatedtd');\n      }\n\n      gObj.isEdit = true;\n      gObj.clearSelection();\n\n      if (!gObj.isCheckBoxSelection || !gObj.isPersistSelection) {\n        gObj.selectRow(_this.cellDetails.rowIndex, true);\n      }\n\n      _this.renderer.update(cellEditArgs);\n\n      _this.parent.notify(events.batchEditFormRendered, cellEditArgs);\n\n      _this.form = select('#' + gObj.element.id + 'EditForm', gObj.element);\n      gObj.editModule.applyFormValidation([col]);\n      _this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n    });\n  };\n\n  BatchEdit.prototype.updateCell = function (rowIndex, field, value) {\n    var gObj = this.parent;\n    var col = gObj.getColumnByField(field);\n    var index = gObj.getColumnIndexByField(field);\n\n    if (col && !col.isPrimaryKey && col.allowEditing) {\n      var td = getCellByColAndRowIndex(this.parent, col, rowIndex, index);\n      var rowObj = col.getFreezeTableName() === 'movable' ? this.parent.getMovableRowsObject()[rowIndex] : col.getFreezeTableName() === literals.frozenRight ? gObj.getFrozenRightRowsObject()[rowIndex] : gObj.getRowObjectFromUID(td.parentElement.getAttribute('data-uid'));\n      this.refreshTD(td, col, rowObj, value);\n      this.parent.trigger(events.queryCellInfo, {\n        cell: this.newReactTd || td,\n        column: col,\n        data: rowObj.changes\n      });\n    }\n  };\n\n  BatchEdit.prototype.setChanges = function (rowObj, field, value) {\n    var currentRowObj;\n\n    if (!this.parent.isFrozenGrid()) {\n      if (!rowObj.changes) {\n        rowObj.changes = extend({}, {}, rowObj.data, true);\n      }\n\n      if (!isNullOrUndefined(field)) {\n        DataUtil.setValue(field, value, rowObj.changes);\n      }\n\n      if (rowObj.data[field] !== value) {\n        var type = this.parent.getColumnByField(field).type;\n\n        if (type === 'date' || type === 'datetime') {\n          if (new Date(rowObj.data[field]).toString() !== new Date(value).toString()) {\n            rowObj.isDirty = true;\n          }\n        } else {\n          rowObj.isDirty = true;\n        }\n      }\n    } else {\n      var rowEle = this.parent.getRowElementByUID(rowObj.uid);\n      var rowIndex = parseInt(rowEle.getAttribute(literals.ariaRowIndex), 10);\n      currentRowObj = this.parent.getRowsObject()[rowIndex];\n\n      if (!currentRowObj.changes) {\n        currentRowObj.changes = extend({}, {}, rowObj.data, true);\n      }\n\n      if (!isNullOrUndefined(field)) {\n        setValue(field, value, currentRowObj.changes);\n      }\n\n      var movableRowObject = this.parent.getMovableRowsObject()[rowIndex];\n      movableRowObject.changes = extend({}, {}, currentRowObj.changes, true);\n\n      if (rowObj.data[field] !== value) {\n        movableRowObject.isDirty = true;\n        currentRowObj.isDirty = true;\n      }\n\n      if (this.parent.getFrozenMode() === literals.leftRight) {\n        var frRowObject = this.parent.getFrozenRightRowsObject()[rowIndex];\n        frRowObject.changes = extend({}, {}, currentRowObj.changes, true);\n\n        if (rowObj.data[field] !== value) {\n          frRowObject.isDirty = true;\n        }\n      }\n    }\n  };\n\n  BatchEdit.prototype.updateRow = function (index, data) {\n    var keys = Object.keys(data);\n\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n      var col = keys_1[_i];\n      this.updateCell(index, col, data[col]);\n    }\n  };\n\n  BatchEdit.prototype.getCellIdx = function (uid) {\n    var cIdx = this.parent.getColumnIndexByUid(uid) + this.parent.groupSettings.columns.length;\n\n    if (!isNullOrUndefined(this.parent.detailTemplate) || !isNullOrUndefined(this.parent.childGrid)) {\n      cIdx++;\n    }\n\n    if (this.parent.isRowDragable()) {\n      cIdx++;\n    }\n\n    return cIdx;\n  };\n\n  BatchEdit.prototype.refreshTD = function (td, column, rowObj, value) {\n    var cell = new CellRenderer(this.parent, this.serviceLocator);\n    var rowcell;\n    value = column.type === 'number' && !isNullOrUndefined(value) ? parseFloat(value) : value;\n    this.setChanges(rowObj, column.field, value);\n    var frzCols = this.parent.getFrozenColumns() || this.parent.getFrozenLeftColumnsCount() || this.parent.getFrozenRightColumnsCount();\n    frzCols = frzCols && this.parent.isRowDragable() ? frzCols + 1 : frzCols;\n    refreshForeignData(rowObj, this.parent.getForeignKeyColumns(), rowObj.changes);\n\n    if (frzCols && column.getFreezeTableName() === 'movable' && this.parent.getColumns().length === rowObj.cells.length) {\n      rowcell = rowObj.cells.slice(frzCols, rowObj.cells.length);\n    } else {\n      rowcell = rowObj.cells;\n    }\n\n    var parentElement;\n    var cellIndex;\n\n    if (this.parent.isReact) {\n      parentElement = td.parentElement;\n      cellIndex = td.cellIndex;\n    }\n\n    var index = 0;\n\n    if (frzCols) {\n      index = column.getFreezeTableName() === 'movable' && this.parent.getFrozenMode() !== 'Right' ? frzCols : column.getFreezeTableName() === literals.frozenRight ? this.parent.getFrozenLeftColumnsCount() + this.parent.getMovableColumnsCount() : index;\n    }\n\n    cell.refreshTD(td, rowcell[this.getCellIdx(column.uid) - index], rowObj.changes, {\n      'index': this.getCellIdx(column.uid)\n    });\n\n    if (this.parent.isReact) {\n      this.newReactTd = parentElement.cells[cellIndex];\n      parentElement.cells[cellIndex].classList.add('e-updatedtd');\n    } else {\n      td.classList.add('e-updatedtd');\n    }\n\n    td.classList.add('e-updatedtd');\n    this.parent.notify(events.toolbarRefresh, {});\n  };\n\n  BatchEdit.prototype.getColIndex = function (cells, index) {\n    var cIdx = 0;\n\n    if (this.parent.allowGrouping && this.parent.groupSettings.columns) {\n      cIdx = this.parent.groupSettings.columns.length;\n    }\n\n    if (!isNullOrUndefined(this.parent.detailTemplate) || !isNullOrUndefined(this.parent.childGrid)) {\n      cIdx++;\n    }\n\n    if (this.parent.isRowDragable()) {\n      cIdx++;\n    }\n\n    for (var m = 0; m < cells.length; m++) {\n      var colIndex = parseInt(cells[m].getAttribute(literals.ariaColIndex), 10);\n\n      if (colIndex === index - cIdx) {\n        return m;\n      }\n    }\n\n    return -1;\n  };\n\n  BatchEdit.prototype.editNextValCell = function () {\n    var gObj = this.parent;\n    var btmIdx = this.getBottomIndex();\n\n    if (this.isAdded && !gObj.isEdit) {\n      for (var i = this.cellDetails.cellIndex; i < gObj.getColumns().length; i++) {\n        if (gObj.isEdit) {\n          return;\n        }\n\n        var index = this.findNextEditableCell(this.cellDetails.cellIndex + 1, true, true);\n        var col = gObj.getColumns()[index];\n\n        if (col) {\n          if (this.parent.editSettings.newRowPosition === 'Bottom') {\n            this.editCell(btmIdx, col.field, true);\n          } else {\n            var args = {\n              index: 0,\n              column: col\n            };\n            this.parent.notify(events.nextCellIndex, args);\n            this.editCell(args.index, col.field, true);\n          }\n\n          this.saveCell();\n        }\n      }\n\n      if (!gObj.isEdit) {\n        this.isAdded = false;\n      }\n    }\n  };\n\n  BatchEdit.prototype.escapeCellEdit = function () {\n    var args = this.generateCellArgs();\n    args.value = args.previousValue;\n    this.successCallBack(args, args.cell.parentElement, args.column, true)(args);\n  };\n\n  BatchEdit.prototype.generateCellArgs = function () {\n    var gObj = this.parent;\n    this.parent.element.classList.remove('e-editing');\n    var column = this.cellDetails.column;\n    var obj = {};\n    obj[column.field] = getObject(column.field, this.cellDetails.rowData);\n    var editedData = gObj.editModule.getCurrentEditedData(this.form, obj);\n    var cloneEditedData = extend({}, editedData);\n    editedData = extend({}, editedData, this.cellDetails.rowData);\n    var value = getObject(column.field, cloneEditedData);\n\n    if (!isNullOrUndefined(column.field) && !isUndefined(value)) {\n      setValue(column.field, value, editedData);\n    }\n\n    var args = {\n      columnName: column.field,\n      value: getObject(column.field, editedData),\n      rowData: this.cellDetails.rowData,\n      column: column,\n      previousValue: this.cellDetails.value,\n      isForeignKey: this.cellDetails.isForeignKey,\n      cancel: false\n    };\n\n    if (!isBlazor() || this.parent.isJsComponent) {\n      args.cell = this.form.parentElement;\n      args.columnObject = column;\n    }\n\n    return args;\n  };\n\n  BatchEdit.prototype.saveCell = function (isForceSave) {\n    if (this.preventSaveCell || !this.form) {\n      return;\n    }\n\n    var gObj = this.parent;\n\n    if (!isForceSave && (!gObj.isEdit || this.validateFormObj())) {\n      return;\n    }\n\n    this.preventSaveCell = true;\n    var args = this.generateCellArgs();\n    var tr = args.cell.parentElement;\n    var col = args.column;\n\n    if (!isForceSave) {\n      gObj.trigger(events.cellSave, args, this.successCallBack(args, tr, col));\n      gObj.notify(events.batchForm, {\n        formObj: this.form\n      });\n    } else {\n      this.successCallBack(args, tr, col)(args);\n    }\n  };\n\n  BatchEdit.prototype.successCallBack = function (cellSaveArgs, tr, column, isEscapeCellEdit) {\n    var _this = this;\n\n    return function (cellSaveArgs) {\n      var gObj = _this.parent;\n      cellSaveArgs.cell = cellSaveArgs.cell ? cellSaveArgs.cell : _this.form.parentElement;\n      cellSaveArgs.columnObject = cellSaveArgs.columnObject ? cellSaveArgs.columnObject : column;\n      cellSaveArgs.columnObject.index = isNullOrUndefined(cellSaveArgs.columnObject.index) ? 0 : cellSaveArgs.columnObject.index;\n\n      if (cellSaveArgs.cancel) {\n        _this.preventSaveCell = false;\n\n        if (_this.editNext) {\n          _this.editNext = false;\n\n          if (_this.cellDetails.rowIndex === _this.index && _this.cellDetails.column.field === _this.field) {\n            return;\n          }\n\n          _this.editCellExtend(_this.index, _this.field, _this.isAdd);\n        }\n\n        return;\n      }\n\n      gObj.editModule.destroyWidgets([column]);\n      gObj.isEdit = false;\n      gObj.editModule.destroyForm();\n\n      _this.parent.notify(events.tooltipDestroy, {});\n\n      var rowObj = parentsUntil(cellSaveArgs.cell, literals.movableContent) || parentsUntil(cellSaveArgs.cell, literals.movableHeader) ? gObj.getRowObjectFromUID(tr.getAttribute('data-uid'), true) : gObj.getRowObjectFromUID(tr.getAttribute('data-uid'));\n\n      if (gObj.getFrozenMode() === literals.leftRight && (parentsUntil(cellSaveArgs.cell, 'e-frozen-right-header') || parentsUntil(cellSaveArgs.cell, 'e-frozen-right-content'))) {\n        rowObj = gObj.getRowObjectFromUID(tr.getAttribute('data-uid'), false, true);\n      }\n\n      _this.refreshTD(cellSaveArgs.cell, column, rowObj, cellSaveArgs.value);\n\n      if (_this.parent.isReact) {\n        cellSaveArgs.cell = _this.newReactTd;\n      }\n\n      removeClass([tr], [literals.editedRow, 'e-batchrow']);\n      removeClass([cellSaveArgs.cell], ['e-editedbatchcell', 'e-boolcell']);\n\n      if (!isNullOrUndefined(cellSaveArgs.value) && cellSaveArgs.value.toString() === (!isNullOrUndefined(_this.cellDetails.value) ? _this.cellDetails.value : '').toString() && !_this.isColored || isNullOrUndefined(cellSaveArgs.value) && isNullOrUndefined(rowObj.data[column.field]) && isNullOrUndefined(_this.cellDetails.value) && !cellSaveArgs.cell.parentElement.classList.contains('e-insertedrow')) {\n        cellSaveArgs.cell.classList.remove('e-updatedtd');\n      }\n\n      if (isNullOrUndefined(isEscapeCellEdit)) {\n        gObj.trigger(events.cellSaved, cellSaveArgs);\n      }\n\n      gObj.notify(events.toolbarRefresh, {});\n      _this.isColored = false;\n\n      if (_this.parent.aggregates.length > 0) {\n        _this.parent.notify(events.refreshFooterRenderer, {});\n\n        if (_this.parent.groupSettings.columns.length > 0 && !_this.isAddRow(_this.cellDetails.rowIndex)) {\n          _this.parent.notify(events.groupAggregates, {});\n        }\n      }\n\n      _this.preventSaveCell = false;\n\n      if (_this.editNext) {\n        _this.editNext = false;\n\n        if (_this.cellDetails.rowIndex === _this.index && _this.cellDetails.column.field === _this.field) {\n          return;\n        }\n\n        var col = gObj.getColumnByField(_this.field);\n\n        if (col && col.allowEditing) {\n          _this.editCellExtend(_this.index, _this.field, _this.isAdd);\n        }\n      }\n\n      if (isEscapeCellEdit) {\n        gObj.notify(events.restoreFocus, {});\n      }\n    };\n  };\n\n  BatchEdit.prototype.getDataByIndex = function (index) {\n    var row = this.parent.getRowObjectFromUID(this.parent.getDataRows()[index].getAttribute('data-uid'));\n    return row.changes ? row.changes : row.data;\n  };\n\n  BatchEdit.prototype.keyDownHandler = function (e) {\n    if ((e.action === 'tab' || e.action === 'shiftTab') && this.parent.isEdit) {\n      var gObj = this.parent;\n      var btmIdx = this.getBottomIndex();\n      var rowcell = parentsUntil(e.target, literals.rowCell);\n\n      if (rowcell) {\n        var cell = rowcell.querySelector('.e-field');\n\n        if (cell) {\n          var visibleColumns = this.parent.getVisibleColumns();\n          var columnIndex = e.action === 'tab' ? visibleColumns.length - 1 : 0;\n\n          if (visibleColumns[columnIndex].field === cell.getAttribute('id').slice(this.parent.element.id.length)) {\n            if (this.cellDetails.rowIndex === btmIdx && e.action === 'tab') {\n              if (gObj.editSettings.newRowPosition === 'Top') {\n                gObj.editSettings.newRowPosition = 'Bottom';\n                this.addRecord();\n                gObj.editSettings.newRowPosition = 'Top';\n              } else {\n                this.addRecord();\n              }\n            } else {\n              this.saveCell();\n            }\n          }\n        }\n      }\n    }\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n\n\n  BatchEdit.prototype.addCancelWhilePaging = function () {\n    if (this.validateFormObj()) {\n      this.parent.notify(events.destroyForm, {});\n      this.parent.isEdit = false;\n      this.isColored = false;\n    }\n  };\n\n  BatchEdit.prototype.getBottomIndex = function () {\n    var changes = this.getBatchChanges();\n    return this.parent.getCurrentViewRecords().length + changes[literals.addedRecords].length - changes[literals.deletedRecords].length - 1;\n  };\n\n  return BatchEdit;\n}();\n\nexport { BatchEdit };","map":{"version":3,"sources":["/Users/zhouzhou/Desktop/lightfront/node_modules/@syncfusion/ej2-grids/src/grid/actions/batch-edit.js"],"names":["extend","addClass","removeClass","setValue","isBlazor","closest","select","remove","classList","isNullOrUndefined","isUndefined","CellType","parentsUntil","inArray","refreshForeignData","getObject","alignFrozenEditForm","gridActionHandler","addRemoveEventListener","splitFrozenRowObjectCells","getGridRowElements","sliceElements","getCellByColAndRowIndex","getMovableTbody","getFrozenRightTbody","getGridRowObjects","events","RowRenderer","CellRenderer","Row","Cell","RowModelGenerator","DataUtil","literals","BatchEdit","parent","serviceLocator","renderer","cellDetails","originalCell","cloneCell","editNext","preventSaveCell","focus","getService","addEventListener","prototype","isDestroyed","evtHandlers","event","click","handler","clickHandler","dblclick","dblClickHandler","beforeCellFocused","onBeforeCellFocused","cellFocused","onCellFocused","doubleTap","keyPressed","keyDownHandler","editNextValCell","closeBatch","closeForm","dataBoundFunction","dataBound","bind","batchCancelFunction","batchCancel","removeEventListener","focusModule","restoreFocus","notify","toolbarRefresh","destroy","e","target","element","id","isEdit","form","saveCell","rowCell","setCellIdx","tr","row","rowIndex","parseInt","getAttribute","ariaRowIndex","colIndex","ariaColIndex","isNaN","parentElement","contains","editedRow","editCell","getColumns","field","isAddRow","validateFormObj","byClick","indexOf","keyArgs","action","cancel","clickArgs","preventDefault","frzCols","getFrozenLeftCount","frzRightCols","getFrozenRightColumnsCount","mCont","getContent","querySelector","movableContent","mHdr","getHeaderContent","movableHeader","clear","container","isContent","isDataCell","frozenRows","isHeader","byKey","_a","indexes","cellIndex","frHdr","frCont","getMovableColumnsCount","getElementsByClassName","length","col","isLastCellPrimaryKey","editCellFromIndex","args","column","index","getDataRows","rowIdx","cellIdx","closeEdit","_this","gObj","rows","getRowsObject","argument","batchChanges","getBatchChanges","beforeBatchCancel","isAdded","clearSelection","allRows","_loop_1","i","isInsert","isDirty","this_1","tableName","removeBatchElementChanges","splice","out_i_1","getContentTable","renderModule","renderEmptyRow","requestType","isDataRow","cells","visible","selectRow","refreshRowIdx","tooltipDestroy","trigger","rowRenderer","isInstertedRemoved","getRowElementByUID","uid","getForeignKeyColumns","data","changes","edit","refresh","aggregates","type","editType","refreshFooterRenderer","groupSettings","columns","groupAggregates","removeHideAndSelection","removeAttribute","tdElements","slice","call","deleteRecord","fieldname","bulkDelete","addRecord","bulkAddRow","endEdit","batchSave","Object","keys","j","replaceWith","editModule","formObj","validate","deletedRecords","isCheckBoxSelection","checkAllBox","pageSettings","totalRecordsCount","currentViewData","selectionSettings","persistSelection","removeSelectedData","original","changedRecords","filter","map","beforeBatchSave","beforeBatchSaveArgs","showSpinner","bulkSave","addedRecords","_i","rows_1","push","removeRowObjectFromUID","len","addRowObject","isTop","editSettings","newRowPosition","rowClone","clone","unshift","selectedRowIndex","selectedRows","getSelectedRows","primaryKey","getPrimaryKeyFieldNames","rowData","getSelectedRecords","isJsComponent","deleteRowUid","getRows","getCurrentViewRecords","beforeBatchDelete","beforeBatchDeleteArgs","isFrozenGrid","getRowByIndex","getMovableRowByIndex","getFrozenMode","leftRight","getFrozenRightRowByIndex","rowObj","getRowObjectFromUID","getMovableDataRows","getMovableHeaderTbody","appendChild","getFrozenHeaderTbody","getFrozenRightHeaderTbody","getHeaderTable","tbody","uniqueid","selectedRow","undefined","batchDelete","getAllDataRows","dataRows","dataObjects","_loop_2","this_2","rowElements","rowObjects","setAttribute","toString","out_j_1","getIndexFromData","allowAdding","add","defaultData","getDefaultData","beforeBatchAdd","beforeBatchAddArgs","mTr","frTr","model","modelData","generateRows","render","insertBefore","createElement","className","firstChild","cellType","Indent","emptyRow","parentNode","removeChild","removeFrozenTbody","cloneNode","renderMovable","renderFrozenAddRow","forgetPrevious","batchAdd","isFrozen","btmIdx","getBottomIndex","findNextEditableCell","args1","columnObject","columnIndex","cell","mTbody","frTbody","height","frozenHeight","moveTbody","firstElementChild","ele","rightEle","mEle","movable","left","right","children","isAdd","isValOnly","cols","endIndex","validation","validationRules","checkNPCell","template","allowEditing","isIdentity","isPrimaryKey","dValues","columnModel","defaultValue","gLen","allowGrouping","getColumnByField","checkEdit","editCellExtend","mRowData","getDataByIndex","getFreezeTableName","frozenRight","getFrozenRightDataRows","apply","columnName","isForeignKey","foreignKeyValue","value","foreignKeyData","getColIndex","getCellIdx","cellEdit","cellEditArgs","isColored","isPersistSelection","update","batchEditFormRendered","applyFormValidation","style","display","updateCell","getColumnIndexByField","td","getMovableRowsObject","getFrozenRightRowsObject","refreshTD","queryCellInfo","newReactTd","setChanges","currentRowObj","Date","rowEle","movableRowObject","frRowObject","updateRow","keys_1","cIdx","getColumnIndexByUid","detailTemplate","childGrid","isRowDragable","rowcell","parseFloat","getFrozenColumns","getFrozenLeftColumnsCount","isReact","m","nextCellIndex","escapeCellEdit","generateCellArgs","previousValue","successCallBack","obj","editedData","getCurrentEditedData","cloneEditedData","isForceSave","cellSave","batchForm","cellSaveArgs","isEscapeCellEdit","destroyWidgets","destroyForm","cellSaved","visibleColumns","getVisibleColumns","addCancelWhilePaging"],"mappings":"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","sourcesContent":["import { extend, addClass, removeClass, setValue, isBlazor, closest, select } from '@syncfusion/ej2-base';\nimport { remove, classList } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, isUndefined } from '@syncfusion/ej2-base';\nimport { CellType } from '../base/enum';\nimport { parentsUntil, inArray, refreshForeignData, getObject, alignFrozenEditForm, gridActionHandler, addRemoveEventListener } from '../base/util';\nimport { splitFrozenRowObjectCells, getGridRowElements } from '../base/util';\nimport { sliceElements, getCellByColAndRowIndex, getMovableTbody, getFrozenRightTbody } from '../base/util';\nimport { getGridRowObjects } from '../base/util';\nimport * as events from '../base/constant';\nimport { RowRenderer } from '../renderer/row-renderer';\nimport { CellRenderer } from '../renderer/cell-renderer';\nimport { Row } from '../models/row';\nimport { Cell } from '../models/cell';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { DataUtil } from '@syncfusion/ej2-data';\nimport * as literals from '../base/string-literals';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n *\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent, serviceLocator, renderer) {\n        this.cellDetails = {};\n        this.originalCell = {};\n        this.cloneCell = {};\n        this.editNext = false;\n        this.preventSaveCell = false;\n        this.parent = parent;\n        this.serviceLocator = serviceLocator;\n        this.renderer = renderer;\n        this.focus = serviceLocator.getService('focus');\n        this.addEventListener();\n    }\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.evtHandlers = [{ event: events.click, handler: this.clickHandler },\n            { event: events.dblclick, handler: this.dblClickHandler },\n            { event: events.beforeCellFocused, handler: this.onBeforeCellFocused },\n            { event: events.cellFocused, handler: this.onCellFocused },\n            { event: events.doubleTap, handler: this.dblClickHandler },\n            { event: events.keyPressed, handler: this.keyDownHandler },\n            { event: events.editNextValCell, handler: this.editNextValCell },\n            { event: events.closeBatch, handler: this.closeForm }];\n        addRemoveEventListener(this.parent, this.evtHandlers, true, this);\n        this.dataBoundFunction = this.dataBound.bind(this);\n        this.batchCancelFunction = this.batchCancel.bind(this);\n        this.parent.addEventListener(events.dataBound, this.dataBoundFunction);\n        this.parent.addEventListener(events.batchCancel, this.batchCancelFunction);\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        addRemoveEventListener(this.parent, this.evtHandlers, false);\n        this.parent.removeEventListener(events.dataBound, this.dataBoundFunction);\n        this.parent.removeEventListener(events.batchCancel, this.batchCancelFunction);\n    };\n    BatchEdit.prototype.batchCancel = function () {\n        this.parent.focusModule.restoreFocus();\n    };\n    BatchEdit.prototype.dataBound = function () {\n        this.parent.notify(events.toolbarRefresh, {});\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    BatchEdit.prototype.clickHandler = function (e) {\n        if (!parentsUntil(e.target, this.parent.element.id + '_add', true)) {\n            if (this.parent.isEdit && closest(this.form, 'td') !== closest(e.target, 'td')) {\n                this.saveCell();\n                this.editNextValCell();\n            }\n            if (parentsUntil(e.target, literals.rowCell) && !this.parent.isEdit) {\n                this.setCellIdx(e.target);\n            }\n        }\n    };\n    BatchEdit.prototype.dblClickHandler = function (e) {\n        var target = parentsUntil(e.target, literals.rowCell);\n        var tr = parentsUntil(e.target, literals.row);\n        var rowIndex = tr && parseInt(tr.getAttribute(literals.ariaRowIndex), 10);\n        var colIndex = target && parseInt(target.getAttribute(literals.ariaColIndex), 10);\n        if (!isNullOrUndefined(target) && !isNullOrUndefined(rowIndex) && !isNaN(colIndex)\n            && !target.parentElement.classList.contains(literals.editedRow)) {\n            this.editCell(rowIndex, this.parent.getColumns()[colIndex].field, this.isAddRow(rowIndex));\n        }\n    };\n    BatchEdit.prototype.onBeforeCellFocused = function (e) {\n        if (this.parent.isEdit && this.validateFormObj() &&\n            (e.byClick || (['tab', 'shiftTab', 'enter', 'shiftEnter'].indexOf(e.keyArgs.action) > -1))) {\n            e.cancel = true;\n            if (e.byClick) {\n                e.clickArgs.preventDefault();\n            }\n            else {\n                e.keyArgs.preventDefault();\n            }\n        }\n    };\n    BatchEdit.prototype.onCellFocused = function (e) {\n        var frzCols = this.parent.getFrozenLeftCount();\n        var frzRightCols = this.parent.getFrozenRightColumnsCount();\n        var mCont = this.parent.getContent().querySelector('.' + literals.movableContent);\n        var mHdr = this.parent.getHeaderContent().querySelector('.' + literals.movableHeader);\n        var clear = (!e.container.isContent || !e.container.isDataCell) && !(this.parent.frozenRows && e.container.isHeader);\n        if (!e.byKey || clear) {\n            if (this.parent.isEdit && clear) {\n                this.saveCell();\n            }\n            return;\n        }\n        var _a = e.container.indexes, rowIndex = _a[0], cellIndex = _a[1];\n        if (frzCols && (mCont.contains(e.element) || (this.parent.frozenRows && mHdr.contains(e.element)))) {\n            cellIndex += frzCols;\n        }\n        if (frzRightCols) {\n            var frHdr = this.parent.getHeaderContent().querySelector('.e-frozen-right-header');\n            var frCont = this.parent.getContent().querySelector('.e-frozen-right-content');\n            if (frCont.contains(e.element) || (this.parent.frozenRows && frHdr.contains(e.element))) {\n                cellIndex += (frzCols + this.parent.getMovableColumnsCount());\n            }\n        }\n        if (this.parent.frozenRows && e.container.isContent) {\n            rowIndex += this.parent.frozenRows;\n        }\n        var isEdit = this.parent.isEdit;\n        if (!this.parent.element.getElementsByClassName('e-popup-open').length) {\n            isEdit = isEdit && !this.validateFormObj();\n            switch (e.keyArgs.action) {\n                case 'tab':\n                case 'shiftTab':\n                    // eslint-disable-next-line no-case-declarations\n                    var col = this.parent.getColumns()[e.indexes[1]];\n                    if (col && !this.parent.isEdit) {\n                        this.editCell(e.indexes[0], col.field);\n                    }\n                    if (isEdit || this.parent.isLastCellPrimaryKey) {\n                        this.editCellFromIndex(rowIndex, cellIndex);\n                    }\n                    break;\n                case 'enter':\n                case 'shiftEnter':\n                    e.keyArgs.preventDefault();\n                    // eslint-disable-next-line no-case-declarations\n                    var args = { cancel: false, keyArgs: e.keyArgs };\n                    this.parent.notify('beforeFocusCellEdit', args);\n                    if (!args.cancel && isEdit) {\n                        this.editCell(rowIndex, this.cellDetails.column.field);\n                    }\n                    break;\n                case 'f2':\n                    this.editCellFromIndex(rowIndex, cellIndex);\n                    this.focus.focus();\n                    break;\n            }\n        }\n    };\n    BatchEdit.prototype.isAddRow = function (index) {\n        return this.parent.getDataRows()[index].classList.contains('e-insertedrow');\n    };\n    BatchEdit.prototype.editCellFromIndex = function (rowIdx, cellIdx) {\n        this.cellDetails.rowIndex = rowIdx;\n        this.cellDetails.cellIndex = cellIdx;\n        this.editCell(rowIdx, this.parent.getColumns()[cellIdx].field, this.isAddRow(rowIdx));\n    };\n    BatchEdit.prototype.closeEdit = function () {\n        var _this = this;\n        var gObj = this.parent;\n        var rows = this.parent.getRowsObject();\n        var argument = { cancel: false, batchChanges: this.getBatchChanges() };\n        gObj.notify(events.beforeBatchCancel, argument);\n        if (argument.cancel) {\n            return;\n        }\n        if (gObj.isEdit) {\n            this.saveCell(true);\n        }\n        this.isAdded = false;\n        gObj.clearSelection();\n        var allRows = getGridRowObjects(this.parent);\n        var _loop_1 = function (i) {\n            var isInsert = false;\n            var isDirty = rows[i].isDirty;\n            gridActionHandler(this_1.parent, function (tableName, rows) {\n                isInsert = _this.removeBatchElementChanges(rows[i], isDirty);\n                if (isInsert) {\n                    rows.splice(i, 1);\n                }\n            }, allRows);\n            if (isInsert) {\n                i--;\n            }\n            out_i_1 = i;\n        };\n        var this_1 = this, out_i_1;\n        for (var i = 0; i < rows.length; i++) {\n            _loop_1(i);\n            i = out_i_1;\n        }\n        if (!gObj.getContentTable().querySelector('tr.e-row')) {\n            gObj.renderModule.renderEmptyRow();\n        }\n        var args = {\n            requestType: 'batchCancel', rows: this.parent.getRowsObject()\n        };\n        gObj.notify(events.batchCancel, {\n            rows: this.parent.getRowsObject().length ? this.parent.getRowsObject() :\n                [new Row({ isDataRow: true, cells: [new Cell({ isDataCell: true, visible: true })] })]\n        });\n        gObj.selectRow(this.cellDetails.rowIndex);\n        this.refreshRowIdx();\n        gObj.notify(events.toolbarRefresh, {});\n        this.parent.notify(events.tooltipDestroy, {});\n        args = { requestType: 'batchCancel', rows: this.parent.getRowsObject() };\n        gObj.trigger(events.batchCancel, args);\n    };\n    BatchEdit.prototype.removeBatchElementChanges = function (row, isDirty) {\n        var gObj = this.parent;\n        var rowRenderer = new RowRenderer(this.serviceLocator, null, this.parent);\n        var isInstertedRemoved = false;\n        if (isDirty) {\n            row.isDirty = isDirty;\n            var tr = gObj.getRowElementByUID(row.uid);\n            if (tr) {\n                if (tr.classList.contains('e-insertedrow')) {\n                    remove(tr);\n                    isInstertedRemoved = true;\n                }\n                else {\n                    refreshForeignData(row, this.parent.getForeignKeyColumns(), row.data);\n                    delete row.changes;\n                    delete row.edit;\n                    row.isDirty = false;\n                    classList(tr, [], ['e-hiddenrow', 'e-updatedtd']);\n                    rowRenderer.refresh(row, gObj.getColumns(), false);\n                }\n                if (this.parent.aggregates.length > 0) {\n                    var type = 'type';\n                    var editType = [];\n                    editType[type] = 'cancel';\n                    this.parent.notify(events.refreshFooterRenderer, editType);\n                    if (this.parent.groupSettings.columns.length > 0) {\n                        this.parent.notify(events.groupAggregates, editType);\n                    }\n                }\n            }\n        }\n        return isInstertedRemoved;\n    };\n    BatchEdit.prototype.removeHideAndSelection = function (tr) {\n        if (tr.classList.contains('e-hiddenrow')) {\n            tr.removeAttribute('aria-selected');\n            var tdElements = [].slice.call(tr.getElementsByClassName('e-selectionbackground'));\n            for (var i = 0; i < tdElements.length; i++) {\n                removeClass([tdElements[i]], ['e-selectionbackground', 'e-active']);\n            }\n        }\n        classList(tr, [], ['e-hiddenrow', 'e-updatedtd']);\n    };\n    BatchEdit.prototype.deleteRecord = function (fieldname, data) {\n        this.saveCell();\n        if (this.validateFormObj()) {\n            this.saveCell(true);\n        }\n        this.isAdded = false;\n        this.bulkDelete(fieldname, data);\n        if (this.parent.aggregates.length > 0) {\n            this.parent.notify(events.refreshFooterRenderer, {});\n            if (this.parent.groupSettings.columns.length > 0) {\n                this.parent.notify(events.groupAggregates, {});\n            }\n        }\n    };\n    BatchEdit.prototype.addRecord = function (data) {\n        this.bulkAddRow(data);\n    };\n    BatchEdit.prototype.endEdit = function () {\n        if (this.parent.isEdit && this.validateFormObj()) {\n            return;\n        }\n        this.batchSave();\n    };\n    BatchEdit.prototype.closeForm = function () {\n        for (var i = 0; i < Object.keys(this.originalCell).length; i++) {\n            for (var j = 0; j < Object.keys(this.cloneCell).length; j++) {\n                if (Object.keys(this.originalCell)[i] === Object.keys(this.cloneCell)[j]) {\n                    this.cloneCell[Object.keys(this.cloneCell)[j]].replaceWith(this.originalCell[Object.keys(this.originalCell)[i]]);\n                    if (this.originalCell[Object.keys(this.originalCell)[i]].classList.contains('e-selectionbackground')) {\n                        this.originalCell[Object.keys(this.originalCell)[i]]\n                            .classList.remove('e-selectionbackground', 'e-cellselectionbackground', 'e-active');\n                    }\n                }\n            }\n        }\n        this.cloneCell = {};\n        this.originalCell = {};\n    };\n    BatchEdit.prototype.validateFormObj = function () {\n        return this.parent.editModule.formObj && !this.parent.editModule.formObj.validate();\n    };\n    BatchEdit.prototype.batchSave = function () {\n        var gObj = this.parent;\n        var deletedRecords = 'deletedRecords';\n        if (gObj.isCheckBoxSelection) {\n            var checkAllBox = gObj.element.querySelector('.e-checkselectall').parentElement;\n            if (checkAllBox.classList.contains('e-checkbox-disabled') &&\n                gObj.pageSettings.totalRecordsCount > gObj.currentViewData.length) {\n                removeClass([checkAllBox], ['e-checkbox-disabled']);\n            }\n        }\n        this.saveCell();\n        if (gObj.isEdit || this.editNextValCell() || gObj.isEdit) {\n            return;\n        }\n        var changes = this.getBatchChanges();\n        if (this.parent.selectionSettings.type === 'Multiple' && changes[deletedRecords].length &&\n            this.parent.selectionSettings.persistSelection) {\n            changes[deletedRecords] = this.removeSelectedData;\n            this.removeSelectedData = [];\n        }\n        var original = {\n            changedRecords: this.parent.getRowsObject()\n                .filter(function (row) { return row.isDirty && ['add', 'delete'].indexOf(row.edit) === -1; })\n                .map(function (row) { return row.data; })\n        };\n        var args = { batchChanges: changes, cancel: false };\n        gObj.trigger(events.beforeBatchSave, args, function (beforeBatchSaveArgs) {\n            if (beforeBatchSaveArgs.cancel) {\n                return;\n            }\n            gObj.showSpinner();\n            gObj.notify(events.bulkSave, { changes: changes, original: original });\n        });\n    };\n    BatchEdit.prototype.getBatchChanges = function () {\n        var changes = {\n            addedRecords: [],\n            deletedRecords: [],\n            changedRecords: []\n        };\n        var rows = this.parent.getRowsObject();\n        for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n            var row = rows_1[_i];\n            if (row.isDirty) {\n                switch (row.edit) {\n                    case 'add':\n                        changes.addedRecords.push(row.changes);\n                        break;\n                    case 'delete':\n                        changes.deletedRecords.push(row.data);\n                        break;\n                    default:\n                        changes.changedRecords.push(row.changes);\n                }\n            }\n        }\n        return changes;\n    };\n    /**\n     * @param {string} uid - specifes the uid\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.removeRowObjectFromUID = function (uid) {\n        var rows = this.parent.getRowsObject();\n        var i = 0;\n        for (var len = rows.length; i < len; i++) {\n            if (rows[i].uid === uid) {\n                break;\n            }\n        }\n        gridActionHandler(this.parent, function (tableName, rows) {\n            rows.splice(i, 1);\n        }, getGridRowObjects(this.parent));\n    };\n    /**\n     * @param {Row<Column>} row - specifies the row object\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.addRowObject = function (row) {\n        var gObj = this.parent;\n        var isTop = gObj.editSettings.newRowPosition === 'Top';\n        gridActionHandler(this.parent, function (tableName, rows) {\n            var rowClone = row.clone();\n            rowClone.cells = splitFrozenRowObjectCells(gObj, rowClone.cells, tableName);\n            if (isTop) {\n                rows.unshift(rowClone);\n            }\n            else {\n                rows.push(rowClone);\n            }\n        }, getGridRowObjects(this.parent), true);\n    };\n    // tslint:disable-next-line:max-func-body-length\n    BatchEdit.prototype.bulkDelete = function (fieldname, data) {\n        var _this = this;\n        this.removeSelectedData = [];\n        var gObj = this.parent;\n        var index = gObj.selectedRowIndex;\n        var selectedRows = gObj.getSelectedRows();\n        var args = {\n            primaryKey: this.parent.getPrimaryKeyFieldNames(),\n            rowIndex: index,\n            rowData: data ? data : gObj.getSelectedRecords()[0],\n            cancel: false\n        };\n        if (!isBlazor() || this.parent.isJsComponent) {\n            if (data) {\n                args.row = gObj.editModule.deleteRowUid ? gObj.getRowElementByUID(gObj.editModule.deleteRowUid)\n                    : gObj.getRows()[gObj.getCurrentViewRecords().indexOf(data)];\n            }\n            else {\n                args.row = data ? gObj.getRows()[index] : selectedRows[0];\n            }\n            if (!args.row) {\n                return;\n            }\n        }\n        // tslint:disable-next-line:max-func-body-length\n        gObj.trigger(events.beforeBatchDelete, args, function (beforeBatchDeleteArgs) {\n            if (beforeBatchDeleteArgs.cancel) {\n                return;\n            }\n            _this.removeSelectedData = gObj.getSelectedRecords();\n            gObj.clearSelection();\n            beforeBatchDeleteArgs.row = beforeBatchDeleteArgs.row ?\n                beforeBatchDeleteArgs.row : data ? gObj.getRows()[index] : selectedRows[0];\n            if (_this.parent.isFrozenGrid()) {\n                if (data) {\n                    index = parseInt(beforeBatchDeleteArgs.row.getAttribute(literals.ariaRowIndex), 10);\n                    selectedRows = [];\n                    selectedRows.push(gObj.getRowByIndex(index));\n                    selectedRows.push(gObj.getMovableRowByIndex(index));\n                    if (gObj.getFrozenMode() === literals.leftRight) {\n                        selectedRows.push(gObj.getFrozenRightRowByIndex(index));\n                    }\n                }\n                for (var i = 0; i < selectedRows.length; i++) {\n                    var uid = selectedRows[i].getAttribute('data-uid');\n                    if (selectedRows[i].classList.contains('e-insertedrow')) {\n                        _this.removeRowObjectFromUID(uid);\n                        remove(selectedRows[i]);\n                    }\n                    else {\n                        var rowObj = gObj.getRowObjectFromUID(uid);\n                        rowObj.isDirty = true;\n                        rowObj.edit = 'delete';\n                        classList(selectedRows[i], ['e-hiddenrow', 'e-updatedtd'], []);\n                        if (gObj.frozenRows && index < gObj.frozenRows && gObj.getMovableDataRows().length >= gObj.frozenRows) {\n                            gObj.getMovableHeaderTbody().appendChild(gObj.getMovableRowByIndex(gObj.frozenRows - 1));\n                            gObj.getFrozenHeaderTbody().appendChild(gObj.getRowByIndex(gObj.frozenRows - 1));\n                            if (gObj.getFrozenMode() === literals.leftRight) {\n                                gObj.getFrozenRightHeaderTbody().appendChild(gObj.getFrozenRightRowByIndex(gObj.frozenRows - 1));\n                            }\n                        }\n                        if (gObj.frozenRows && index < gObj.frozenRows && gObj.getDataRows().length >= gObj.frozenRows) {\n                            gObj.getHeaderTable().querySelector(literals.tbody).appendChild(gObj.getRowByIndex(gObj.frozenRows - 1));\n                        }\n                    }\n                    delete selectedRows[i];\n                }\n            }\n            else if (!_this.parent.isFrozenGrid() && (selectedRows.length === 1 || data)) {\n                var uid = beforeBatchDeleteArgs.row.getAttribute('data-uid');\n                uid = data && _this.parent.editModule.deleteRowUid ? uid = _this.parent.editModule.deleteRowUid : uid;\n                if (beforeBatchDeleteArgs.row.classList.contains('e-insertedrow')) {\n                    _this.removeRowObjectFromUID(uid);\n                    remove(beforeBatchDeleteArgs.row);\n                }\n                else {\n                    var rowObj = gObj.getRowObjectFromUID(uid);\n                    rowObj.isDirty = true;\n                    rowObj.edit = 'delete';\n                    classList(beforeBatchDeleteArgs.row, ['e-hiddenrow', 'e-updatedtd'], []);\n                }\n                delete beforeBatchDeleteArgs.row;\n            }\n            else {\n                for (var i = 0; i < selectedRows.length; i++) {\n                    var uniqueid = selectedRows[i].getAttribute('data-uid');\n                    if (selectedRows[i].classList.contains('e-insertedrow')) {\n                        _this.removeRowObjectFromUID(uniqueid);\n                        remove(selectedRows[i]);\n                    }\n                    else {\n                        classList(selectedRows[i], ['e-hiddenrow', 'e-updatedtd'], []);\n                        var selectedRow = gObj.getRowObjectFromUID(uniqueid);\n                        selectedRow.isDirty = true;\n                        selectedRow.edit = 'delete';\n                        delete selectedRows[i];\n                    }\n                }\n            }\n            _this.refreshRowIdx();\n            if (data) {\n                gObj.editModule.deleteRowUid = undefined;\n                if (gObj.getSelectedRows().length) {\n                    index = parseInt(gObj.getSelectedRows()[0].getAttribute(literals.ariaRowIndex), 10);\n                }\n            }\n            if (!gObj.isCheckBoxSelection) {\n                gObj.selectRow(index);\n            }\n            gObj.trigger(events.batchDelete, beforeBatchDeleteArgs);\n            gObj.notify(events.batchDelete, { rows: _this.parent.getRowsObject() });\n            gObj.notify(events.toolbarRefresh, {});\n        });\n    };\n    BatchEdit.prototype.refreshRowIdx = function () {\n        var gObj = this.parent;\n        var rows = gObj.getAllDataRows(true);\n        var dataRows = getGridRowElements(this.parent);\n        var dataObjects = getGridRowObjects(this.parent);\n        var _loop_2 = function (i, j, len) {\n            if (rows[i].classList.contains(literals.row) && !rows[i].classList.contains('e-hiddenrow')) {\n                gridActionHandler(this_2.parent, function (tableName, rowElements, rowObjects) {\n                    rowElements[i].setAttribute(literals.ariaRowIndex, j.toString());\n                    rowObjects[i].index = j;\n                }, dataRows, null, dataObjects);\n                j++;\n            }\n            else {\n                gridActionHandler(this_2.parent, function (tableName, rowElements, rowObjects) {\n                    rowElements[i].removeAttribute(literals.ariaRowIndex);\n                    rowObjects[i].index = -1;\n                }, dataRows, null, dataObjects);\n            }\n            out_j_1 = j;\n        };\n        var this_2 = this, out_j_1;\n        for (var i = 0, j = 0, len = rows.length; i < len; i++) {\n            _loop_2(i, j, len);\n            j = out_j_1;\n        }\n    };\n    BatchEdit.prototype.getIndexFromData = function (data) {\n        return inArray(data, this.parent.getCurrentViewRecords());\n    };\n    BatchEdit.prototype.bulkAddRow = function (data) {\n        var _this = this;\n        var gObj = this.parent;\n        if (!gObj.editSettings.allowAdding) {\n            return;\n        }\n        if (gObj.isEdit) {\n            this.saveCell();\n            this.parent.notify(events.editNextValCell, {});\n        }\n        if (gObj.isEdit) {\n            return;\n        }\n        this.parent.element.classList.add('e-editing');\n        var defaultData = data ? data : this.getDefaultData();\n        var args = {\n            defaultData: defaultData,\n            primaryKey: gObj.getPrimaryKeyFieldNames(),\n            cancel: false\n        };\n        gObj.trigger(events.beforeBatchAdd, args, function (beforeBatchAddArgs) {\n            if (beforeBatchAddArgs.cancel) {\n                return;\n            }\n            _this.isAdded = true;\n            gObj.clearSelection();\n            var mTr;\n            var frTr;\n            var row = new RowRenderer(_this.serviceLocator, null, _this.parent);\n            var model = new RowModelGenerator(_this.parent);\n            var modelData = model.generateRows([beforeBatchAddArgs.defaultData]);\n            var tr = row.render(modelData[0], gObj.getColumns());\n            var col;\n            var index;\n            for (var i = 0; i < _this.parent.groupSettings.columns.length; i++) {\n                tr.insertBefore(_this.parent.createElement('td', { className: 'e-indentcell' }), tr.firstChild);\n                modelData[0].cells.unshift(new Cell({ cellType: CellType.Indent }));\n            }\n            var tbody = gObj.getContentTable().querySelector(literals.tbody);\n            tr.classList.add('e-insertedrow');\n            if (tbody.querySelector('.e-emptyrow')) {\n                var emptyRow = tbody.querySelector('.e-emptyrow');\n                emptyRow.parentNode.removeChild(emptyRow);\n                _this.removeFrozenTbody();\n            }\n            if (gObj.isFrozenGrid()) {\n                frTr = tr.cloneNode(true);\n                mTr = _this.renderMovable(tr, frTr);\n                tr = gObj.getFrozenMode() === 'Right' ? frTr : tr;\n                _this.renderFrozenAddRow(tr, mTr, frTr);\n            }\n            if (gObj.frozenRows && gObj.editSettings.newRowPosition === 'Top') {\n                tbody = gObj.getHeaderTable().querySelector(literals.tbody);\n            }\n            else {\n                tbody = gObj.getContentTable().querySelector(literals.tbody);\n            }\n            if (_this.parent.editSettings.newRowPosition === 'Top') {\n                tbody.insertBefore(tr, tbody.firstChild);\n            }\n            else {\n                tbody.appendChild(tr);\n            }\n            addClass([].slice.call(tr.getElementsByClassName(literals.rowCell)), ['e-updatedtd']);\n            modelData[0].isDirty = true;\n            modelData[0].changes = extend({}, {}, modelData[0].data, true);\n            modelData[0].edit = 'add';\n            _this.addRowObject(modelData[0]);\n            _this.refreshRowIdx();\n            _this.focus.forgetPrevious();\n            gObj.notify(events.batchAdd, { rows: _this.parent.getRowsObject(), args: { isFrozen: _this.parent.isFrozenGrid() } });\n            var changes = _this.getBatchChanges();\n            var btmIdx = _this.getBottomIndex();\n            if (_this.parent.editSettings.newRowPosition === 'Top') {\n                gObj.selectRow(0);\n            }\n            else {\n                gObj.selectRow(btmIdx);\n            }\n            if (!data) {\n                index = _this.findNextEditableCell(0, true);\n                col = gObj.getColumns()[index];\n                if (_this.parent.editSettings.newRowPosition === 'Top') {\n                    _this.editCell(0, col.field, true);\n                }\n                else {\n                    _this.editCell(btmIdx, col.field, true);\n                }\n            }\n            if (_this.parent.aggregates.length > 0 && (data || changes[literals.addedRecords].length)) {\n                _this.parent.notify(events.refreshFooterRenderer, {});\n            }\n            var args1 = {\n                defaultData: beforeBatchAddArgs.defaultData, row: tr,\n                columnObject: col, columnIndex: index, primaryKey: beforeBatchAddArgs.primaryKey, cell: tr.cells[index]\n            };\n            gObj.trigger(events.batchAdd, args1);\n            if (gObj.isFrozenGrid()) {\n                alignFrozenEditForm(mTr.querySelector('td:not(.e-hide)'), tr.querySelector('td:not(.e-hide)'));\n            }\n        });\n    };\n    BatchEdit.prototype.renderFrozenAddRow = function (tr, mTr, frTr) {\n        var gObj = this.parent;\n        var mTbody = getMovableTbody(this.parent);\n        var frTbody = getFrozenRightTbody(this.parent);\n        if (gObj.editSettings.newRowPosition === 'Top') {\n            mTbody.insertBefore(mTr, mTbody.firstChild);\n        }\n        else {\n            mTbody.appendChild(mTr);\n        }\n        addClass([].slice.call(mTr.getElementsByClassName(literals.rowCell)), ['e-updatedtd']);\n        if (frTbody && frTr) {\n            if (gObj.editSettings.newRowPosition === 'Top') {\n                frTbody.insertBefore(frTr, frTbody.firstChild);\n            }\n            else {\n                frTbody.appendChild(frTr);\n            }\n            addClass([].slice.call(frTr.getElementsByClassName(literals.rowCell)), ['e-updatedtd']);\n            alignFrozenEditForm(frTr.querySelector('td:not(.e-hide)'), tr.querySelector('td:not(.e-hide)'));\n        }\n        if (gObj.height === 'auto') {\n            gObj.notify(events.frozenHeight, {});\n        }\n    };\n    BatchEdit.prototype.removeFrozenTbody = function () {\n        var gObj = this.parent;\n        if (gObj.isFrozenGrid()) {\n            var moveTbody = gObj.getContent().querySelector('.' + literals.movableContent).querySelector(literals.tbody);\n            (moveTbody.firstElementChild).parentNode.removeChild(moveTbody.firstElementChild);\n            if (gObj.getFrozenMode() === literals.leftRight) {\n                var frTbody = gObj.getContent().querySelector('.e-frozen-right-content').querySelector(literals.tbody);\n                (frTbody.firstElementChild).parentNode.removeChild(frTbody.firstElementChild);\n            }\n        }\n    };\n    BatchEdit.prototype.renderMovable = function (ele, rightEle) {\n        var mEle = ele.cloneNode(true);\n        var movable = this.parent.getMovableColumnsCount();\n        var left = this.parent.getFrozenLeftCount();\n        var right = this.parent.getFrozenRightColumnsCount();\n        sliceElements(ele, 0, left);\n        sliceElements(mEle, left, right ? mEle.children.length - right : mEle.children.length);\n        sliceElements(rightEle, left + movable, rightEle.children.length);\n        return mEle;\n    };\n    BatchEdit.prototype.findNextEditableCell = function (columnIndex, isAdd, isValOnly) {\n        var cols = this.parent.getColumns();\n        var endIndex = cols.length;\n        var validation;\n        for (var i = columnIndex; i < endIndex; i++) {\n            validation = isValOnly ? isNullOrUndefined(cols[i].validationRules) : false;\n            if (!isAdd && this.checkNPCell(cols[i])) {\n                return i;\n            }\n            else if (isAdd && !cols[i].template && cols[i].visible && cols[i].allowEditing &&\n                !(cols[i].isIdentity && cols[i].isPrimaryKey) && !validation) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    BatchEdit.prototype.checkNPCell = function (col) {\n        return !col.template && col.visible && !col.isPrimaryKey && !col.isIdentity && col.allowEditing;\n    };\n    BatchEdit.prototype.getDefaultData = function () {\n        var gObj = this.parent;\n        var data = {};\n        var dValues = { 'number': 0, 'string': null, 'boolean': false, 'date': null, 'datetime': null };\n        for (var _i = 0, _a = (gObj.columnModel); _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.field) {\n                setValue(col.field, Object.keys(col).indexOf('defaultValue') >= 0 ? col.defaultValue : dValues[col.type], data);\n            }\n        }\n        return data;\n    };\n    BatchEdit.prototype.setCellIdx = function (target) {\n        var gLen = 0;\n        if (this.parent.allowGrouping) {\n            gLen = this.parent.groupSettings.columns.length;\n        }\n        this.cellDetails.cellIndex = target.cellIndex - gLen;\n        this.cellDetails.rowIndex = parseInt(target.getAttribute('index'), 10);\n    };\n    BatchEdit.prototype.editCell = function (index, field, isAdd) {\n        var gObj = this.parent;\n        var col = gObj.getColumnByField(field);\n        this.index = index;\n        this.field = field;\n        this.isAdd = isAdd;\n        var checkEdit = gObj.isEdit && !(this.cellDetails.column.field === field\n            && (this.cellDetails.rowIndex === index && this.parent.getDataRows().length - 1 !== index));\n        if (gObj.editSettings.allowEditing) {\n            if (!checkEdit && col.allowEditing) {\n                this.editCellExtend(index, field, isAdd);\n            }\n            else if (checkEdit) {\n                this.editNext = true;\n                this.saveCell();\n            }\n        }\n    };\n    BatchEdit.prototype.editCellExtend = function (index, field, isAdd) {\n        var _this = this;\n        var gObj = this.parent;\n        var col = gObj.getColumnByField(field);\n        var keys = gObj.getPrimaryKeyFieldNames();\n        if (gObj.isEdit) {\n            return;\n        }\n        var row;\n        var mRowData;\n        var rowData = extend({}, {}, this.getDataByIndex(index), true);\n        if (col.getFreezeTableName() === 'movable' || col.getFreezeTableName() === literals.frozenRight) {\n            row = col.getFreezeTableName() === 'movable' ? gObj.getMovableDataRows()[index] : gObj.getFrozenRightDataRows()[index];\n            mRowData = this.parent.getRowObjectFromUID(row.getAttribute('data-uid'));\n            rowData = mRowData.changes ? extend({}, {}, mRowData.changes, true) : rowData;\n        }\n        else {\n            row = gObj.getDataRows()[index];\n            rowData = extend({}, {}, this.getDataByIndex(index), true);\n        }\n        if ((keys[0] === col.field && !row.classList.contains('e-insertedrow')) || col.columns ||\n            (col.isPrimaryKey && col.isIdentity)) {\n            this.parent.isLastCellPrimaryKey = true;\n            return;\n        }\n        this.parent.isLastCellPrimaryKey = false;\n        this.parent.element.classList.add('e-editing');\n        var rowObj = gObj.getRowObjectFromUID(row.getAttribute('data-uid'));\n        var cells = [].slice.apply(row.cells);\n        var args = {\n            columnName: col.field, isForeignKey: !isNullOrUndefined(col.foreignKeyValue),\n            primaryKey: keys, rowData: rowData,\n            validationRules: extend({}, col.validationRules ? col.validationRules : {}),\n            value: getObject(col.field, rowData),\n            type: !isAdd ? 'edit' : 'add', cancel: false,\n            foreignKeyData: rowObj && rowObj.foreignKeyData\n        };\n        if (!isBlazor() || this.parent.isJsComponent) {\n            args.cell = cells[this.getColIndex(cells, this.getCellIdx(col.uid))];\n            args.row = row;\n            args.columnObject = col;\n            if (!args.cell) {\n                return;\n            }\n        }\n        gObj.trigger(events.cellEdit, args, function (cellEditArgs) {\n            if (cellEditArgs.cancel) {\n                return;\n            }\n            cellEditArgs.cell = cellEditArgs.cell ? cellEditArgs.cell : cells[_this.getColIndex(cells, _this.getCellIdx(col.uid))];\n            cellEditArgs.row = cellEditArgs.row ? cellEditArgs.row : row;\n            cellEditArgs.columnObject = cellEditArgs.columnObject ? cellEditArgs.columnObject : col;\n            cellEditArgs.columnObject.index = isNullOrUndefined(cellEditArgs.columnObject.index) ? 0 : cellEditArgs.columnObject.index;\n            _this.cellDetails = {\n                rowData: rowData, column: col, value: cellEditArgs.value, isForeignKey: cellEditArgs.isForeignKey, rowIndex: index,\n                cellIndex: parseInt(cellEditArgs.cell.getAttribute(literals.ariaColIndex), 10),\n                foreignKeyData: cellEditArgs.foreignKeyData\n            };\n            if (cellEditArgs.cell.classList.contains('e-updatedtd')) {\n                _this.isColored = true;\n                cellEditArgs.cell.classList.remove('e-updatedtd');\n            }\n            gObj.isEdit = true;\n            gObj.clearSelection();\n            if (!gObj.isCheckBoxSelection || !gObj.isPersistSelection) {\n                gObj.selectRow(_this.cellDetails.rowIndex, true);\n            }\n            _this.renderer.update(cellEditArgs);\n            _this.parent.notify(events.batchEditFormRendered, cellEditArgs);\n            _this.form = select('#' + gObj.element.id + 'EditForm', gObj.element);\n            gObj.editModule.applyFormValidation([col]);\n            _this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n        });\n    };\n    BatchEdit.prototype.updateCell = function (rowIndex, field, value) {\n        var gObj = this.parent;\n        var col = gObj.getColumnByField(field);\n        var index = gObj.getColumnIndexByField(field);\n        if (col && !col.isPrimaryKey && col.allowEditing) {\n            var td = getCellByColAndRowIndex(this.parent, col, rowIndex, index);\n            var rowObj = col.getFreezeTableName() === 'movable' ? this.parent.getMovableRowsObject()[rowIndex] :\n                col.getFreezeTableName() === literals.frozenRight ? gObj.getFrozenRightRowsObject()[rowIndex]\n                    : gObj.getRowObjectFromUID(td.parentElement.getAttribute('data-uid'));\n            this.refreshTD(td, col, rowObj, value);\n            this.parent.trigger(events.queryCellInfo, {\n                cell: this.newReactTd || td, column: col, data: rowObj.changes\n            });\n        }\n    };\n    BatchEdit.prototype.setChanges = function (rowObj, field, value) {\n        var currentRowObj;\n        if (!this.parent.isFrozenGrid()) {\n            if (!rowObj.changes) {\n                rowObj.changes = extend({}, {}, rowObj.data, true);\n            }\n            if (!isNullOrUndefined(field)) {\n                DataUtil.setValue(field, value, rowObj.changes);\n            }\n            if (rowObj.data[field] !== value) {\n                var type = this.parent.getColumnByField(field).type;\n                if ((type === 'date' || type === 'datetime')) {\n                    if (new Date(rowObj.data[field]).toString() !== new Date(value).toString()) {\n                        rowObj.isDirty = true;\n                    }\n                }\n                else {\n                    rowObj.isDirty = true;\n                }\n            }\n        }\n        else {\n            var rowEle = this.parent.getRowElementByUID(rowObj.uid);\n            var rowIndex = parseInt(rowEle.getAttribute(literals.ariaRowIndex), 10);\n            currentRowObj = this.parent.getRowsObject()[rowIndex];\n            if (!currentRowObj.changes) {\n                currentRowObj.changes = extend({}, {}, rowObj.data, true);\n            }\n            if (!isNullOrUndefined(field)) {\n                setValue(field, value, currentRowObj.changes);\n            }\n            var movableRowObject = this.parent.getMovableRowsObject()[rowIndex];\n            movableRowObject.changes = extend({}, {}, currentRowObj.changes, true);\n            if (rowObj.data[field] !== value) {\n                movableRowObject.isDirty = true;\n                currentRowObj.isDirty = true;\n            }\n            if (this.parent.getFrozenMode() === literals.leftRight) {\n                var frRowObject = this.parent.getFrozenRightRowsObject()[rowIndex];\n                frRowObject.changes = extend({}, {}, currentRowObj.changes, true);\n                if (rowObj.data[field] !== value) {\n                    frRowObject.isDirty = true;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.updateRow = function (index, data) {\n        var keys = Object.keys(data);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var col = keys_1[_i];\n            this.updateCell(index, col, data[col]);\n        }\n    };\n    BatchEdit.prototype.getCellIdx = function (uid) {\n        var cIdx = this.parent.getColumnIndexByUid(uid) + this.parent.groupSettings.columns.length;\n        if (!isNullOrUndefined(this.parent.detailTemplate) || !isNullOrUndefined(this.parent.childGrid)) {\n            cIdx++;\n        }\n        if (this.parent.isRowDragable()) {\n            cIdx++;\n        }\n        return cIdx;\n    };\n    BatchEdit.prototype.refreshTD = function (td, column, rowObj, value) {\n        var cell = new CellRenderer(this.parent, this.serviceLocator);\n        var rowcell;\n        value = column.type === 'number' && !isNullOrUndefined(value) ? parseFloat(value) : value;\n        this.setChanges(rowObj, column.field, value);\n        var frzCols = this.parent.getFrozenColumns() || this.parent.getFrozenLeftColumnsCount()\n            || this.parent.getFrozenRightColumnsCount();\n        frzCols = frzCols && this.parent.isRowDragable() ? frzCols + 1 : frzCols;\n        refreshForeignData(rowObj, this.parent.getForeignKeyColumns(), rowObj.changes);\n        if (frzCols && column.getFreezeTableName() === 'movable' && this.parent.getColumns().length === rowObj.cells.length) {\n            rowcell = rowObj.cells.slice(frzCols, rowObj.cells.length);\n        }\n        else {\n            rowcell = rowObj.cells;\n        }\n        var parentElement;\n        var cellIndex;\n        if (this.parent.isReact) {\n            parentElement = td.parentElement;\n            cellIndex = td.cellIndex;\n        }\n        var index = 0;\n        if (frzCols) {\n            index = column.getFreezeTableName() === 'movable' && this.parent.getFrozenMode() !== 'Right'\n                ? frzCols : column.getFreezeTableName() === literals.frozenRight\n                ? this.parent.getFrozenLeftColumnsCount() + this.parent.getMovableColumnsCount() : index;\n        }\n        cell.refreshTD(td, rowcell[this.getCellIdx(column.uid) - index], rowObj.changes, { 'index': this.getCellIdx(column.uid) });\n        if (this.parent.isReact) {\n            this.newReactTd = parentElement.cells[cellIndex];\n            parentElement.cells[cellIndex].classList.add('e-updatedtd');\n        }\n        else {\n            td.classList.add('e-updatedtd');\n        }\n        td.classList.add('e-updatedtd');\n        this.parent.notify(events.toolbarRefresh, {});\n    };\n    BatchEdit.prototype.getColIndex = function (cells, index) {\n        var cIdx = 0;\n        if (this.parent.allowGrouping && this.parent.groupSettings.columns) {\n            cIdx = this.parent.groupSettings.columns.length;\n        }\n        if (!isNullOrUndefined(this.parent.detailTemplate) || !isNullOrUndefined(this.parent.childGrid)) {\n            cIdx++;\n        }\n        if (this.parent.isRowDragable()) {\n            cIdx++;\n        }\n        for (var m = 0; m < cells.length; m++) {\n            var colIndex = parseInt(cells[m].getAttribute(literals.ariaColIndex), 10);\n            if (colIndex === index - cIdx) {\n                return m;\n            }\n        }\n        return -1;\n    };\n    BatchEdit.prototype.editNextValCell = function () {\n        var gObj = this.parent;\n        var btmIdx = this.getBottomIndex();\n        if (this.isAdded && !gObj.isEdit) {\n            for (var i = this.cellDetails.cellIndex; i < gObj.getColumns().length; i++) {\n                if (gObj.isEdit) {\n                    return;\n                }\n                var index = this.findNextEditableCell(this.cellDetails.cellIndex + 1, true, true);\n                var col = gObj.getColumns()[index];\n                if (col) {\n                    if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                        this.editCell(btmIdx, col.field, true);\n                    }\n                    else {\n                        var args = { index: 0, column: col };\n                        this.parent.notify(events.nextCellIndex, args);\n                        this.editCell(args.index, col.field, true);\n                    }\n                    this.saveCell();\n                }\n            }\n            if (!gObj.isEdit) {\n                this.isAdded = false;\n            }\n        }\n    };\n    BatchEdit.prototype.escapeCellEdit = function () {\n        var args = this.generateCellArgs();\n        args.value = args.previousValue;\n        this.successCallBack(args, args.cell.parentElement, args.column, true)(args);\n    };\n    BatchEdit.prototype.generateCellArgs = function () {\n        var gObj = this.parent;\n        this.parent.element.classList.remove('e-editing');\n        var column = this.cellDetails.column;\n        var obj = {};\n        obj[column.field] = getObject(column.field, this.cellDetails.rowData);\n        var editedData = gObj.editModule.getCurrentEditedData(this.form, obj);\n        var cloneEditedData = extend({}, editedData);\n        editedData = extend({}, editedData, this.cellDetails.rowData);\n        var value = getObject(column.field, cloneEditedData);\n        if (!isNullOrUndefined(column.field) && !isUndefined(value)) {\n            setValue(column.field, value, editedData);\n        }\n        var args = {\n            columnName: column.field,\n            value: getObject(column.field, editedData),\n            rowData: this.cellDetails.rowData,\n            column: column,\n            previousValue: this.cellDetails.value,\n            isForeignKey: this.cellDetails.isForeignKey,\n            cancel: false\n        };\n        if (!isBlazor() || this.parent.isJsComponent) {\n            args.cell = this.form.parentElement;\n            args.columnObject = column;\n        }\n        return args;\n    };\n    BatchEdit.prototype.saveCell = function (isForceSave) {\n        if (this.preventSaveCell || !this.form) {\n            return;\n        }\n        var gObj = this.parent;\n        if (!isForceSave && (!gObj.isEdit || this.validateFormObj())) {\n            return;\n        }\n        this.preventSaveCell = true;\n        var args = this.generateCellArgs();\n        var tr = args.cell.parentElement;\n        var col = args.column;\n        if (!isForceSave) {\n            gObj.trigger(events.cellSave, args, this.successCallBack(args, tr, col));\n            gObj.notify(events.batchForm, { formObj: this.form });\n        }\n        else {\n            this.successCallBack(args, tr, col)(args);\n        }\n    };\n    BatchEdit.prototype.successCallBack = function (cellSaveArgs, tr, column, isEscapeCellEdit) {\n        var _this = this;\n        return function (cellSaveArgs) {\n            var gObj = _this.parent;\n            cellSaveArgs.cell = cellSaveArgs.cell ? cellSaveArgs.cell : _this.form.parentElement;\n            cellSaveArgs.columnObject = cellSaveArgs.columnObject ? cellSaveArgs.columnObject : column;\n            cellSaveArgs.columnObject.index = isNullOrUndefined(cellSaveArgs.columnObject.index) ? 0 : cellSaveArgs.columnObject.index;\n            if (cellSaveArgs.cancel) {\n                _this.preventSaveCell = false;\n                if (_this.editNext) {\n                    _this.editNext = false;\n                    if (_this.cellDetails.rowIndex === _this.index && _this.cellDetails.column.field === _this.field) {\n                        return;\n                    }\n                    _this.editCellExtend(_this.index, _this.field, _this.isAdd);\n                }\n                return;\n            }\n            gObj.editModule.destroyWidgets([column]);\n            gObj.isEdit = false;\n            gObj.editModule.destroyForm();\n            _this.parent.notify(events.tooltipDestroy, {});\n            var rowObj = parentsUntil(cellSaveArgs.cell, literals.movableContent)\n                || parentsUntil(cellSaveArgs.cell, literals.movableHeader) ? gObj.getRowObjectFromUID(tr.getAttribute('data-uid'), true)\n                : gObj.getRowObjectFromUID(tr.getAttribute('data-uid'));\n            if (gObj.getFrozenMode() === literals.leftRight && (parentsUntil(cellSaveArgs.cell, 'e-frozen-right-header')\n                || parentsUntil(cellSaveArgs.cell, 'e-frozen-right-content'))) {\n                rowObj = gObj.getRowObjectFromUID(tr.getAttribute('data-uid'), false, true);\n            }\n            _this.refreshTD(cellSaveArgs.cell, column, rowObj, cellSaveArgs.value);\n            if (_this.parent.isReact) {\n                cellSaveArgs.cell = _this.newReactTd;\n            }\n            removeClass([tr], [literals.editedRow, 'e-batchrow']);\n            removeClass([cellSaveArgs.cell], ['e-editedbatchcell', 'e-boolcell']);\n            if (!isNullOrUndefined(cellSaveArgs.value) && cellSaveArgs.value.toString() ===\n                (!isNullOrUndefined(_this.cellDetails.value) ? _this.cellDetails.value : '').toString() && !_this.isColored\n                || (isNullOrUndefined(cellSaveArgs.value) && isNullOrUndefined(rowObj.data[column.field]) &&\n                    isNullOrUndefined(_this.cellDetails.value) && !cellSaveArgs.cell.parentElement.classList.contains('e-insertedrow'))) {\n                cellSaveArgs.cell.classList.remove('e-updatedtd');\n            }\n            if (isNullOrUndefined(isEscapeCellEdit)) {\n                gObj.trigger(events.cellSaved, cellSaveArgs);\n            }\n            gObj.notify(events.toolbarRefresh, {});\n            _this.isColored = false;\n            if (_this.parent.aggregates.length > 0) {\n                _this.parent.notify(events.refreshFooterRenderer, {});\n                if (_this.parent.groupSettings.columns.length > 0 && !_this.isAddRow(_this.cellDetails.rowIndex)) {\n                    _this.parent.notify(events.groupAggregates, {});\n                }\n            }\n            _this.preventSaveCell = false;\n            if (_this.editNext) {\n                _this.editNext = false;\n                if (_this.cellDetails.rowIndex === _this.index && _this.cellDetails.column.field === _this.field) {\n                    return;\n                }\n                var col = gObj.getColumnByField(_this.field);\n                if (col && col.allowEditing) {\n                    _this.editCellExtend(_this.index, _this.field, _this.isAdd);\n                }\n            }\n            if (isEscapeCellEdit) {\n                gObj.notify(events.restoreFocus, {});\n            }\n        };\n    };\n    BatchEdit.prototype.getDataByIndex = function (index) {\n        var row = this.parent.getRowObjectFromUID(this.parent.getDataRows()[index].getAttribute('data-uid'));\n        return row.changes ? row.changes : row.data;\n    };\n    BatchEdit.prototype.keyDownHandler = function (e) {\n        if ((e.action === 'tab' || e.action === 'shiftTab') && this.parent.isEdit) {\n            var gObj = this.parent;\n            var btmIdx = this.getBottomIndex();\n            var rowcell = parentsUntil(e.target, literals.rowCell);\n            if (rowcell) {\n                var cell = rowcell.querySelector('.e-field');\n                if (cell) {\n                    var visibleColumns = this.parent.getVisibleColumns();\n                    var columnIndex = e.action === 'tab' ? visibleColumns.length - 1 : 0;\n                    if (visibleColumns[columnIndex].field === cell.getAttribute('id').slice(this.parent.element.id.length)) {\n                        if (this.cellDetails.rowIndex === btmIdx && e.action === 'tab') {\n                            if (gObj.editSettings.newRowPosition === 'Top') {\n                                gObj.editSettings.newRowPosition = 'Bottom';\n                                this.addRecord();\n                                gObj.editSettings.newRowPosition = 'Top';\n                            }\n                            else {\n                                this.addRecord();\n                            }\n                        }\n                        else {\n                            this.saveCell();\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.addCancelWhilePaging = function () {\n        if (this.validateFormObj()) {\n            this.parent.notify(events.destroyForm, {});\n            this.parent.isEdit = false;\n            this.isColored = false;\n        }\n    };\n    BatchEdit.prototype.getBottomIndex = function () {\n        var changes = this.getBatchChanges();\n        return this.parent.getCurrentViewRecords().length + changes[literals.addedRecords].length -\n            changes[literals.deletedRecords].length - 1;\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n"]},"metadata":{},"sourceType":"module"}