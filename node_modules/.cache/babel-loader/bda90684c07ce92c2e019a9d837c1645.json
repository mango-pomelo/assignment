{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n *\n * @hidden\n */\n\nvar TreeVirtualRowModelGenerator =\n/** @class */\nfunction (_super) {\n  __extends(TreeVirtualRowModelGenerator, _super);\n\n  function TreeVirtualRowModelGenerator(parent) {\n    var _this = _super.call(this, parent) || this;\n\n    _this.addEventListener();\n\n    return _this;\n  }\n\n  TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n    this.parent.on(events.dataListener, this.getDatas, this);\n  };\n\n  TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n    this.visualData = args.data;\n  };\n\n  TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n    if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '' || isCountRequired(this.parent)) {\n      return _super.prototype.generateRows.call(this, data, notifyArgs);\n    } else {\n      if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n        notifyArgs.requestType = 'refresh';\n      }\n\n      var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n\n      for (var r = 0; r < rows.length; r++) {\n        rows[r].index = this.visualData.indexOf(rows[r].data);\n      }\n\n      return rows;\n    }\n  };\n\n  TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n    var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder', 'save', 'delete'].some(function (value) {\n      return action === value;\n    });\n\n    if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '' || isCountRequired(this.parent)) {\n      var model = 'model';\n      var currentPage = this[model].currentPage;\n\n      if (clear) {\n        this.cache = {};\n        this.data = {};\n        this.groups = {};\n      } else if (action === 'virtualscroll' && this.cache[currentPage] && this.cache[currentPage].length > this.parent.contentModule.getBlockSize()) {\n        delete this.cache[currentPage];\n      }\n    } else {\n      if (clear || action === 'virtualscroll') {\n        this.cache = {};\n        this.data = {};\n        this.groups = {};\n      }\n    }\n\n    return clear;\n  };\n\n  return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator);\n\nexport { TreeVirtualRowModelGenerator };","map":{"version":3,"sources":["/Users/zhouzhou/Desktop/lightfront/node_modules/@syncfusion/ej2-treegrid/src/treegrid/renderer/virtual-row-model-generator.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","VirtualRowModelGenerator","events","isNullOrUndefined","DataManager","isCountRequired","TreeVirtualRowModelGenerator","_super","parent","_this","call","addEventListener","on","dataListener","getDatas","args","visualData","data","generateRows","notifyArgs","dataSource","url","undefined","offline","requestType","toString","rows","r","length","index","indexOf","checkAndResetCache","action","clear","some","value","model","currentPage","cache","groups","contentModule","getBlockSize"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n *\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n"]},"metadata":{},"sourceType":"module"}