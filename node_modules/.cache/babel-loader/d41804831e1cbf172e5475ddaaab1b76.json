{"ast":null,"code":"import { classList } from '@syncfusion/ej2-base';\nimport * as literals from '../base/string-literals';\n/**\n * Edit render module is used to render grid edit row.\n *\n * @hidden\n */\n\nvar BatchEditRender =\n/** @class */\nfunction () {\n  /**\n   * Constructor for render module\n   *\n   * @param {IGrid} parent - specifies the IGrid\n   */\n  function BatchEditRender(parent) {\n    this.parent = parent;\n  }\n\n  BatchEditRender.prototype.update = function (elements, args) {\n    if (this.parent.isReact && args.columnObject && args.columnObject.template) {\n      var parentRow = args.cell.parentElement;\n      var newTd = args.cell.cloneNode(true);\n      parentRow.insertBefore(newTd, parentRow.children[parseInt(args.cell.getAttribute(literals.ariaColIndex), 10)]);\n      newTd.focus();\n      args.cell.remove();\n      args.cell = newTd;\n    }\n\n    args.cell.innerHTML = '';\n    args.cell.appendChild(this.getEditElement(elements, args));\n    args.cell.classList.remove('e-ellipsistooltip');\n    args.cell.classList.add('e-editedbatchcell');\n    classList(args.row, [literals.editedRow, 'e-batchrow'], []);\n  };\n\n  BatchEditRender.prototype.getEditElement = function (elements, args) {\n    var gObj = this.parent;\n    var form = this.parent.createElement('form', {\n      id: gObj.element.id + 'EditForm',\n      className: 'e-gridform'\n    });\n    form.appendChild(elements[args.columnObject.uid]);\n\n    if (args.columnObject.editType === 'booleanedit') {\n      args.cell.classList.add('e-boolcell');\n    }\n\n    if (!args.columnObject.editType) {\n      args.cell.classList.add('e-inputbox');\n    }\n\n    return form;\n  };\n\n  BatchEditRender.prototype.removeEventListener = function () {//To destroy the renderer\n  };\n\n  return BatchEditRender;\n}();\n\nexport { BatchEditRender };","map":{"version":3,"sources":["/Users/zhouzhou/Desktop/lightfront/node_modules/@syncfusion/ej2-grids/src/grid/renderer/batch-edit-renderer.js"],"names":["classList","literals","BatchEditRender","parent","prototype","update","elements","args","isReact","columnObject","template","parentRow","cell","parentElement","newTd","cloneNode","insertBefore","children","parseInt","getAttribute","ariaColIndex","focus","remove","innerHTML","appendChild","getEditElement","add","row","editedRow","gObj","form","createElement","id","element","className","uid","editType","removeEventListener"],"mappings":"AAAA,SAASA,SAAT,QAA0B,sBAA1B;AACA,OAAO,KAAKC,QAAZ,MAA0B,yBAA1B;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,eAAe;AAAG;AAAe,YAAY;AAC7C;AACJ;AACA;AACA;AACA;AACI,WAASA,eAAT,CAAyBC,MAAzB,EAAiC;AAC7B,SAAKA,MAAL,GAAcA,MAAd;AACH;;AACDD,EAAAA,eAAe,CAACE,SAAhB,CAA0BC,MAA1B,GAAmC,UAAUC,QAAV,EAAoBC,IAApB,EAA0B;AACzD,QAAI,KAAKJ,MAAL,CAAYK,OAAZ,IAAuBD,IAAI,CAACE,YAA5B,IAA4CF,IAAI,CAACE,YAAL,CAAkBC,QAAlE,EAA4E;AACxE,UAAIC,SAAS,GAAGJ,IAAI,CAACK,IAAL,CAAUC,aAA1B;AACA,UAAIC,KAAK,GAAGP,IAAI,CAACK,IAAL,CAAUG,SAAV,CAAoB,IAApB,CAAZ;AACAJ,MAAAA,SAAS,CAACK,YAAV,CAAuBF,KAAvB,EAA8BH,SAAS,CAACM,QAAV,CAAmBC,QAAQ,CAACX,IAAI,CAACK,IAAL,CAAUO,YAAV,CAAuBlB,QAAQ,CAACmB,YAAhC,CAAD,EAAgD,EAAhD,CAA3B,CAA9B;AACAN,MAAAA,KAAK,CAACO,KAAN;AACAd,MAAAA,IAAI,CAACK,IAAL,CAAUU,MAAV;AACAf,MAAAA,IAAI,CAACK,IAAL,GAAYE,KAAZ;AACH;;AACDP,IAAAA,IAAI,CAACK,IAAL,CAAUW,SAAV,GAAsB,EAAtB;AACAhB,IAAAA,IAAI,CAACK,IAAL,CAAUY,WAAV,CAAsB,KAAKC,cAAL,CAAoBnB,QAApB,EAA8BC,IAA9B,CAAtB;AACAA,IAAAA,IAAI,CAACK,IAAL,CAAUZ,SAAV,CAAoBsB,MAApB,CAA2B,mBAA3B;AACAf,IAAAA,IAAI,CAACK,IAAL,CAAUZ,SAAV,CAAoB0B,GAApB,CAAwB,mBAAxB;AACA1B,IAAAA,SAAS,CAACO,IAAI,CAACoB,GAAN,EAAW,CAAC1B,QAAQ,CAAC2B,SAAV,EAAqB,YAArB,CAAX,EAA+C,EAA/C,CAAT;AACH,GAdD;;AAeA1B,EAAAA,eAAe,CAACE,SAAhB,CAA0BqB,cAA1B,GAA2C,UAAUnB,QAAV,EAAoBC,IAApB,EAA0B;AACjE,QAAIsB,IAAI,GAAG,KAAK1B,MAAhB;AACA,QAAI2B,IAAI,GAAG,KAAK3B,MAAL,CACN4B,aADM,CACQ,MADR,EACgB;AAAEC,MAAAA,EAAE,EAAEH,IAAI,CAACI,OAAL,CAAaD,EAAb,GAAkB,UAAxB;AAAoCE,MAAAA,SAAS,EAAE;AAA/C,KADhB,CAAX;AAEAJ,IAAAA,IAAI,CAACN,WAAL,CAAiBlB,QAAQ,CAACC,IAAI,CAACE,YAAL,CAAkB0B,GAAnB,CAAzB;;AACA,QAAI5B,IAAI,CAACE,YAAL,CAAkB2B,QAAlB,KAA+B,aAAnC,EAAkD;AAC9C7B,MAAAA,IAAI,CAACK,IAAL,CAAUZ,SAAV,CAAoB0B,GAApB,CAAwB,YAAxB;AACH;;AACD,QAAI,CAACnB,IAAI,CAACE,YAAL,CAAkB2B,QAAvB,EAAiC;AAC7B7B,MAAAA,IAAI,CAACK,IAAL,CAAUZ,SAAV,CAAoB0B,GAApB,CAAwB,YAAxB;AACH;;AACD,WAAOI,IAAP;AACH,GAZD;;AAaA5B,EAAAA,eAAe,CAACE,SAAhB,CAA0BiC,mBAA1B,GAAgD,YAAY,CACxD;AACH,GAFD;;AAGA,SAAOnC,eAAP;AACH,CAzCoC,EAArC;;AA0CA,SAASA,eAAT","sourcesContent":["import { classList } from '@syncfusion/ej2-base';\nimport * as literals from '../base/string-literals';\n/**\n * Edit render module is used to render grid edit row.\n *\n * @hidden\n */\nvar BatchEditRender = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {IGrid} parent - specifies the IGrid\n     */\n    function BatchEditRender(parent) {\n        this.parent = parent;\n    }\n    BatchEditRender.prototype.update = function (elements, args) {\n        if (this.parent.isReact && args.columnObject && args.columnObject.template) {\n            var parentRow = args.cell.parentElement;\n            var newTd = args.cell.cloneNode(true);\n            parentRow.insertBefore(newTd, parentRow.children[parseInt(args.cell.getAttribute(literals.ariaColIndex), 10)]);\n            newTd.focus();\n            args.cell.remove();\n            args.cell = newTd;\n        }\n        args.cell.innerHTML = '';\n        args.cell.appendChild(this.getEditElement(elements, args));\n        args.cell.classList.remove('e-ellipsistooltip');\n        args.cell.classList.add('e-editedbatchcell');\n        classList(args.row, [literals.editedRow, 'e-batchrow'], []);\n    };\n    BatchEditRender.prototype.getEditElement = function (elements, args) {\n        var gObj = this.parent;\n        var form = this.parent\n            .createElement('form', { id: gObj.element.id + 'EditForm', className: 'e-gridform' });\n        form.appendChild(elements[args.columnObject.uid]);\n        if (args.columnObject.editType === 'booleanedit') {\n            args.cell.classList.add('e-boolcell');\n        }\n        if (!args.columnObject.editType) {\n            args.cell.classList.add('e-inputbox');\n        }\n        return form;\n    };\n    BatchEditRender.prototype.removeEventListener = function () {\n        //To destroy the renderer\n    };\n    return BatchEditRender;\n}());\nexport { BatchEditRender };\n"]},"metadata":{},"sourceType":"module"}