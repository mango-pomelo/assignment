{"ast":null,"code":"import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n *\n * @hidden\n */\n\nvar Render =\n/** @class */\nfunction () {\n  /**\n   * Constructor for render module\n   *\n   * @param {TreeGrid} parent - Tree Grid instance\n   */\n  function Render(parent) {\n    this.parent = parent;\n    this.templateResult = null;\n    this.parent.grid.on('template-result', this.columnTemplateResult, this);\n    this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n  }\n  /**\n   * Updated row elements for TreeGrid\n   *\n   * @param {RowDataBoundEventArgs} args - Row details before its bound to DOM\n   * @returns {void}\n   */\n\n\n  Render.prototype.RowModifier = function (args) {\n    if (!args.data) {\n      return;\n    }\n\n    var data = args.data;\n    var parentData = data.parentItem;\n\n    if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) && (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) || isRemoteData(this.parent) && !isOffline(this.parent))) {\n      var collapsed = this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) || parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll) || !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n\n      if (collapsed) {\n        args.row.style.display = 'none';\n      }\n    }\n\n    if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n      var proxy_1 = this.parent;\n      var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n        return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n      });\n\n      if (parentrec.length > 0) {\n        var display = parentrec[0].expanded ? 'table-row' : 'none';\n        args.row.setAttribute('style', 'display: ' + display + ';');\n      }\n    } //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n\n\n    var summaryRow = getObject('isSummaryRow', args.data);\n\n    if (summaryRow) {\n      addClass([args.row], 'e-summaryrow');\n    }\n\n    if (args.row.querySelector('.e-treegridexpand')) {\n      args.row.setAttribute('aria-expanded', 'true');\n    } else if (args.row.querySelector('.e-treegridcollapse')) {\n      args.row.setAttribute('aria-expanded', 'false');\n    }\n\n    if (this.parent.enableCollapseAll && this.parent.initialRender) {\n      if (!isNullOrUndefined(data.parentItem)) {\n        args.row.style.display = 'none';\n      }\n    }\n\n    this.parent.trigger(events.rowDataBound, args);\n  };\n  /**\n   * cell renderer for tree column index cell\n   *\n   * @param {QueryCellInfoEventArgs} args - Cell detail before its bound to DOM\n   * @returns {void}\n   */\n\n\n  Render.prototype.cellRender = function (args) {\n    if (!args.data) {\n      return;\n    }\n\n    var grid = this.parent.grid;\n    var data = args.data;\n    var index;\n    var ispadfilter = isNullOrUndefined(data.filterLevel);\n    var pad = ispadfilter ? data.level : data.filterLevel;\n    var totalIconsWidth = 0;\n    var cellElement;\n    var column = this.parent.getColumnByUid(args.column.uid);\n    var summaryRow = data.isSummaryRow;\n    var frozenColumns = this.parent.getFrozenColumns();\n\n    if (!isNullOrUndefined(data.parentItem)) {\n      index = data.parentItem.index;\n    } else {\n      index = data.index;\n    }\n\n    if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex && (args.requestType === 'add' || args.requestType === 'rowDragAndDrop' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n      var container = createElement('div', {\n        className: 'e-treecolumn-container'\n      });\n      var emptyExpandIcon = createElement('span', {\n        className: 'e-icons e-none',\n        styles: 'width: 10px; display: inline-block'\n      });\n\n      for (var n = 0; n < pad; n++) {\n        totalIconsWidth += 10;\n        container.appendChild(emptyExpandIcon.cloneNode());\n      }\n\n      var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords) ? data.hasFilteredChildRecords : data.hasChildRecords;\n\n      if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n        iconRequired = !(data.childRecords.length === 0);\n      }\n\n      if (iconRequired) {\n        addClass([args.cell], 'e-treerowcell');\n        var expandIcon = createElement('span', {\n          className: 'e-icons'\n        });\n        var expand = void 0;\n\n        if (this.parent.initialRender) {\n          expand = data.expanded && (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) && !this.parent.enableCollapseAll;\n        } else {\n          expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n        }\n\n        addClass([expandIcon], expand ? 'e-treegridexpand' : 'e-treegridcollapse');\n        totalIconsWidth += 18;\n        container.appendChild(expandIcon);\n        emptyExpandIcon.style.width = '7px';\n        totalIconsWidth += 7;\n        container.appendChild(emptyExpandIcon.cloneNode());\n      } else if (pad || !pad && !data.level) {\n        // icons width\n        totalIconsWidth += 20;\n        container.appendChild(emptyExpandIcon.cloneNode());\n        container.appendChild(emptyExpandIcon.cloneNode());\n      } //should add below code when paging funcitonality implemented\n      // if (data.hasChildRecords) {\n      //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n      // }\n\n\n      cellElement = createElement('span', {\n        className: 'e-treecell'\n      });\n\n      if (this.parent.allowTextWrap) {\n        cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n      }\n\n      addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n      this.updateTreeCell(args, cellElement);\n      container.appendChild(cellElement);\n      args.cell.appendChild(container);\n    } else if (this.templateResult) {\n      this.templateResult = null;\n    }\n\n    if (frozenColumns > this.parent.treeColumnIndex && frozenColumns > 0 && grid.getColumnIndexByUid(args.column.uid) === frozenColumns) {\n      addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n    } else if (frozenColumns < this.parent.treeColumnIndex && frozenColumns > 0 && (grid.getColumnIndexByUid(args.column.uid) === frozenColumns || grid.getColumnIndexByUid(args.column.uid) === frozenColumns - 1)) {\n      addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n    } else if (frozenColumns === this.parent.treeColumnIndex && frozenColumns > 0 && grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex - 1) {\n      addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n    }\n\n    if (!isNullOrUndefined(column) && column.showCheckbox) {\n      this.parent.notify('columnCheckbox', args);\n\n      if (this.parent.allowTextWrap) {\n        var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n        var width = parseInt(checkboxElement.style.width, 16);\n        totalIconsWidth += width;\n        totalIconsWidth += 10;\n\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n          cellElement = args.cell.querySelector('.e-treecell');\n        } else {\n          cellElement = args.cell.querySelector('.e-treecheckbox');\n        }\n\n        cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n      }\n    }\n\n    if (summaryRow) {\n      addClass([args.cell], 'e-summarycell');\n      var summaryData = getObject(args.column.field, args.data);\n\n      if (args.cell.querySelector('.e-treecell') != null) {\n        args.cell.querySelector('.e-treecell').innerHTML = summaryData;\n      } else {\n        args.cell.innerHTML = summaryData;\n      }\n    }\n\n    if (isNullOrUndefined(this.parent.rowTemplate)) {\n      this.parent.trigger(events.queryCellInfo, args);\n    }\n  };\n\n  Render.prototype.updateTreeCell = function (args, cellElement) {\n    var columnModel = getValue('columnModel', this.parent);\n    var treeColumn = columnModel[this.parent.treeColumnIndex];\n    var templateFn = 'templateFn';\n    var colindex = args.column.index;\n\n    if (isNullOrUndefined(treeColumn.field)) {\n      args.cell.setAttribute('aria-colindex', colindex + '');\n    }\n\n    if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n      args.column.template = treeColumn.template;\n      args.column[templateFn] = templateCompiler(args.column.template);\n      args.cell.classList.add('e-templatecell');\n    }\n\n    var textContent = args.cell.querySelector('.e-treecell') != null ? args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n\n    if (typeof args.column.template === 'object' && this.templateResult) {\n      appendChildren(cellElement, this.templateResult);\n      this.templateResult = null;\n      args.cell.innerHTML = '';\n    } else if (args.cell.classList.contains('e-templatecell')) {\n      var len = args.cell.children.length;\n      var tempID = this.parent.element.id + args.column.uid;\n\n      if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n        var portals = 'portals';\n        var renderReactTemplates = 'renderReactTemplates';\n\n        if (this.parent.isReact && typeof args.column.template !== 'string') {\n          args.column[templateFn](args.data, this.parent, 'template', tempID, null, null, cellElement);\n\n          if (isNullOrUndefined(this.parent.grid[portals])) {\n            this.parent.grid[portals] = this.parent[portals];\n          }\n\n          this.parent.notify('renderReactTemplate', this.parent[portals]);\n          this.parent[renderReactTemplates]();\n        } else {\n          var str = 'isStringTemplate';\n          var result = args.column[templateFn](extend({\n            'index': ''\n          }, args.data), this.parent, 'template', tempID, this.parent[str]);\n          appendChildren(cellElement, result);\n        }\n\n        delete args.column.template;\n        delete args.column[templateFn];\n        args.cell.innerHTML = '';\n      } else {\n        for (var i = 0; i < len; len = args.cell.children.length) {\n          cellElement.appendChild(args.cell.children[i]);\n        }\n      }\n    } else {\n      cellElement.innerHTML = textContent;\n      args.cell.innerHTML = '';\n    }\n  };\n\n  Render.prototype.columnTemplateResult = function (args) {\n    this.templateResult = args.template;\n  };\n\n  Render.prototype.reactTemplateRender = function (args) {\n    var renderReactTemplates = 'renderReactTemplates';\n    var portals = 'portals';\n    this.parent[portals] = args;\n    this.parent.notify('renderReactTemplate', this.parent[portals]);\n    this.parent[renderReactTemplates]();\n  };\n\n  Render.prototype.destroy = function () {\n    this.parent.grid.off('template-result', this.columnTemplateResult);\n    this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n  };\n\n  return Render;\n}();\n\nexport { Render };","map":{"version":3,"sources":["/Users/zhouzhou/Desktop/lightfront/node_modules/@syncfusion/ej2-treegrid/src/treegrid/renderer/render.js"],"names":["getObject","appendChildren","templateCompiler","extend","addClass","createElement","isNullOrUndefined","getValue","events","isRemoteData","isOffline","getExpandStatus","isFilterChildHierarchy","Render","parent","templateResult","grid","on","columnTemplateResult","reactTemplateRender","prototype","RowModifier","args","data","parentData","parentItem","allowPaging","pageSettings","pageSizeMode","collapsed","initialRender","expandStateMapping","enableCollapseAll","getCurrentViewRecords","row","style","display","proxy_1","parentrec","filter","rec","idMapping","parentIdMapping","length","expanded","setAttribute","summaryRow","querySelector","trigger","rowDataBound","cellRender","index","ispadfilter","filterLevel","pad","level","totalIconsWidth","cellElement","column","getColumnByUid","uid","isSummaryRow","frozenColumns","getFrozenColumns","getColumnIndexByUid","treeColumnIndex","requestType","cell","container","className","emptyExpandIcon","styles","n","appendChild","cloneNode","iconRequired","hasFilteredChildRecords","hasChildRecords","childRecords","expandIcon","expand","width","allowTextWrap","updateTreeCell","showCheckbox","notify","checkboxElement","querySelectorAll","parseInt","summaryData","field","innerHTML","rowTemplate","queryCellInfo","columnModel","treeColumn","templateFn","colindex","template","classList","add","textContent","contains","len","children","tempID","element","id","portals","renderReactTemplates","isReact","str","result","i","destroy","off"],"mappings":"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","sourcesContent":["import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n *\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     *\n     * @param {RowDataBoundEventArgs} args - Row details before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     *\n     * @param {QueryCellInfoEventArgs} args - Cell detail before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        var frozenColumns = this.parent.getFrozenColumns();\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex && (args.requestType === 'add' || args.requestType\n            === 'rowDragAndDrop' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        else if (this.templateResult) {\n            this.templateResult = null;\n        }\n        if (frozenColumns > this.parent.treeColumnIndex && frozenColumns > 0 &&\n            grid.getColumnIndexByUid(args.column.uid) === frozenColumns) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (frozenColumns < this.parent.treeColumnIndex && frozenColumns > 0 &&\n            (grid.getColumnIndexByUid(args.column.uid) === frozenColumns\n                || grid.getColumnIndexByUid(args.column.uid) === frozenColumns - 1)) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (frozenColumns === this.parent.treeColumnIndex && frozenColumns > 0 &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex - 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            if (args.cell.querySelector('.e-treecell') != null) {\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData;\n            }\n            else {\n                args.cell.innerHTML = summaryData;\n            }\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement) {\n        var columnModel = getValue('columnModel', this.parent);\n        var treeColumn = columnModel[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        var colindex = args.column.index;\n        if (isNullOrUndefined(treeColumn.field)) {\n            args.cell.setAttribute('aria-colindex', colindex + '');\n        }\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n            args.column.template = treeColumn.template;\n            args.column[templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact && typeof (args.column.template) !== 'string') {\n                    args.column[templateFn](args.data, this.parent, 'template', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[portals])) {\n                        this.parent.grid[portals] = this.parent[portals];\n                    }\n                    this.parent.notify('renderReactTemplate', this.parent[portals]);\n                    this.parent[renderReactTemplates]();\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = args.column[templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[i]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.reactTemplateRender = function (args) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[portals]);\n        this.parent[renderReactTemplates]();\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n"]},"metadata":{},"sourceType":"module"}