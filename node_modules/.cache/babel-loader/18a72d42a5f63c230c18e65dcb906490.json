{"ast":null,"code":"import { extend, isNullOrUndefined, setValue, getValue, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired, getExpandStatus } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n *\n * @hidden\n */\n\nvar DataManipulation =\n/** @class */\nfunction () {\n  function DataManipulation(grid) {\n    this.addedRecords = 'addedRecords';\n    this.parent = grid;\n    this.parentItems = [];\n    this.taskIds = [];\n    this.hierarchyData = [];\n    this.storedIndex = -1;\n    this.sortedData = [];\n    this.isSortAction = false;\n    this.addEventListener();\n    this.dataResults = {};\n    this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n  }\n  /**\n   * @hidden\n   * @returns {void}\n   */\n\n\n  DataManipulation.prototype.addEventListener = function () {\n    this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n    this.parent.grid.on('sorting-begin', this.beginSorting, this);\n    this.parent.on('updateAction', this.updateData, this);\n    this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n    this.parent.on('dataProcessor', this.dataProcessor, this);\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n\n\n  DataManipulation.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n    this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n    this.parent.off('updateAction', this.updateData);\n    this.parent.off('dataProcessor', this.dataProcessor);\n    this.parent.grid.off('sorting-begin', this.beginSorting);\n  };\n  /**\n   * To destroy the dataModule\n   *\n   * @returns {void}\n   * @hidden\n   */\n\n\n  DataManipulation.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n  /**\n   * @hidden\n   * @returns {boolean} -Returns whether remote data binding\n   */\n\n\n  DataManipulation.prototype.isRemote = function () {\n    if (!(this.parent.dataSource instanceof DataManager)) {\n      return false;\n    }\n\n    return true; // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n    // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n  };\n  /**\n   * Function to manipulate datasource\n   *\n   * @param {Object} data - Provide tree grid datasource to convert to flat data\n   * @hidden\n   * @returns {void}\n   */\n\n\n  DataManipulation.prototype.convertToFlatData = function (data) {\n    var _this = this;\n\n    this.parent.flatData = Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ? this.parent.dataSource : [];\n    this.parent.parentData = [];\n\n    if (isRemoteData(this.parent) && !isOffline(this.parent) && data instanceof DataManager && !(data instanceof Array)) {\n      var dm = this.parent.dataSource;\n\n      if (this.parent.parentIdMapping) {\n        this.parent.query = isNullOrUndefined(this.parent.query) ? new Query() : this.parent.query;\n\n        if (this.parent.parentIdMapping) {\n          var filterKey = this.parent.query.params.filter(function (param) {\n            return param.key === 'IdMapping';\n          });\n\n          if (this.parent.initialRender && !filterKey.length) {\n            this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n            this.parent.query.addParams('IdMapping', this.parent.idMapping);\n          }\n        }\n\n        if (!this.parent.hasChildMapping) {\n          var qry = this.parent.query.clone();\n          qry.queries = [];\n          qry = qry.select([this.parent.parentIdMapping]);\n          qry.isCountRequired = true;\n          dm.executeQuery(qry).then(function (e) {\n            _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n            var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n              return e.httpRequest.statusText !== 'OK';\n            }).length;\n\n            if (req === 0) {\n              setValue('grid.contentModule.isLoaded', true, _this.parent);\n\n              if (!isNullOrUndefined(_this.zerothLevelData)) {\n                setValue('cancel', false, _this.zerothLevelData);\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                _this.zerothLevelData = null;\n              }\n\n              _this.parent.grid.hideSpinner();\n            }\n          });\n        }\n      }\n    } else if (data instanceof Array) {\n      this.convertJSONData(data);\n    }\n  };\n\n  DataManipulation.prototype.convertJSONData = function (data) {\n    this.hierarchyData = [];\n    this.taskIds = [];\n\n    if (!this.parent.idMapping) {\n      this.hierarchyData = data;\n    } else {\n      for (var i = 0; i < Object.keys(data).length; i++) {\n        var tempData = data[i];\n        this.hierarchyData.push(extend({}, tempData));\n\n        if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n          this.taskIds.push(tempData[this.parent.idMapping]);\n        }\n      }\n    }\n\n    if (this.isSelfReference) {\n      var selfData = [];\n      var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query().group(this.parent.parentIdMapping));\n\n      for (var i = 0; i < mappingData.length; i++) {\n        var groupData = mappingData[i];\n        var index = this.taskIds.indexOf(groupData.key);\n\n        if (!isNullOrUndefined(groupData.key)) {\n          if (index > -1) {\n            var childData = groupData.items;\n            this.hierarchyData[index][this.parent.childMapping] = childData;\n            continue;\n          }\n        }\n\n        selfData.push.apply(selfData, groupData.items);\n      }\n\n      this.hierarchyData = this.selfReferenceUpdate(selfData);\n    }\n\n    if (!Object.keys(this.hierarchyData).length) {\n      var isGantt = 'isGantt';\n      var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[isGantt];\n      this.parent.flatData = referenceData ? this.parent.dataSource : [];\n    } else {\n      this.createRecords(this.hierarchyData);\n    }\n\n    this.storedIndex = -1;\n  }; // private crudActions(): void {\n  //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n  //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n  //     this.parent.dataSource.adaptor.update =\n  //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n  //                value = getPlainData(value);\n  //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n  //              }\n  //   }\n  // }\n\n\n  DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n    var result = [];\n\n    while (this.hierarchyData.length > 0 && selfData.length > 0) {\n      var index = selfData.indexOf(this.hierarchyData[0]);\n\n      if (index === -1) {\n        this.hierarchyData.shift();\n      } else {\n        result.push(this.hierarchyData.shift());\n        selfData.splice(index, 1);\n      }\n    }\n\n    return result;\n  };\n  /**\n   * Function to update the zeroth level parent records in remote binding\n   *\n   * @param {BeforeDataBoundArgs} args - contains data before its bounds to tree grid\n   * @hidden\n   * @returns {void}\n   */\n\n\n  DataManipulation.prototype.updateParentRemoteData = function (args) {\n    var records = args.result;\n\n    if (!this.parent.hasChildMapping && !this.parentItems.length && !this.parent.loadChildOnDemand) {\n      this.zerothLevelData = args;\n      setValue('cancel', true, args);\n    } else {\n      if (!this.parent.loadChildOnDemand) {\n        for (var rec = 0; rec < records.length; rec++) {\n          if (isCountRequired(this.parent) && records[rec].hasChildRecords && this.parent.initialRender) {\n            records[rec].expanded = false;\n          }\n\n          if (isNullOrUndefined(records[rec].index)) {\n            records[rec].taskData = extend({}, records[rec]);\n            records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n            records[rec].level = 0;\n            records[rec].index = Math.ceil(Math.random() * 1000);\n\n            if (records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1) {\n              records[rec].hasChildRecords = true;\n            }\n\n            records[rec].checkboxState = 'uncheck';\n          }\n        }\n      } else {\n        if (!isNullOrUndefined(records)) {\n          this.convertToFlatData(records);\n        }\n      }\n    }\n\n    args.result = this.parent.loadChildOnDemand ? this.parent.flatData : records;\n    this.parent.notify('updateResults', args);\n  };\n  /**\n   * Function to manipulate datasource\n   *\n   * @param {{record: ITreeData, rows: HTMLTableRowElement[], parentRow: HTMLTableRowElement}} rowDetails - Row details for which child rows has to be fetched\n   * @param {ITreeData} rowDetails.record - current expanding record\n   * @param {HTMLTableRowElement[]} rowDetails.rows - Expanding Row element\n   * @param {HTMLTableRowElement} rowDetails.parentRow  - Curent expanding row element\n   * @param {boolean} isChild - Specified whether current record is already a child record\n   * @hidden\n   * @returns {void}\n   */\n\n\n  DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n    var gridRows = this.parent.getRows();\n\n    if (this.parent.rowTemplate) {\n      var rows = this.parent.getContentTable().rows;\n      gridRows = [].slice.call(rows);\n    }\n\n    var childRecord;\n\n    if (rowDetails.rows.length > 0) {\n      if (!isChild) {\n        rowDetails.record.expanded = true;\n      }\n\n      for (var i = 0; i < rowDetails.rows.length; i++) {\n        rowDetails.rows[i].style.display = 'table-row';\n\n        if (this.parent.loadChildOnDemand) {\n          var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n          childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] : this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n\n          if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n            addClass([targetEle], 'e-treegridexpand');\n            removeClass([targetEle], 'e-treegridcollapse');\n          }\n\n          var childRows = [];\n          childRows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n          });\n\n          if (childRows.length && childRecord.expanded) {\n            this.collectExpandingRecs({\n              record: childRecord,\n              rows: childRows,\n              parentRow: rowDetails.parentRow\n            }, true);\n          }\n        }\n\n        var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n\n        if (!isNullOrUndefined(expandingTd)) {\n          this.parent.grid.detailRowModule.expand(expandingTd);\n        }\n      }\n    } else {\n      this.fetchRemoteChildData({\n        record: rowDetails.record,\n        rows: rowDetails.rows,\n        parentRow: rowDetails.parentRow\n      });\n    }\n  };\n\n  DataManipulation.prototype.fetchRemoteChildData = function (rowDetails) {\n    var _this = this;\n\n    var args = {\n      row: rowDetails.parentRow,\n      data: rowDetails.record\n    };\n    var dm = this.parent.dataSource;\n    var qry = this.parent.grid.getDataModule().generateQuery();\n    var clonequries = qry.queries.filter(function (e) {\n      return e.fn !== 'onPage' && e.fn !== 'onWhere';\n    });\n    qry.queries = clonequries;\n    qry.isCountRequired = true;\n    qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n    showSpinner(this.parent.element);\n    dm.executeQuery(qry).then(function (e) {\n      var datas = _this.parent.grid.currentViewData.slice();\n\n      var inx = datas.indexOf(rowDetails.record);\n\n      if (inx === -1) {\n        _this.parent.grid.getRowsObject().forEach(function (rows) {\n          if (rows.data.uniqueID === rowDetails.record.uniqueID) {\n            inx = rows.index;\n          }\n        });\n      }\n\n      var haveChild = getObject('actual.nextLevel', e);\n      var result = e.result;\n      rowDetails.record.childRecords = result;\n\n      for (var r = 0; r < result.length; r++) {\n        result[r].taskData = extend({}, result[r]);\n        result[r].level = rowDetails.record.level + 1;\n        result[r].index = Math.ceil(Math.random() * 1000);\n        var parentData = extend({}, rowDetails.record);\n        delete parentData.childRecords;\n        result[r].parentItem = parentData;\n        result[r].parentUniqueID = rowDetails.record.uniqueID;\n        result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n        result[r].checkboxState = 'uncheck';\n        setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent); // delete result[r].parentItem.childRecords;\n\n        if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1) && !(haveChild && !haveChild[r])) {\n          result[r].hasChildRecords = true;\n          result[r].expanded = false;\n        }\n\n        datas.splice(inx + r + 1, 0, result[r]);\n      }\n\n      setValue('result', datas, e);\n      setValue('action', 'beforecontentrender', e);\n\n      _this.parent.trigger(events.actionComplete, e);\n\n      hideSpinner(_this.parent.element);\n\n      if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n        var gridQuery = getObject('query', e);\n        var result_1 = 'result';\n\n        if (isNullOrUndefined(gridQuery)) {\n          gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n        }\n\n        if (!isNullOrUndefined(gridQuery)) {\n          var summaryQuery = gridQuery.queries.filter(function (q) {\n            return q.fn === 'onAggregates';\n          });\n          e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n        }\n      }\n\n      e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n      var virtualArgs = {};\n\n      if (_this.parent.enableVirtualization) {\n        _this.remoteVirtualAction(virtualArgs);\n      }\n\n      var notifyArgs = {\n        index: inx,\n        childData: result\n      };\n\n      if (_this.parent.enableInfiniteScrolling) {\n        _this.parent.notify('infinite-remote-expand', notifyArgs);\n      } else {\n        getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n      }\n\n      _this.parent.trigger(events.expanded, args);\n    });\n  };\n\n  DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n    virtualArgs.requestType = 'refresh';\n    setValue('isExpandCollapse', true, virtualArgs);\n    var contentModule = getValue('grid.contentModule', this.parent);\n    var currentInfo = getValue('currentInfo', contentModule);\n    var prevInfo = getValue('prevInfo', contentModule);\n\n    if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n      this.parent.grid.pageSettings.currentPage = prevInfo.page;\n    }\n  };\n\n  DataManipulation.prototype.beginSorting = function () {\n    this.isSortAction = true;\n  };\n\n  DataManipulation.prototype.createRecords = function (data, parentRecords) {\n    var treeGridData = [];\n\n    for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n      var currentData = extend({}, data[i]);\n      currentData.taskData = data[i];\n      var level = 0;\n      this.storedIndex++;\n\n      if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n        currentData.index = this.storedIndex;\n      }\n\n      if (!isNullOrUndefined(currentData[this.parent.childMapping]) || currentData[this.parent.hasChildMapping] && isCountRequired(this.parent)) {\n        currentData.hasChildRecords = true;\n\n        if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange) && isNullOrUndefined(currentData[this.parent.childMapping])) {\n          currentData.expanded = false;\n        } else {\n          currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping]) ? currentData[this.parent.expandStateMapping] : true;\n        }\n      }\n\n      if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n        currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n      }\n\n      if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n        this.parent.parentData.push(currentData);\n      }\n\n      currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n      setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n\n      if (!isNullOrUndefined(parentRecords)) {\n        var parentData = extend({}, parentRecords);\n        delete parentData.childRecords;\n        delete parentData[this.parent.childMapping];\n\n        if (this.isSelfReference) {\n          delete parentData.taskData[this.parent.childMapping];\n        }\n\n        currentData.parentItem = parentData;\n        currentData.parentUniqueID = parentData.uniqueID;\n        level = parentRecords.level + 1;\n      }\n\n      if (!Object.prototype.hasOwnProperty.call(currentData, 'level')) {\n        currentData.level = level;\n      }\n\n      currentData.checkboxState = 'uncheck';\n\n      if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n        this.parent.flatData.push(currentData);\n      }\n\n      if (!this.isSelfReference && currentData.level === 0) {\n        this.parent.parentData.push(currentData);\n      }\n\n      if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n        var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n        currentData.childRecords = record;\n      }\n\n      treeGridData.push(currentData);\n    }\n\n    return treeGridData;\n  };\n  /**\n   * Function to perform filtering/sorting action for local data\n   *\n   * @param {BeforeDataBoundArgs} args - data details to be processed before binding to grid\n   * @hidden\n   * @returns {void}\n   */\n\n\n  DataManipulation.prototype.dataProcessor = function (args) {\n    var isExport = getObject('isExport', args);\n    var expresults = getObject('expresults', args);\n    var exportType = getObject('exportType', args);\n    var isPrinting = getObject('isPrinting', args);\n    var dataObj;\n    var actionArgs = getObject('actionArgs', args);\n    var requestType = getObject('requestType', args);\n    var actionData = getObject('data', args);\n    var action = getObject('action', args);\n    var actionAddArgs = actionArgs;\n    var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n    var dataValue = getObject('data', actionAddArgs);\n\n    if (!isNullOrUndefined(actionAddArgs) && !isNullOrUndefined(actionAddArgs.action) && actionAddArgs.action === 'add' && !isNullOrUndefined(actionAddArgs.data) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n      actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n      dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n    }\n\n    if (!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length || requestType === 'save') {\n      requestType = requestType ? requestType : actionArgs.requestType;\n      actionData = actionData ? actionData : getObject('data', actionArgs);\n      action = action ? action : getObject('action', actionArgs);\n\n      if (this.parent.editSettings.mode === 'Batch') {\n        this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n      }\n\n      if (this.parent.isLocalData) {\n        this.updateAction(actionData, action, requestType);\n      }\n    }\n\n    if (isExport && !isNullOrUndefined(expresults)) {\n      dataObj = expresults;\n    } else {\n      dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource) : this.parent.grid.dataSource;\n    }\n\n    var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n    var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource) : results.length;\n    var qry = new Query();\n    var gridQuery = getObject('query', args);\n    var filterQuery;\n    var searchQuery;\n\n    if (!isNullOrUndefined(gridQuery)) {\n      filterQuery = gridQuery.queries.filter(function (q) {\n        return q.fn === 'onWhere';\n      });\n      searchQuery = gridQuery.queries.filter(function (q) {\n        return q.fn === 'onSearch';\n      });\n    }\n\n    if (this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length || this.parent.grid.searchSettings.key.length > 0 || !isNullOrUndefined(gridQuery) && (filterQuery.length || searchQuery.length) && this.parent.isLocalData) {\n      if (isNullOrUndefined(gridQuery)) {\n        gridQuery = new Query();\n        gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n        gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n      }\n\n      var fltrQuery = gridQuery.queries.filter(function (q) {\n        return q.fn === 'onWhere';\n      });\n      var srchQuery = gridQuery.queries.filter(function (q) {\n        return q.fn === 'onSearch';\n      });\n      qry.queries = fltrQuery.concat(srchQuery);\n      var filteredData = new DataManager(results).executeLocal(qry);\n      this.parent.notify('updateFilterRecs', {\n        data: filteredData\n      });\n      results = this.dataResults.result;\n      this.dataResults.result = null;\n\n      if (this.parent.grid.aggregates.length > 0) {\n        var query = getObject('query', args);\n\n        if (isNullOrUndefined(gridQuery)) {\n          gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n        }\n\n        if (!isNullOrUndefined(query)) {\n          var summaryQuery = query.queries.filter(function (q) {\n            return q.fn === 'onAggregates';\n          });\n          results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n        }\n      }\n    }\n\n    if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0 && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n      var gridQuery_1 = getObject('query', args);\n\n      if (isNullOrUndefined(gridQuery_1)) {\n        gridQuery_1 = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n      }\n\n      var summaryQuery = gridQuery_1.queries.filter(function (q) {\n        return q.fn === 'onAggregates';\n      });\n      results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n    }\n\n    if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n      this.isSortAction = false;\n      var parentData = this.parent.parentData;\n      var query = getObject('query', args);\n      var srtQry = new Query();\n\n      for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n        var col = this.parent.grid.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n        var compFun = col.sortComparer && isOffline(this.parent) ? col.sortComparer.bind(col) : this.parent.grid.sortSettings.columns[srt].direction;\n        srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n      }\n\n      var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n      var sortArgs = {\n        modifiedData: modifiedData,\n        filteredData: results,\n        srtQry: srtQry\n      };\n      this.parent.notify('createSort', sortArgs);\n      results = sortArgs.modifiedData;\n      this.dataResults.result = null;\n      this.sortedData = results;\n      this.parent.notify('updateModel', {});\n\n      if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n        var isSort = false;\n        var query_1 = getObject('query', args);\n        var summaryQuery = query_1.queries.filter(function (q) {\n          return q.fn === 'onAggregates';\n        });\n        results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n      }\n    }\n\n    count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource) : results.length;\n    var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n    results = temp.result;\n    count = temp.count;\n    args.result = results;\n    args.count = count;\n    this.parent.notify('updateResults', args);\n  };\n\n  DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n    if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage') && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n      this.parent.notify(events.pagingActions, {\n        result: results,\n        count: count\n      });\n      results = this.dataResults.result;\n      count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource) : this.dataResults.count;\n    } else if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && (!isExport || exportType === 'CurrentPage') && getValue('requestType', args) !== 'save') {\n      var actArgs = this.parent.enableInfiniteScrolling ? args : getValue('actionArgs', args);\n      this.parent.notify(events.pagingActions, {\n        result: results,\n        count: count,\n        actionArgs: actArgs\n      });\n      results = this.dataResults.result;\n      count = this.dataResults.count;\n    }\n\n    var isPdfExport = 'isPdfExport';\n    var isCollapsedStatePersist = 'isCollapsedStatePersist';\n\n    if ((isPrinting === true || args[isPdfExport] && (isNullOrUndefined(args[isCollapsedStatePersist]) || args[isCollapsedStatePersist])) && this.parent.printMode === 'AllPages') {\n      var actualResults = [];\n\n      for (var i = 0; i < results.length; i++) {\n        var expandStatus = getExpandStatus(this.parent, results[i], this.parent.parentData);\n\n        if (expandStatus) {\n          actualResults.push(results[i]);\n        }\n      }\n\n      results = actualResults;\n      count = results.length;\n    }\n\n    var value = {\n      result: results,\n      count: count\n    };\n    return value;\n  };\n\n  DataManipulation.prototype.updateData = function (dataResult) {\n    this.dataResults = dataResult;\n  };\n\n  DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n    if (requestType === 'delete' || requestType === 'save') {\n      this.parent.notify(events.crudAction, {\n        value: actionData,\n        action: action || requestType\n      });\n    }\n\n    if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n      this.parent.notify(events.batchSave, {});\n    }\n  };\n\n  return DataManipulation;\n}();\n\nexport { DataManipulation };","map":{"version":3,"sources":["/Users/zhouzhou/Desktop/lightfront/node_modules/@syncfusion/ej2-treegrid/src/treegrid/base/data.js"],"names":["extend","isNullOrUndefined","setValue","getValue","addClass","removeClass","DataManager","Query","DataUtil","showSpinner","hideSpinner","getObject","getUid","isRemoteData","isOffline","isCountRequired","getExpandStatus","events","DataManipulation","grid","addedRecords","parent","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","addEventListener","dataResults","isSelfReference","parentIdMapping","prototype","on","updateParentRemoteData","beginSorting","updateData","remoteExpand","collectExpandingRecs","dataProcessor","removeEventListener","isDestroyed","off","destroy","isRemote","dataSource","convertToFlatData","data","_this","flatData","Object","keys","length","parentData","Array","dm","query","filterKey","params","filter","param","key","initialRender","where","addParams","idMapping","hasChildMapping","qry","clone","queries","select","executeQuery","then","e","distinct","result","req","httpRequest","statusText","zerothLevelData","dataManagerSuccess","convertJSONData","i","tempData","push","selfData","mappingData","executeLocal","group","groupData","index","indexOf","childData","items","childMapping","apply","selfReferenceUpdate","isGantt","referenceData","createRecords","shift","splice","args","records","loadChildOnDemand","rec","hasChildRecords","expanded","taskData","uniqueID","element","id","level","Math","ceil","random","checkboxState","notify","rowDetails","isChild","gridRows","getRows","rowTemplate","rows","getContentTable","slice","call","childRecord","record","style","display","targetEle","getElementsByClassName","getCurrentViewRecords","rowIndex","getRowObjectFromUID","getAttribute","childRows","r","querySelector","parentRow","expandingTd","detailRowModule","expand","fetchRemoteChildData","row","getDataModule","generateQuery","clonequries","fn","datas","currentViewData","inx","getRowsObject","forEach","haveChild","childRecords","parentItem","parentUniqueID","trigger","actionComplete","aggregates","enableVirtualization","gridQuery","result_1","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","count","pageSettings","totalRecordsCount","virtualArgs","remoteVirtualAction","notifyArgs","enableInfiniteScrolling","requestType","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","len","currentData","hasOwnProperty","enableCollapseAll","dataStateChange","expandStateMapping","isExport","expresults","exportType","isPrinting","dataObj","actionArgs","actionData","action","actionAddArgs","primaryKeyColumnName","getPrimaryKeyFieldNames","dataValue","editSettings","mode","batchChanges","editModule","getBatchChanges","isLocalData","updateAction","results","json","filterQuery","searchQuery","allowFiltering","filterSettings","columns","searchSettings","fltrQuery","srchQuery","concat","filteredData","sortSettings","gridQuery_1","srtQry","srt","col","getColumnByField","field","compFun","sortComparer","bind","direction","sortBy","modifiedData","sortArgs","isSort","query_1","temp","paging","allowPaging","printMode","pagingActions","actArgs","isPdfExport","isCollapsedStatePersist","actualResults","expandStatus","value","dataResult","crudAction","batchSave"],"mappings":"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","sourcesContent":["import { extend, isNullOrUndefined, setValue, getValue, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired, getExpandStatus } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n *\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {boolean} -Returns whether remote data binding\n     */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {Object} data - Provide tree grid datasource to convert to flat data\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                if (!this.parent.hasChildMapping) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[index][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     *\n     * @param {BeforeDataBoundArgs} args - contains data before its bounds to tree grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        if (!this.parent.hasChildMapping && !this.parentItems.length && !this.parent.loadChildOnDemand) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if (isCountRequired(this.parent) && records[rec].hasChildRecords && this.parent.initialRender) {\n                        records[rec].expanded = false;\n                    }\n                    if (isNullOrUndefined(records[rec].index)) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        if ((records[rec][this.parent.hasChildMapping] ||\n                            this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)) {\n                            records[rec].hasChildRecords = true;\n                        }\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {{record: ITreeData, rows: HTMLTableRowElement[], parentRow: HTMLTableRowElement}} rowDetails - Row details for which child rows has to be fetched\n     * @param {ITreeData} rowDetails.record - current expanding record\n     * @param {HTMLTableRowElement[]} rowDetails.rows - Expanding Row element\n     * @param {HTMLTableRowElement} rowDetails.parentRow  - Curent expanding row element\n     * @param {boolean} isChild - Specified whether current record is already a child record\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[i].style.display = 'table-row';\n                if (this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var datas = _this.parent.grid.currentViewData.slice();\n            var inx = datas.indexOf(rowDetails.record);\n            if (inx === -1) {\n                _this.parent.grid.getRowsObject().forEach(function (rows) {\n                    if (rows.data.uniqueID === rowDetails.record.uniqueID) {\n                        inx = rows.index;\n                    }\n                });\n            }\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                result[r].taskData = extend({}, result[r]);\n                result[r].level = rowDetails.record.level + 1;\n                result[r].index = Math.ceil(Math.random() * 1000);\n                var parentData = extend({}, rowDetails.record);\n                delete parentData.childRecords;\n                result[r].parentItem = parentData;\n                result[r].parentUniqueID = rowDetails.record.uniqueID;\n                result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[r].checkboxState = 'uncheck';\n                setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[r])) {\n                    result[r].hasChildRecords = true;\n                    result[r].expanded = false;\n                }\n                datas.splice(inx + r + 1, 0, result[r]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                }\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            var notifyArgs = { index: inx, childData: result };\n            if (_this.parent.enableInfiniteScrolling) {\n                _this.parent.notify('infinite-remote-expand', notifyArgs);\n            }\n            else {\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            }\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     *\n     * @param {BeforeDataBoundArgs} args - data details to be processed before binding to grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var qry = new Query();\n        var gridQuery = getObject('query', args);\n        var filterQuery;\n        var searchQuery;\n        if (!isNullOrUndefined(gridQuery)) {\n            filterQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            searchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n        }\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0) || (!isNullOrUndefined(gridQuery) &&\n            (filterQuery.length || searchQuery.length) && this.parent.isLocalData)) {\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery_1 = getObject('query', args);\n            if (isNullOrUndefined(gridQuery_1)) {\n                gridQuery_1 = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = this.parent.parentData;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.grid.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            var actArgs = this.parent.enableInfiniteScrolling ? args : getValue('actionArgs', args);\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: actArgs });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var isPdfExport = 'isPdfExport';\n        var isCollapsedStatePersist = 'isCollapsedStatePersist';\n        if ((isPrinting === true || (args[isPdfExport] && (isNullOrUndefined(args[isCollapsedStatePersist])\n            || args[isCollapsedStatePersist]))) && this.parent.printMode === 'AllPages') {\n            var actualResults = [];\n            for (var i = 0; i < results.length; i++) {\n                var expandStatus = getExpandStatus(this.parent, results[i], this.parent.parentData);\n                if (expandStatus) {\n                    actualResults.push(results[i]);\n                }\n            }\n            results = actualResults;\n            count = results.length;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n"]},"metadata":{},"sourceType":"module"}