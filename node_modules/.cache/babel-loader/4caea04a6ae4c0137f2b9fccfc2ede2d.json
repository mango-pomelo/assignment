{"ast":null,"code":"import { removeClass, addClass, extend } from '@syncfusion/ej2-base';\nimport { closest, classList } from '@syncfusion/ej2-base';\nimport { Grid } from '../base/grid';\nimport { parents, getUid, appendChildren } from '../base/util';\nimport * as events from '../base/constant';\nimport { AriaService } from '../services/aria-service';\nimport { Row } from '../models/row';\nimport { Cell } from '../models/cell';\nimport { CellType } from '../base/enum';\nimport * as literals from '../base/string-literals';\n/**\n * The `DetailRow` module is used to handle detail template and hierarchy Grid operations.\n */\n\nvar DetailRow =\n/** @class */\nfunction () {\n  /**\n   * Constructor for the Grid detail template module\n   *\n   * @param {IGrid} parent - specifies the IGrid\n   * @param {ServiceLocator} locator - specifes the serviceLocator\n   * @hidden\n   */\n  function DetailRow(parent, locator) {\n    //Internal variables\n    this.aria = new AriaService();\n    this.parent = parent;\n\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.focus = locator.getService('focus');\n    this.parent.on(events.click, this.clickHandler, this);\n    this.parent.on(events.destroy, this.destroy, this);\n    this.parent.on(events.keyPressed, this.keyPressHandler, this);\n    this.parent.on(events.expandChildGrid, this.expand, this);\n    this.parent.on(events.columnVisibilityChanged, this.refreshColSpan, this);\n  }\n\n  DetailRow.prototype.clickHandler = function (e) {\n    this.toogleExpandcollapse(closest(e.target, 'td'));\n  };\n\n  DetailRow.prototype.toogleExpandcollapse = function (target) {\n    var gObj = this.parent;\n    var table = this.parent.getContentTable();\n    var lastrowIdx = this.parent.getCurrentViewRecords().length - 1;\n    var parent = 'parentDetails';\n    var childGrid;\n    var isExpanded = target && target.classList.contains('e-detailrowcollapse');\n\n    if (!(target && (target.classList.contains('e-detailrowcollapse') || target.classList.contains('e-detailrowexpand')))) {\n      return;\n    }\n\n    var tr = target.parentElement;\n    var uid = tr.getAttribute('data-uid');\n    var rowObj = gObj.getRowObjectFromUID(uid);\n    var nextRow = this.parent.getContentTable().querySelector(literals.tbody).children[tr.rowIndex + 1];\n\n    if (target.classList.contains('e-detailrowcollapse')) {\n      var data = rowObj.data;\n\n      if (this.isDetailRow(nextRow)) {\n        nextRow.style.display = '';\n        gObj.notify(events.detailStateChange, {\n          data: data,\n          childGrid: gObj.childGrid,\n          detailElement: target,\n          isExpanded: isExpanded\n        });\n      } else if (gObj.getDetailTemplate() || gObj.childGrid) {\n        var rowId = getUid('grid-row');\n        var detailRow = this.parent.createElement('tr', {\n          className: 'e-detailrow',\n          attrs: {\n            'data-uid': rowId\n          }\n        });\n        var detailCell = this.parent.createElement('td', {\n          className: 'e-detailcell'\n        });\n        var colSpan = this.parent.getVisibleColumns().length;\n\n        if (this.parent.allowRowDragAndDrop) {\n          colSpan++;\n        }\n\n        detailCell.setAttribute('colspan', colSpan.toString());\n        var row = new Row({\n          isDataRow: true,\n          isExpand: true,\n          uid: rowId,\n          isDetailRow: true,\n          cells: [new Cell({\n            cellType: CellType.Indent\n          }), new Cell({\n            isDataCell: true,\n            visible: true\n          })]\n        });\n\n        for (var i = 0, len = gObj.groupSettings.columns.length; i < len; i++) {\n          detailRow.appendChild(this.parent.createElement('td', {\n            className: 'e-indentcell'\n          }));\n          row.cells.unshift(new Cell({\n            cellType: CellType.Indent\n          }));\n        }\n\n        detailRow.appendChild(this.parent.createElement('td', {\n          className: 'e-detailindentcell'\n        }));\n        detailRow.appendChild(detailCell);\n        tr.parentNode.insertBefore(detailRow, tr.nextSibling);\n\n        if (gObj.detailTemplate) {\n          var isReactCompiler = this.parent.isReact && typeof gObj.detailTemplate !== 'string';\n          var detailTemplateID = gObj.element.id + 'detailTemplate';\n\n          if (isReactCompiler) {\n            gObj.getDetailTemplate()(data, gObj, 'detailTemplate', detailTemplateID, null, null, detailCell);\n            this.parent.renderTemplates();\n          } else {\n            appendChildren(detailCell, gObj.getDetailTemplate()(data, gObj, 'detailTemplate', detailTemplateID));\n          }\n        } else {\n          childGrid = new Grid(this.getGridModel(gObj, rowObj, gObj.printMode));\n\n          if (childGrid.query) {\n            childGrid.query = childGrid.query.clone();\n          }\n\n          childGrid[parent] = {\n            parentID: gObj.element.id,\n            parentPrimaryKeys: gObj.getPrimaryKeyFieldNames(),\n            parentKeyField: gObj.childGrid.queryString,\n            parentKeyFieldValue: data[gObj.childGrid.queryString],\n            parentRowData: data\n          };\n          childGrid.isLegacyTemplate = gObj.isReact || gObj.isLegacyTemplate;\n\n          if (gObj.isPrinting) {\n            childGrid.isPrinting = true;\n            childGrid.on(events.contentReady, this.promiseResolve(childGrid), this);\n            childGrid.on(events.onEmpty, this.promiseResolve(childGrid), this);\n          }\n\n          rowObj.childGrid = childGrid;\n          var modules = childGrid.getInjectedModules();\n          var injectedModues = gObj.getInjectedModules();\n\n          if (!modules || modules.length !== injectedModues.length) {\n            childGrid.setInjectedModules(injectedModues);\n          }\n\n          var gridElem = this.parent.createElement('div', {\n            id: 'child' + parents(tr, 'e-grid').length + '_grid' + tr.rowIndex + getUid('')\n          });\n          detailCell.appendChild(gridElem);\n          childGrid.appendTo(gridElem);\n        }\n\n        detailRow.appendChild(detailCell);\n\n        if (tr.nextSibling) {\n          tr.parentNode.insertBefore(detailRow, tr.nextSibling);\n        } else {\n          tr.parentNode.appendChild(detailRow);\n        }\n\n        gObj.getRows().splice(tr.rowIndex + 1, 0, detailRow);\n        gObj.getRowsObject().splice(rowObj.index + 1, 0, row);\n        gObj.trigger(events.detailDataBound, {\n          detailElement: detailCell,\n          data: data,\n          childGrid: childGrid\n        });\n        gObj.notify(events.detailDataBound, {\n          rows: gObj.getRowsObject()\n        });\n      }\n\n      classList(target, ['e-detailrowexpand'], ['e-detailrowcollapse']);\n      classList(target.firstElementChild, ['e-dtdiagonaldown', 'e-icon-gdownarrow'], ['e-dtdiagonalright', 'e-icon-grightarrow']);\n      rowObj.isExpand = true;\n\n      if (target.classList.contains('e-lastrowcell') && this.parent.getContent().clientHeight > table.scrollHeight) {\n        removeClass(target.parentElement.querySelectorAll('td'), 'e-lastrowcell');\n        var detailrowIdx = table.querySelector(literals.tbody).getElementsByClassName('e-detailrow').length - 1;\n        addClass(table.querySelector(literals.tbody).getElementsByClassName('e-detailrow')[detailrowIdx].childNodes, ['e-lastrowcell']);\n        this.lastrowcell = true;\n      }\n\n      this.aria.setExpand(target, true);\n    } else {\n      if (this.isDetailRow(nextRow)) {\n        nextRow.style.display = 'none';\n        gObj.notify(events.detailStateChange, {\n          data: rowObj.data,\n          childGrid: gObj.childGrid,\n          detailElement: target,\n          isExpanded: isExpanded\n        });\n      }\n\n      classList(target, ['e-detailrowcollapse'], ['e-detailrowexpand']);\n      classList(target.firstElementChild, ['e-dtdiagonalright', 'e-icon-grightarrow'], ['e-dtdiagonaldown', 'e-icon-gdownarrow']);\n\n      if (parseInt(tr.getAttribute(literals.ariaRowIndex), 10) === lastrowIdx && this.lastrowcell) {\n        addClass(target.parentElement.querySelectorAll('td'), 'e-lastrowcell');\n        this.lastrowcell = false;\n      }\n\n      rowObj.isExpand = false;\n      this.aria.setExpand(target, false);\n    }\n  };\n  /**\n   * @hidden\n   * @param {IGrid} gObj - specifies the grid Object\n   * @param {Row<Column>}rowObj - specifies the row object\n   * @param {string} printMode - specifies the printmode\n   * @returns {Object} returns the object\n   */\n\n\n  DetailRow.prototype.getGridModel = function (gObj, rowObj, printMode) {\n    var gridModel;\n\n    if (gObj.isPrinting && rowObj.isExpand && gObj.expandedRows && gObj.expandedRows[rowObj.index] && gObj.expandedRows[rowObj.index].gridModel) {\n      gObj.expandedRows[rowObj.index].gridModel.hierarchyPrintMode = gObj.childGrid.hierarchyPrintMode;\n      gridModel = gObj.expandedRows[rowObj.index].gridModel;\n    } else {\n      if (gObj.isPrinting && gObj.childGrid.allowPaging) {\n        gObj.childGrid.allowPaging = printMode === 'CurrentPage';\n      }\n\n      gridModel = extend({}, {}, gObj.childGrid, true);\n    }\n\n    return gridModel;\n  };\n\n  DetailRow.prototype.promiseResolve = function (grid) {\n    var _this = this;\n\n    return function () {\n      grid.off(events.contentReady, _this.promiseResolve);\n      grid.off(events.onEmpty, _this.promiseResolve);\n      grid.notify(events.hierarchyPrint, {});\n    };\n  };\n\n  DetailRow.prototype.isDetailRow = function (row) {\n    return row && row.classList.contains('e-detailrow');\n  };\n\n  DetailRow.prototype.destroy = function () {\n    var gridElement = this.parent.element;\n\n    if (this.parent.isDestroyed || !gridElement || !gridElement.querySelector('.' + literals.gridHeader) && !gridElement.querySelector('.' + literals.gridContent)) {\n      return;\n    }\n\n    this.parent.off(events.click, this.clickHandler);\n    this.parent.off(events.destroy, this.destroy);\n    this.parent.off(events.keyPressed, this.keyPressHandler);\n    this.parent.off(events.expandChildGrid, this.expand);\n    this.parent.off(events.columnVisibilityChanged, this.refreshColSpan);\n  };\n\n  DetailRow.prototype.getTDfromIndex = function (index, className) {\n    var tr = this.parent.getDataRows()[index];\n\n    if (tr && tr.querySelector(className)) {\n      return tr.querySelector(className);\n    }\n\n    return null;\n  };\n  /**\n   * Expands a detail row with the given target.\n   *\n   * @param  {Element} target - Defines the collapsed element to expand.\n   * @returns {void}\n   */\n\n\n  DetailRow.prototype.expand = function (target) {\n    if (!isNaN(target)) {\n      target = this.getTDfromIndex(target, '.e-detailrowcollapse');\n    }\n\n    if (target && target.classList.contains('e-detailrowcollapse')) {\n      this.toogleExpandcollapse(target);\n    }\n  };\n  /**\n   * Collapses a detail row with the given target.\n   *\n   * @param  {Element} target - Defines the expanded element to collapse.\n   * @returns {void}\n   */\n\n\n  DetailRow.prototype.collapse = function (target) {\n    if (!isNaN(target)) {\n      target = this.getTDfromIndex(target, '.e-detailrowexpand');\n    }\n\n    if (target && target.classList.contains('e-detailrowexpand')) {\n      this.toogleExpandcollapse(target);\n    }\n  };\n  /**\n   * Expands all the detail rows of the Grid.\n   *\n   * @returns {void}\n   */\n\n\n  DetailRow.prototype.expandAll = function () {\n    this.expandCollapse(true);\n    this.parent.trigger(events.actionComplete, {\n      requestType: 'expandAllComplete',\n      type: events.actionComplete,\n      moduleObj: this\n    });\n  };\n  /**\n   * Collapses all the detail rows of the Grid.\n   *\n   * @returns {void}\n   */\n\n\n  DetailRow.prototype.collapseAll = function () {\n    this.expandCollapse(false);\n    this.parent.trigger(events.actionComplete, {\n      requestType: 'collapseAllComplete',\n      type: events.actionComplete,\n      moduleObj: this\n    });\n  };\n\n  DetailRow.prototype.expandCollapse = function (isExpand) {\n    var td;\n    var rows = this.parent.getDataRows();\n\n    for (var i = 0, len = rows.length; i < len; i++) {\n      td = rows[i].querySelector('.e-detailrowcollapse, .e-detailrowexpand');\n\n      if (isExpand) {\n        this.expand(td);\n      } else {\n        this.collapse(td);\n      }\n    }\n  };\n\n  DetailRow.prototype.keyPressHandler = function (e) {\n    var gObj = this.parent;\n\n    switch (e.action) {\n      case 'ctrlDownArrow':\n        this.expandAll();\n        break;\n\n      case 'ctrlUpArrow':\n        this.collapseAll();\n        break;\n\n      case 'altUpArrow':\n      case 'altDownArrow':\n        // eslint-disable-next-line no-case-declarations\n        var selected = gObj.allowSelection ? gObj.getSelectedRowIndexes() : [];\n\n        if (selected.length) {\n          var dataRow = gObj.getDataRows()[selected[selected.length - 1]];\n          var td = dataRow.querySelector('.e-detailrowcollapse, .e-detailrowexpand');\n\n          if (e.action === 'altDownArrow') {\n            this.expand(td);\n          } else {\n            this.collapse(td);\n          }\n        }\n\n        break;\n\n      case 'enter':\n        if (this.parent.isEdit) {\n          return;\n        } // eslint-disable-next-line no-case-declarations\n\n\n        var element = this.focus.getFocusedElement();\n\n        if (!e.target.classList.contains('e-detailrowcollapse') && !e.target.classList.contains('e-detailrowexpand')) {\n          break;\n        }\n\n        this.toogleExpandcollapse(element);\n        break;\n    }\n  };\n\n  DetailRow.prototype.refreshColSpan = function () {\n    var detailrows = this.parent.contentModule.getTable().querySelectorAll('tr.e-detailrow');\n    var colSpan = this.parent.getVisibleColumns().length;\n\n    for (var i = 0; i < detailrows.length; i++) {\n      detailrows[i].querySelector('.e-detailcell').setAttribute('colspan', colSpan + '');\n    }\n  };\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @returns {string} returns the module name\n   * @private\n   */\n\n\n  DetailRow.prototype.getModuleName = function () {\n    return 'detailRow';\n  };\n\n  return DetailRow;\n}();\n\nexport { DetailRow };","map":{"version":3,"sources":["/Users/zhouzhou/Desktop/lightfront/node_modules/@syncfusion/ej2-grids/src/grid/actions/detail-row.js"],"names":["removeClass","addClass","extend","closest","classList","Grid","parents","getUid","appendChildren","events","AriaService","Row","Cell","CellType","literals","DetailRow","parent","locator","aria","isDestroyed","focus","getService","on","click","clickHandler","destroy","keyPressed","keyPressHandler","expandChildGrid","expand","columnVisibilityChanged","refreshColSpan","prototype","e","toogleExpandcollapse","target","gObj","table","getContentTable","lastrowIdx","getCurrentViewRecords","length","childGrid","isExpanded","contains","tr","parentElement","uid","getAttribute","rowObj","getRowObjectFromUID","nextRow","querySelector","tbody","children","rowIndex","data","isDetailRow","style","display","notify","detailStateChange","detailElement","getDetailTemplate","rowId","detailRow","createElement","className","attrs","detailCell","colSpan","getVisibleColumns","allowRowDragAndDrop","setAttribute","toString","row","isDataRow","isExpand","cells","cellType","Indent","isDataCell","visible","i","len","groupSettings","columns","appendChild","unshift","parentNode","insertBefore","nextSibling","detailTemplate","isReactCompiler","isReact","detailTemplateID","element","id","renderTemplates","getGridModel","printMode","query","clone","parentID","parentPrimaryKeys","getPrimaryKeyFieldNames","parentKeyField","queryString","parentKeyFieldValue","parentRowData","isLegacyTemplate","isPrinting","contentReady","promiseResolve","onEmpty","modules","getInjectedModules","injectedModues","setInjectedModules","gridElem","appendTo","getRows","splice","getRowsObject","index","trigger","detailDataBound","rows","firstElementChild","getContent","clientHeight","scrollHeight","querySelectorAll","detailrowIdx","getElementsByClassName","childNodes","lastrowcell","setExpand","parseInt","ariaRowIndex","gridModel","expandedRows","hierarchyPrintMode","allowPaging","grid","_this","off","hierarchyPrint","gridElement","gridHeader","gridContent","getTDfromIndex","getDataRows","isNaN","collapse","expandAll","expandCollapse","actionComplete","requestType","type","moduleObj","collapseAll","td","action","selected","allowSelection","getSelectedRowIndexes","dataRow","isEdit","getFocusedElement","detailrows","contentModule","getTable","getModuleName"],"mappings":"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","sourcesContent":["import { removeClass, addClass, extend } from '@syncfusion/ej2-base';\nimport { closest, classList } from '@syncfusion/ej2-base';\nimport { Grid } from '../base/grid';\nimport { parents, getUid, appendChildren } from '../base/util';\nimport * as events from '../base/constant';\nimport { AriaService } from '../services/aria-service';\nimport { Row } from '../models/row';\nimport { Cell } from '../models/cell';\nimport { CellType } from '../base/enum';\nimport * as literals from '../base/string-literals';\n/**\n * The `DetailRow` module is used to handle detail template and hierarchy Grid operations.\n */\nvar DetailRow = /** @class */ (function () {\n    /**\n     * Constructor for the Grid detail template module\n     *\n     * @param {IGrid} parent - specifies the IGrid\n     * @param {ServiceLocator} locator - specifes the serviceLocator\n     * @hidden\n     */\n    function DetailRow(parent, locator) {\n        //Internal variables\n        this.aria = new AriaService();\n        this.parent = parent;\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.focus = locator.getService('focus');\n        this.parent.on(events.click, this.clickHandler, this);\n        this.parent.on(events.destroy, this.destroy, this);\n        this.parent.on(events.keyPressed, this.keyPressHandler, this);\n        this.parent.on(events.expandChildGrid, this.expand, this);\n        this.parent.on(events.columnVisibilityChanged, this.refreshColSpan, this);\n    }\n    DetailRow.prototype.clickHandler = function (e) {\n        this.toogleExpandcollapse(closest(e.target, 'td'));\n    };\n    DetailRow.prototype.toogleExpandcollapse = function (target) {\n        var gObj = this.parent;\n        var table = this.parent.getContentTable();\n        var lastrowIdx = this.parent.getCurrentViewRecords().length - 1;\n        var parent = 'parentDetails';\n        var childGrid;\n        var isExpanded = target && target.classList.contains('e-detailrowcollapse');\n        if (!(target && (target.classList.contains('e-detailrowcollapse') || target.classList.contains('e-detailrowexpand')))) {\n            return;\n        }\n        var tr = target.parentElement;\n        var uid = tr.getAttribute('data-uid');\n        var rowObj = gObj.getRowObjectFromUID(uid);\n        var nextRow = this.parent.getContentTable().querySelector(literals.tbody).children[tr.rowIndex + 1];\n        if (target.classList.contains('e-detailrowcollapse')) {\n            var data = rowObj.data;\n            if (this.isDetailRow(nextRow)) {\n                nextRow.style.display = '';\n                gObj.notify(events.detailStateChange, { data: data,\n                    childGrid: gObj.childGrid, detailElement: target, isExpanded: isExpanded });\n            }\n            else if (gObj.getDetailTemplate() || gObj.childGrid) {\n                var rowId = getUid('grid-row');\n                var detailRow = this.parent.createElement('tr', { className: 'e-detailrow', attrs: { 'data-uid': rowId } });\n                var detailCell = this.parent.createElement('td', { className: 'e-detailcell' });\n                var colSpan = this.parent.getVisibleColumns().length;\n                if (this.parent.allowRowDragAndDrop) {\n                    colSpan++;\n                }\n                detailCell.setAttribute('colspan', colSpan.toString());\n                var row = new Row({\n                    isDataRow: true,\n                    isExpand: true,\n                    uid: rowId,\n                    isDetailRow: true,\n                    cells: [new Cell({ cellType: CellType.Indent }), new Cell({ isDataCell: true, visible: true })]\n                });\n                for (var i = 0, len = gObj.groupSettings.columns.length; i < len; i++) {\n                    detailRow.appendChild(this.parent.createElement('td', { className: 'e-indentcell' }));\n                    row.cells.unshift(new Cell({ cellType: CellType.Indent }));\n                }\n                detailRow.appendChild(this.parent.createElement('td', { className: 'e-detailindentcell' }));\n                detailRow.appendChild(detailCell);\n                tr.parentNode.insertBefore(detailRow, tr.nextSibling);\n                if (gObj.detailTemplate) {\n                    var isReactCompiler = this.parent.isReact && typeof (gObj.detailTemplate) !== 'string';\n                    var detailTemplateID = gObj.element.id + 'detailTemplate';\n                    if (isReactCompiler) {\n                        gObj.getDetailTemplate()(data, gObj, 'detailTemplate', detailTemplateID, null, null, detailCell);\n                        this.parent.renderTemplates();\n                    }\n                    else {\n                        appendChildren(detailCell, gObj.getDetailTemplate()(data, gObj, 'detailTemplate', detailTemplateID));\n                    }\n                }\n                else {\n                    childGrid = new Grid(this.getGridModel(gObj, rowObj, gObj.printMode));\n                    if (childGrid.query) {\n                        childGrid.query = childGrid.query.clone();\n                    }\n                    childGrid[parent] = {\n                        parentID: gObj.element.id,\n                        parentPrimaryKeys: gObj.getPrimaryKeyFieldNames(),\n                        parentKeyField: gObj.childGrid.queryString,\n                        parentKeyFieldValue: data[gObj.childGrid.queryString],\n                        parentRowData: data\n                    };\n                    childGrid.isLegacyTemplate = gObj.isReact\n                        || gObj.isLegacyTemplate;\n                    if (gObj.isPrinting) {\n                        childGrid.isPrinting = true;\n                        childGrid.on(events.contentReady, this.promiseResolve(childGrid), this);\n                        childGrid.on(events.onEmpty, this.promiseResolve(childGrid), this);\n                    }\n                    rowObj.childGrid = childGrid;\n                    var modules = childGrid.getInjectedModules();\n                    var injectedModues = gObj.getInjectedModules();\n                    if (!modules || modules.length !== injectedModues.length) {\n                        childGrid.setInjectedModules(injectedModues);\n                    }\n                    var gridElem = this.parent.createElement('div', {\n                        id: 'child' + parents(tr, 'e-grid').length +\n                            '_grid' + tr.rowIndex + getUid('')\n                    });\n                    detailCell.appendChild(gridElem);\n                    childGrid.appendTo(gridElem);\n                }\n                detailRow.appendChild(detailCell);\n                if (tr.nextSibling) {\n                    tr.parentNode.insertBefore(detailRow, tr.nextSibling);\n                }\n                else {\n                    tr.parentNode.appendChild(detailRow);\n                }\n                gObj.getRows().splice(tr.rowIndex + 1, 0, detailRow);\n                gObj.getRowsObject().splice(rowObj.index + 1, 0, row);\n                gObj.trigger(events.detailDataBound, { detailElement: detailCell, data: data, childGrid: childGrid });\n                gObj.notify(events.detailDataBound, { rows: gObj.getRowsObject() });\n            }\n            classList(target, ['e-detailrowexpand'], ['e-detailrowcollapse']);\n            classList(target.firstElementChild, ['e-dtdiagonaldown', 'e-icon-gdownarrow'], ['e-dtdiagonalright', 'e-icon-grightarrow']);\n            rowObj.isExpand = true;\n            if (target.classList.contains('e-lastrowcell') && this.parent.getContent().clientHeight > table.scrollHeight) {\n                removeClass(target.parentElement.querySelectorAll('td'), 'e-lastrowcell');\n                var detailrowIdx = table.querySelector(literals.tbody).getElementsByClassName('e-detailrow').length - 1;\n                addClass(table.querySelector(literals.tbody).getElementsByClassName('e-detailrow')[detailrowIdx].childNodes, ['e-lastrowcell']);\n                this.lastrowcell = true;\n            }\n            this.aria.setExpand(target, true);\n        }\n        else {\n            if (this.isDetailRow(nextRow)) {\n                nextRow.style.display = 'none';\n                gObj.notify(events.detailStateChange, { data: rowObj.data,\n                    childGrid: gObj.childGrid, detailElement: target, isExpanded: isExpanded });\n            }\n            classList(target, ['e-detailrowcollapse'], ['e-detailrowexpand']);\n            classList(target.firstElementChild, ['e-dtdiagonalright', 'e-icon-grightarrow'], ['e-dtdiagonaldown', 'e-icon-gdownarrow']);\n            if (parseInt(tr.getAttribute(literals.ariaRowIndex), 10) === lastrowIdx && this.lastrowcell) {\n                addClass(target.parentElement.querySelectorAll('td'), 'e-lastrowcell');\n                this.lastrowcell = false;\n            }\n            rowObj.isExpand = false;\n            this.aria.setExpand(target, false);\n        }\n    };\n    /**\n     * @hidden\n     * @param {IGrid} gObj - specifies the grid Object\n     * @param {Row<Column>}rowObj - specifies the row object\n     * @param {string} printMode - specifies the printmode\n     * @returns {Object} returns the object\n     */\n    DetailRow.prototype.getGridModel = function (gObj, rowObj, printMode) {\n        var gridModel;\n        if (gObj.isPrinting && rowObj.isExpand && gObj.expandedRows &&\n            gObj.expandedRows[rowObj.index] && gObj.expandedRows[rowObj.index].gridModel) {\n            gObj.expandedRows[rowObj.index].gridModel.hierarchyPrintMode = gObj.childGrid.hierarchyPrintMode;\n            gridModel = gObj.expandedRows[rowObj.index].gridModel;\n        }\n        else {\n            if (gObj.isPrinting && gObj.childGrid.allowPaging) {\n                gObj.childGrid.allowPaging = printMode === 'CurrentPage';\n            }\n            gridModel = extend({}, {}, gObj.childGrid, true);\n        }\n        return gridModel;\n    };\n    DetailRow.prototype.promiseResolve = function (grid) {\n        var _this = this;\n        return function () {\n            grid.off(events.contentReady, _this.promiseResolve);\n            grid.off(events.onEmpty, _this.promiseResolve);\n            grid.notify(events.hierarchyPrint, {});\n        };\n    };\n    DetailRow.prototype.isDetailRow = function (row) {\n        return row && row.classList.contains('e-detailrow');\n    };\n    DetailRow.prototype.destroy = function () {\n        var gridElement = this.parent.element;\n        if (this.parent.isDestroyed || !gridElement || (!gridElement.querySelector('.' + literals.gridHeader) &&\n            !gridElement.querySelector('.' + literals.gridContent))) {\n            return;\n        }\n        this.parent.off(events.click, this.clickHandler);\n        this.parent.off(events.destroy, this.destroy);\n        this.parent.off(events.keyPressed, this.keyPressHandler);\n        this.parent.off(events.expandChildGrid, this.expand);\n        this.parent.off(events.columnVisibilityChanged, this.refreshColSpan);\n    };\n    DetailRow.prototype.getTDfromIndex = function (index, className) {\n        var tr = this.parent.getDataRows()[index];\n        if (tr && tr.querySelector(className)) {\n            return tr.querySelector(className);\n        }\n        return null;\n    };\n    /**\n     * Expands a detail row with the given target.\n     *\n     * @param  {Element} target - Defines the collapsed element to expand.\n     * @returns {void}\n     */\n    DetailRow.prototype.expand = function (target) {\n        if (!isNaN(target)) {\n            target = this.getTDfromIndex(target, '.e-detailrowcollapse');\n        }\n        if (target && target.classList.contains('e-detailrowcollapse')) {\n            this.toogleExpandcollapse(target);\n        }\n    };\n    /**\n     * Collapses a detail row with the given target.\n     *\n     * @param  {Element} target - Defines the expanded element to collapse.\n     * @returns {void}\n     */\n    DetailRow.prototype.collapse = function (target) {\n        if (!isNaN(target)) {\n            target = this.getTDfromIndex(target, '.e-detailrowexpand');\n        }\n        if (target && target.classList.contains('e-detailrowexpand')) {\n            this.toogleExpandcollapse(target);\n        }\n    };\n    /**\n     * Expands all the detail rows of the Grid.\n     *\n     * @returns {void}\n     */\n    DetailRow.prototype.expandAll = function () {\n        this.expandCollapse(true);\n        this.parent.trigger(events.actionComplete, { requestType: 'expandAllComplete', type: events.actionComplete, moduleObj: this });\n    };\n    /**\n     * Collapses all the detail rows of the Grid.\n     *\n     * @returns {void}\n     */\n    DetailRow.prototype.collapseAll = function () {\n        this.expandCollapse(false);\n        this.parent.trigger(events.actionComplete, { requestType: 'collapseAllComplete', type: events.actionComplete, moduleObj: this });\n    };\n    DetailRow.prototype.expandCollapse = function (isExpand) {\n        var td;\n        var rows = this.parent.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            td = rows[i].querySelector('.e-detailrowcollapse, .e-detailrowexpand');\n            if (isExpand) {\n                this.expand(td);\n            }\n            else {\n                this.collapse(td);\n            }\n        }\n    };\n    DetailRow.prototype.keyPressHandler = function (e) {\n        var gObj = this.parent;\n        switch (e.action) {\n            case 'ctrlDownArrow':\n                this.expandAll();\n                break;\n            case 'ctrlUpArrow':\n                this.collapseAll();\n                break;\n            case 'altUpArrow':\n            case 'altDownArrow':\n                // eslint-disable-next-line no-case-declarations\n                var selected = gObj.allowSelection ? gObj.getSelectedRowIndexes() : [];\n                if (selected.length) {\n                    var dataRow = gObj.getDataRows()[selected[selected.length - 1]];\n                    var td = dataRow.querySelector('.e-detailrowcollapse, .e-detailrowexpand');\n                    if (e.action === 'altDownArrow') {\n                        this.expand(td);\n                    }\n                    else {\n                        this.collapse(td);\n                    }\n                }\n                break;\n            case 'enter':\n                if (this.parent.isEdit) {\n                    return;\n                }\n                // eslint-disable-next-line no-case-declarations\n                var element = this.focus.getFocusedElement();\n                if (!e.target.classList.contains('e-detailrowcollapse') &&\n                    !e.target.classList.contains('e-detailrowexpand')) {\n                    break;\n                }\n                this.toogleExpandcollapse(element);\n                break;\n        }\n    };\n    DetailRow.prototype.refreshColSpan = function () {\n        var detailrows = this.parent.contentModule.getTable().querySelectorAll('tr.e-detailrow');\n        var colSpan = this.parent.getVisibleColumns().length;\n        for (var i = 0; i < detailrows.length; i++) {\n            detailrows[i].querySelector('.e-detailcell').setAttribute('colspan', colSpan + '');\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} returns the module name\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n"]},"metadata":{},"sourceType":"module"}