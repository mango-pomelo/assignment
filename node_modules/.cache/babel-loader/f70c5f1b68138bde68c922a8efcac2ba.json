{"ast":null,"code":"import { Browser } from '@syncfusion/ej2-base';\nimport { isGroupAdaptive } from '../base/util';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { GroupModelGenerator } from '../services/group-model-generator';\nimport * as events from '../base/constant';\nimport * as literals from '../base/string-literals';\n/**\n * Content module is used to render grid content\n */\n\nvar VirtualRowModelGenerator =\n/** @class */\nfunction () {\n  function VirtualRowModelGenerator(parent) {\n    this.cOffsets = {};\n    this.cache = {};\n    this.movableCache = {};\n    this.frozenRightCache = {};\n    this.rowCache = {};\n    this.data = {};\n    this.groups = {};\n    this.parent = parent;\n    this.model = this.parent.pageSettings;\n    this.rowModelGenerator = this.parent.allowGrouping ? new GroupModelGenerator(this.parent) : new RowModelGenerator(this.parent);\n  }\n\n  VirtualRowModelGenerator.prototype.generateRows = function (data, e) {\n    var isFrozen = this.parent.isFrozenGrid();\n    var info = e.virtualInfo = e.virtualInfo || this.getData();\n    var xAxis = info.sentinelInfo && info.sentinelInfo.axis === 'X';\n    var page = !xAxis && info.loadNext && !info.loadSelf ? info.nextInfo.page : info.page;\n    var result = [];\n    var indexes = this.getBlockIndexes(page);\n    var loadedBlocks = [];\n\n    if (isFrozen && this.parent.getFrozenMode() !== literals.leftRight && !e.renderMovableContent || this.parent.getFrozenMode() === literals.leftRight && !e.renderMovableContent && !e.renderFrozenRightContent || !isFrozen) {\n      this.checkAndResetCache(e.requestType);\n    }\n\n    if (isGroupAdaptive(this.parent) && this.parent.vcRows.length) {\n      return result = this.parent.vcRows;\n    }\n\n    if (this.parent.enableColumnVirtualization) {\n      for (var i = 0; i < info.blockIndexes.length; i++) {\n        if (this.isBlockAvailable(info.blockIndexes[i])) {\n          this.cache[info.blockIndexes[i]] = this.rowModelGenerator.refreshRows(this.cache[info.blockIndexes[i]]);\n        }\n\n        if (e.renderMovableContent && this.isMovableBlockAvailable(info.blockIndexes[i]) || e.renderFrozenRightContent && this.isFrozenRightBlockAvailable(info.blockIndexes[i])) {\n          var cache = e.renderMovableContent ? this.movableCache : this.frozenRightCache;\n          cache[info.blockIndexes[i]] = this.rowModelGenerator.refreshRows(cache[info.blockIndexes[i]]);\n        }\n      }\n    }\n\n    var values = info.blockIndexes;\n\n    for (var i = 0; i < values.length; i++) {\n      if (!this.isBlockAvailable(values[i])) {\n        var rows = this.rowModelGenerator.generateRows(data, {\n          virtualInfo: info,\n          startIndex: this.getStartIndex(values[i], data)\n        });\n\n        if (isGroupAdaptive(this.parent) && !this.parent.vcRows.length) {\n          this.parent.vRows = rows;\n          this.parent.vcRows = rows;\n          this.parent.notify(events.refreshVirtualMaxPage, {});\n        }\n\n        var median = void 0;\n\n        if (isGroupAdaptive(this.parent)) {\n          median = this.model.pageSize / 2;\n\n          if (!this.isBlockAvailable(indexes[0])) {\n            this.cache[indexes[0]] = rows.slice(0, median);\n          }\n\n          if (!this.isBlockAvailable(indexes[1])) {\n            this.cache[indexes[1]] = rows.slice(median, this.model.pageSize);\n          }\n        } else {\n          median = ~~Math.max(rows.length, this.model.pageSize) / 2;\n\n          if (!this.isBlockAvailable(indexes[0])) {\n            this.cache[indexes[0]] = rows.slice(0, median);\n          }\n\n          if (!this.isBlockAvailable(indexes[1])) {\n            this.cache[indexes[1]] = rows.slice(median);\n          }\n        }\n      }\n\n      if (this.parent.groupSettings.columns.length && !xAxis && this.cache[values[i]]) {\n        this.cache[values[i]] = this.updateGroupRow(this.cache[values[i]], values[i]);\n      }\n\n      if (e.renderMovableContent && !this.isMovableBlockAvailable(values[i]) || e.renderFrozenRightContent && !this.isFrozenRightBlockAvailable(values[i])) {\n        var cache = e.renderMovableContent ? this.movableCache : this.frozenRightCache;\n        var rows = this.rowModelGenerator.generateRows(data, {\n          virtualInfo: info,\n          startIndex: this.getStartIndex(values[i], data)\n        });\n        var median = ~~Math.max(rows.length, this.model.pageSize) / 2;\n\n        if (e.renderFrozenRightContent && !this.isFrozenRightBlockAvailable(indexes[0]) || e.renderMovableContent && !this.isMovableBlockAvailable(indexes[0])) {\n          cache[indexes[0]] = rows.slice(0, median);\n        }\n\n        if (e.renderFrozenRightContent && !this.isFrozenRightBlockAvailable(indexes[1]) || e.renderMovableContent && !this.isMovableBlockAvailable(indexes[1])) {\n          cache[indexes[1]] = rows.slice(median);\n        }\n      }\n\n      if (!e.renderMovableContent && !e.renderFrozenRightContent && this.cache[values[i]]) {\n        result.push.apply(result, this.cache[values[i]]);\n      } else {\n        var cache = e.renderMovableContent ? this.movableCache : this.frozenRightCache;\n\n        if (cache[values[i]]) {\n          result.push.apply(result, cache[values[i]]);\n        }\n      }\n\n      if (this.isBlockAvailable(values[i])) {\n        loadedBlocks.push(values[i]);\n      }\n    }\n\n    info.blockIndexes = loadedBlocks;\n    var grouping = 'records';\n\n    if (this.parent.allowGrouping && this.parent.groupSettings.columns.length) {\n      this.parent.currentViewData[grouping] = result.map(function (m) {\n        return m.data;\n      });\n    } else if (isFrozen) {\n      if (e.renderMovableContent && (this.parent.getFrozenMode() === 'Left' || this.parent.getFrozenMode() === 'Right' || this.parent.getFrozenColumns()) || e.renderFrozenRightContent) {\n        this.parent.currentViewData = result.map(function (m) {\n          return m.data;\n        });\n      }\n    } else {\n      this.parent.currentViewData = result.map(function (m) {\n        return m.data;\n      });\n    }\n\n    return result;\n  };\n\n  VirtualRowModelGenerator.prototype.getBlockIndexes = function (page) {\n    return [page + (page - 1), page * 2];\n  };\n\n  VirtualRowModelGenerator.prototype.getPage = function (block) {\n    return block % 2 === 0 ? block / 2 : (block + 1) / 2;\n  };\n\n  VirtualRowModelGenerator.prototype.isBlockAvailable = function (value) {\n    return value in this.cache;\n  };\n\n  VirtualRowModelGenerator.prototype.isMovableBlockAvailable = function (value) {\n    return value in this.movableCache;\n  };\n\n  VirtualRowModelGenerator.prototype.isFrozenRightBlockAvailable = function (value) {\n    return value in this.frozenRightCache;\n  };\n\n  VirtualRowModelGenerator.prototype.getData = function () {\n    return {\n      page: this.model.currentPage,\n      blockIndexes: this.getBlockIndexes(this.model.currentPage),\n      direction: 'down',\n      columnIndexes: this.parent.getColumnIndexesInView()\n    };\n  };\n\n  VirtualRowModelGenerator.prototype.getStartIndex = function (blk, data, full) {\n    if (full === void 0) {\n      full = true;\n    }\n\n    var page = this.getPage(blk);\n    var even = blk % 2 === 0;\n    var index = (page - 1) * this.model.pageSize;\n    return full || !even ? index : index + ~~(this.model.pageSize / 2);\n  };\n\n  VirtualRowModelGenerator.prototype.getColumnIndexes = function (content) {\n    var _this = this;\n\n    if (content === void 0) {\n      content = this.parent.getHeaderContent().querySelector('.' + literals.headerContent);\n    }\n\n    if (this.parent.isFrozenGrid()) {\n      content = content.querySelector('.' + literals.movableHeader);\n    }\n\n    var indexes = [];\n    var sLeft = content.scrollLeft | 0;\n    var keys = Object.keys(this.cOffsets);\n    var cWidth = content.getBoundingClientRect().width;\n    sLeft = Math.min(this.cOffsets[keys.length - 1] - cWidth, sLeft);\n    var calWidth = Browser.isDevice ? 2 * cWidth : cWidth / 2;\n    var left = sLeft + cWidth + (sLeft === 0 ? calWidth : 0);\n    keys.some(function (offset) {\n      var iOffset = Number(offset);\n      var offsetVal = _this.cOffsets[offset];\n      var border = sLeft - calWidth <= offsetVal && left + calWidth >= offsetVal;\n\n      if (border) {\n        indexes.push(iOffset);\n      }\n\n      return left + calWidth < offsetVal;\n    });\n    this.addFrozenIndex(indexes);\n    return indexes;\n  };\n\n  VirtualRowModelGenerator.prototype.addFrozenIndex = function (indexes) {\n    if (this.parent.getFrozenColumns() && this.parent.enableColumnVirtualization && indexes[0] === 0) {\n      for (var i = 0; i < this.parent.getFrozenColumns(); i++) {\n        indexes.push(indexes[indexes.length - 1] + 1);\n      }\n    }\n  };\n\n  VirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n    var actions = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'grouping', 'ungrouping', 'reorder', 'save', 'delete'];\n\n    if (this.parent.getFrozenColumns() && this.parent.frozenRows && this.parent.enableColumnVirtualization && action === 'reorder') {\n      actions.splice(actions.indexOf(action), 1);\n    }\n\n    var clear = actions.some(function (value) {\n      return action === value;\n    });\n\n    if (clear) {\n      this.cache = {};\n      this.data = {};\n      this.groups = {};\n      this.movableCache = {};\n      this.frozenRightCache = {};\n    }\n\n    return clear;\n  };\n\n  VirtualRowModelGenerator.prototype.refreshColOffsets = function () {\n    var _this = this;\n\n    var col = 0;\n    this.cOffsets = {};\n    var gLen = this.parent.groupSettings.columns.length;\n    var cols = this.parent.columns;\n    var cLen = cols.length;\n\n    var isVisible = function (column) {\n      return column.visible && (!_this.parent.groupSettings.showGroupedColumn ? _this.parent.groupSettings.columns.indexOf(column.field) < 0 : column.visible);\n    };\n\n    var c = this.parent.groupSettings.columns;\n\n    for (var i = 0; i < c.length; i++) {\n      this.cOffsets[i] = (this.cOffsets[i - 1] | 0) + 30;\n    } // eslint-disable-next-line prefer-spread\n\n\n    var blocks = Array.apply(null, Array(cLen)).map(function () {\n      return col++;\n    });\n\n    for (var j = 0; j < blocks.length; j++) {\n      blocks[j] = blocks[j] + gLen;\n      this.cOffsets[blocks[j]] = (this.cOffsets[blocks[j] - 1] | 0) + (isVisible(cols[j]) ? parseInt(cols[j].width, 10) : 0);\n    }\n  };\n\n  VirtualRowModelGenerator.prototype.updateGroupRow = function (current, block) {\n    var currentFirst = current[0];\n    var rows = [];\n    var keys = Object.keys(this.cache);\n\n    for (var i = 0; i < keys.length; i++) {\n      if (Number(keys[i]) < block) {\n        rows = rows.concat(this.cache[keys[i]]);\n      }\n    }\n\n    if (currentFirst && currentFirst.isDataRow || block % 2 === 0) {\n      return current;\n    }\n\n    return this.iterateGroup(current, rows);\n  };\n\n  VirtualRowModelGenerator.prototype.iterateGroup = function (current, rows) {\n    var currentFirst = current[0];\n    var offset = 0;\n\n    if (currentFirst && currentFirst.isDataRow) {\n      return current;\n    }\n\n    var isPresent = current.some(function (row) {\n      return rows.some(function (oRow, index) {\n        var res = oRow && oRow.data.field !== undefined && oRow.data.field === row.data.field && oRow.data.key === row.data.key;\n\n        if (res) {\n          offset = index;\n        }\n\n        return res;\n      });\n    });\n\n    if (isPresent) {\n      current.shift();\n      current = this.iterateGroup(current, rows.slice(offset));\n    }\n\n    return current;\n  };\n\n  VirtualRowModelGenerator.prototype.getRows = function () {\n    var rows = [];\n    var keys = Object.keys(this.cache);\n\n    for (var i = 0; i < keys.length; i++) {\n      rows = rows.concat(this.cache[keys[i]]);\n    }\n\n    return rows;\n  };\n\n  VirtualRowModelGenerator.prototype.generateCells = function () {\n    var cells = [];\n    var cols = this.parent.columnModel;\n\n    for (var i = 0; i < cols.length; i++) {\n      cells.push(this.rowModelGenerator.generateCell(cols[i]));\n    }\n\n    return cells;\n  };\n\n  return VirtualRowModelGenerator;\n}();\n\nexport { VirtualRowModelGenerator };","map":{"version":3,"sources":["/Users/zhouzhou/Desktop/lightfront/node_modules/@syncfusion/ej2-grids/src/grid/services/virtual-row-model-generator.js"],"names":["Browser","isGroupAdaptive","RowModelGenerator","GroupModelGenerator","events","literals","VirtualRowModelGenerator","parent","cOffsets","cache","movableCache","frozenRightCache","rowCache","data","groups","model","pageSettings","rowModelGenerator","allowGrouping","prototype","generateRows","e","isFrozen","isFrozenGrid","info","virtualInfo","getData","xAxis","sentinelInfo","axis","page","loadNext","loadSelf","nextInfo","result","indexes","getBlockIndexes","loadedBlocks","getFrozenMode","leftRight","renderMovableContent","renderFrozenRightContent","checkAndResetCache","requestType","vcRows","length","enableColumnVirtualization","i","blockIndexes","isBlockAvailable","refreshRows","isMovableBlockAvailable","isFrozenRightBlockAvailable","values","rows","startIndex","getStartIndex","vRows","notify","refreshVirtualMaxPage","median","pageSize","slice","Math","max","groupSettings","columns","updateGroupRow","push","apply","grouping","currentViewData","map","m","getFrozenColumns","getPage","block","value","currentPage","direction","columnIndexes","getColumnIndexesInView","blk","full","even","index","getColumnIndexes","content","_this","getHeaderContent","querySelector","headerContent","movableHeader","sLeft","scrollLeft","keys","Object","cWidth","getBoundingClientRect","width","min","calWidth","isDevice","left","some","offset","iOffset","Number","offsetVal","border","addFrozenIndex","action","actions","frozenRows","splice","indexOf","clear","refreshColOffsets","col","gLen","cols","cLen","isVisible","column","visible","showGroupedColumn","field","c","blocks","Array","j","parseInt","current","currentFirst","concat","isDataRow","iterateGroup","isPresent","row","oRow","res","undefined","key","shift","getRows","generateCells","cells","columnModel","generateCell"],"mappings":"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","sourcesContent":["import { Browser } from '@syncfusion/ej2-base';\nimport { isGroupAdaptive } from '../base/util';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { GroupModelGenerator } from '../services/group-model-generator';\nimport * as events from '../base/constant';\nimport * as literals from '../base/string-literals';\n/**\n * Content module is used to render grid content\n */\nvar VirtualRowModelGenerator = /** @class */ (function () {\n    function VirtualRowModelGenerator(parent) {\n        this.cOffsets = {};\n        this.cache = {};\n        this.movableCache = {};\n        this.frozenRightCache = {};\n        this.rowCache = {};\n        this.data = {};\n        this.groups = {};\n        this.parent = parent;\n        this.model = this.parent.pageSettings;\n        this.rowModelGenerator = this.parent.allowGrouping ? new GroupModelGenerator(this.parent) : new RowModelGenerator(this.parent);\n    }\n    VirtualRowModelGenerator.prototype.generateRows = function (data, e) {\n        var isFrozen = this.parent.isFrozenGrid();\n        var info = e.virtualInfo = e.virtualInfo || this.getData();\n        var xAxis = info.sentinelInfo && info.sentinelInfo.axis === 'X';\n        var page = !xAxis && info.loadNext && !info.loadSelf ? info.nextInfo.page : info.page;\n        var result = [];\n        var indexes = this.getBlockIndexes(page);\n        var loadedBlocks = [];\n        if ((isFrozen && (this.parent.getFrozenMode() !== literals.leftRight && !e.renderMovableContent)\n            || this.parent.getFrozenMode() === literals.leftRight && !e.renderMovableContent && !e.renderFrozenRightContent) || !isFrozen) {\n            this.checkAndResetCache(e.requestType);\n        }\n        if (isGroupAdaptive(this.parent) && this.parent.vcRows.length) {\n            return result = this.parent.vcRows;\n        }\n        if (this.parent.enableColumnVirtualization) {\n            for (var i = 0; i < info.blockIndexes.length; i++) {\n                if (this.isBlockAvailable(info.blockIndexes[i])) {\n                    this.cache[info.blockIndexes[i]] = this.rowModelGenerator.refreshRows(this.cache[info.blockIndexes[i]]);\n                }\n                if ((e.renderMovableContent && this.isMovableBlockAvailable(info.blockIndexes[i]))\n                    || (e.renderFrozenRightContent && this.isFrozenRightBlockAvailable(info.blockIndexes[i]))) {\n                    var cache = e.renderMovableContent\n                        ? this.movableCache : this.frozenRightCache;\n                    cache[info.blockIndexes[i]] = this.rowModelGenerator.refreshRows(cache[info.blockIndexes[i]]);\n                }\n            }\n        }\n        var values = info.blockIndexes;\n        for (var i = 0; i < values.length; i++) {\n            if (!this.isBlockAvailable(values[i])) {\n                var rows = this.rowModelGenerator.generateRows(data, {\n                    virtualInfo: info, startIndex: this.getStartIndex(values[i], data)\n                });\n                if (isGroupAdaptive(this.parent) && !this.parent.vcRows.length) {\n                    this.parent.vRows = rows;\n                    this.parent.vcRows = rows;\n                    this.parent.notify(events.refreshVirtualMaxPage, {});\n                }\n                var median = void 0;\n                if (isGroupAdaptive(this.parent)) {\n                    median = this.model.pageSize / 2;\n                    if (!this.isBlockAvailable(indexes[0])) {\n                        this.cache[indexes[0]] = rows.slice(0, median);\n                    }\n                    if (!this.isBlockAvailable(indexes[1])) {\n                        this.cache[indexes[1]] = rows.slice(median, this.model.pageSize);\n                    }\n                }\n                else {\n                    median = ~~Math.max(rows.length, this.model.pageSize) / 2;\n                    if (!this.isBlockAvailable(indexes[0])) {\n                        this.cache[indexes[0]] = rows.slice(0, median);\n                    }\n                    if (!this.isBlockAvailable(indexes[1])) {\n                        this.cache[indexes[1]] = rows.slice(median);\n                    }\n                }\n            }\n            if (this.parent.groupSettings.columns.length && !xAxis && this.cache[values[i]]) {\n                this.cache[values[i]] = this.updateGroupRow(this.cache[values[i]], values[i]);\n            }\n            if ((e.renderMovableContent && !this.isMovableBlockAvailable(values[i]))\n                || (e.renderFrozenRightContent && !this.isFrozenRightBlockAvailable(values[i]))) {\n                var cache = e.renderMovableContent\n                    ? this.movableCache : this.frozenRightCache;\n                var rows = this.rowModelGenerator.generateRows(data, {\n                    virtualInfo: info, startIndex: this.getStartIndex(values[i], data)\n                });\n                var median = ~~Math.max(rows.length, this.model.pageSize) / 2;\n                if ((e.renderFrozenRightContent && !this.isFrozenRightBlockAvailable(indexes[0]))\n                    || (e.renderMovableContent && !this.isMovableBlockAvailable(indexes[0]))) {\n                    cache[indexes[0]] = rows.slice(0, median);\n                }\n                if ((e.renderFrozenRightContent && !this.isFrozenRightBlockAvailable(indexes[1]))\n                    || (e.renderMovableContent && !this.isMovableBlockAvailable(indexes[1]))) {\n                    cache[indexes[1]] = rows.slice(median);\n                }\n            }\n            if (!e.renderMovableContent && !e.renderFrozenRightContent && this.cache[values[i]]) {\n                result.push.apply(result, this.cache[values[i]]);\n            }\n            else {\n                var cache = e.renderMovableContent\n                    ? this.movableCache : this.frozenRightCache;\n                if (cache[values[i]]) {\n                    result.push.apply(result, cache[values[i]]);\n                }\n            }\n            if (this.isBlockAvailable(values[i])) {\n                loadedBlocks.push(values[i]);\n            }\n        }\n        info.blockIndexes = loadedBlocks;\n        var grouping = 'records';\n        if (this.parent.allowGrouping && this.parent.groupSettings.columns.length) {\n            this.parent.currentViewData[grouping] = result.map(function (m) { return m.data; });\n        }\n        else if (isFrozen) {\n            if ((e.renderMovableContent && (this.parent.getFrozenMode() === 'Left'\n                || this.parent.getFrozenMode() === 'Right' || this.parent.getFrozenColumns())) || e.renderFrozenRightContent) {\n                this.parent.currentViewData = result.map(function (m) { return m.data; });\n            }\n        }\n        else {\n            this.parent.currentViewData = result.map(function (m) { return m.data; });\n        }\n        return result;\n    };\n    VirtualRowModelGenerator.prototype.getBlockIndexes = function (page) {\n        return [page + (page - 1), page * 2];\n    };\n    VirtualRowModelGenerator.prototype.getPage = function (block) {\n        return block % 2 === 0 ? block / 2 : (block + 1) / 2;\n    };\n    VirtualRowModelGenerator.prototype.isBlockAvailable = function (value) {\n        return value in this.cache;\n    };\n    VirtualRowModelGenerator.prototype.isMovableBlockAvailable = function (value) {\n        return value in this.movableCache;\n    };\n    VirtualRowModelGenerator.prototype.isFrozenRightBlockAvailable = function (value) {\n        return value in this.frozenRightCache;\n    };\n    VirtualRowModelGenerator.prototype.getData = function () {\n        return {\n            page: this.model.currentPage,\n            blockIndexes: this.getBlockIndexes(this.model.currentPage),\n            direction: 'down',\n            columnIndexes: this.parent.getColumnIndexesInView()\n        };\n    };\n    VirtualRowModelGenerator.prototype.getStartIndex = function (blk, data, full) {\n        if (full === void 0) { full = true; }\n        var page = this.getPage(blk);\n        var even = blk % 2 === 0;\n        var index = (page - 1) * this.model.pageSize;\n        return full || !even ? index : index + ~~(this.model.pageSize / 2);\n    };\n    VirtualRowModelGenerator.prototype.getColumnIndexes = function (content) {\n        var _this = this;\n        if (content === void 0) { content = this.parent.getHeaderContent().querySelector('.' + literals.headerContent); }\n        if (this.parent.isFrozenGrid()) {\n            content = content.querySelector('.' + literals.movableHeader);\n        }\n        var indexes = [];\n        var sLeft = content.scrollLeft | 0;\n        var keys = Object.keys(this.cOffsets);\n        var cWidth = content.getBoundingClientRect().width;\n        sLeft = Math.min(this.cOffsets[keys.length - 1] - cWidth, sLeft);\n        var calWidth = Browser.isDevice ? 2 * cWidth : cWidth / 2;\n        var left = sLeft + cWidth + (sLeft === 0 ? calWidth : 0);\n        keys.some(function (offset) {\n            var iOffset = Number(offset);\n            var offsetVal = _this.cOffsets[offset];\n            var border = sLeft - calWidth <= offsetVal && left + calWidth >= offsetVal;\n            if (border) {\n                indexes.push(iOffset);\n            }\n            return left + calWidth < offsetVal;\n        });\n        this.addFrozenIndex(indexes);\n        return indexes;\n    };\n    VirtualRowModelGenerator.prototype.addFrozenIndex = function (indexes) {\n        if (this.parent.getFrozenColumns() && this.parent.enableColumnVirtualization && indexes[0] === 0) {\n            for (var i = 0; i < this.parent.getFrozenColumns(); i++) {\n                indexes.push(indexes[indexes.length - 1] + 1);\n            }\n        }\n    };\n    VirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var actions = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'grouping', 'ungrouping', 'reorder',\n            'save', 'delete'];\n        if (this.parent.getFrozenColumns() && this.parent.frozenRows && this.parent.enableColumnVirtualization && action === 'reorder') {\n            actions.splice(actions.indexOf(action), 1);\n        }\n        var clear = actions.some(function (value) { return action === value; });\n        if (clear) {\n            this.cache = {};\n            this.data = {};\n            this.groups = {};\n            this.movableCache = {};\n            this.frozenRightCache = {};\n        }\n        return clear;\n    };\n    VirtualRowModelGenerator.prototype.refreshColOffsets = function () {\n        var _this = this;\n        var col = 0;\n        this.cOffsets = {};\n        var gLen = this.parent.groupSettings.columns.length;\n        var cols = this.parent.columns;\n        var cLen = cols.length;\n        var isVisible = function (column) { return column.visible &&\n            (!_this.parent.groupSettings.showGroupedColumn ? _this.parent.groupSettings.columns.indexOf(column.field) < 0 : column.visible); };\n        var c = this.parent.groupSettings.columns;\n        for (var i = 0; i < c.length; i++) {\n            this.cOffsets[i] = (this.cOffsets[i - 1] | 0) + 30;\n        }\n        // eslint-disable-next-line prefer-spread\n        var blocks = Array.apply(null, Array(cLen)).map(function () { return col++; });\n        for (var j = 0; j < blocks.length; j++) {\n            blocks[j] = blocks[j] + gLen;\n            this.cOffsets[blocks[j]] = (this.cOffsets[blocks[j] - 1] | 0) + (isVisible(cols[j]) ? parseInt(cols[j].width, 10) : 0);\n        }\n    };\n    VirtualRowModelGenerator.prototype.updateGroupRow = function (current, block) {\n        var currentFirst = current[0];\n        var rows = [];\n        var keys = Object.keys(this.cache);\n        for (var i = 0; i < keys.length; i++) {\n            if (Number(keys[i]) < block) {\n                rows = rows.concat(this.cache[keys[i]]);\n            }\n        }\n        if ((currentFirst && currentFirst.isDataRow) || block % 2 === 0) {\n            return current;\n        }\n        return this.iterateGroup(current, rows);\n    };\n    VirtualRowModelGenerator.prototype.iterateGroup = function (current, rows) {\n        var currentFirst = current[0];\n        var offset = 0;\n        if (currentFirst && currentFirst.isDataRow) {\n            return current;\n        }\n        var isPresent = current.some(function (row) {\n            return rows.some(function (oRow, index) {\n                var res = oRow && oRow.data.field !== undefined\n                    && oRow.data.field === row.data.field &&\n                    oRow.data.key === row.data.key;\n                if (res) {\n                    offset = index;\n                }\n                return res;\n            });\n        });\n        if (isPresent) {\n            current.shift();\n            current = this.iterateGroup(current, rows.slice(offset));\n        }\n        return current;\n    };\n    VirtualRowModelGenerator.prototype.getRows = function () {\n        var rows = [];\n        var keys = Object.keys(this.cache);\n        for (var i = 0; i < keys.length; i++) {\n            rows = rows.concat(this.cache[keys[i]]);\n        }\n        return rows;\n    };\n    VirtualRowModelGenerator.prototype.generateCells = function () {\n        var cells = [];\n        var cols = this.parent.columnModel;\n        for (var i = 0; i < cols.length; i++) {\n            cells.push(this.rowModelGenerator.generateCell(cols[i]));\n        }\n        return cells;\n    };\n    return VirtualRowModelGenerator;\n}());\nexport { VirtualRowModelGenerator };\n"]},"metadata":{},"sourceType":"module"}