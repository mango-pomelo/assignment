{"ast":null,"code":"import { Grid, Edit as GridEdit, getUid, getObject, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\n\nvar Edit =\n/** @class */\nfunction () {\n  /**\n   * Constructor for Edit module\n   *\n   * @param {TreeGrid} parent - Tree Grid instance\n   */\n  function Edit(parent) {\n    this.addedRecords = 'addedRecords';\n    this.deletedRecords = 'deletedRecords';\n    this.prevAriaRowIndex = '-1';\n    Grid.Inject(GridEdit);\n    this.parent = parent;\n    this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n    this.previousNewRowPosition = null;\n    this.internalProperties = {};\n    this.batchEditModule = new BatchEdit(this.parent);\n    this.addEventListener();\n  }\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @private\n   * @returns {string} Returns Edit module name\n   */\n\n\n  Edit.prototype.getModuleName = function () {\n    return 'edit';\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n\n\n  Edit.prototype.addEventListener = function () {\n    this.parent.on(events.crudAction, this.crudAction, this);\n    this.parent.on(events.beginEdit, this.beginEdit, this);\n    this.parent.on(events.beginAdd, this.beginAdd, this);\n    this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n    this.parent.on(events.cellSave, this.cellSave, this);\n    this.parent.on(events.batchCancel, this.batchCancel, this);\n    this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n    this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n    this.parent.grid.on('content-ready', this.contentready, this);\n    this.parent.on(events.cellEdit, this.cellEdit, this);\n    this.parent.on('actionBegin', this.editActionEvents, this);\n    this.parent.on('actionComplete', this.editActionEvents, this);\n    this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n    this.parent.grid.on('dblclick', this.gridDblClick, this);\n    this.parent.grid.on('recordAdded', this.customCellSave, this);\n    this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this); // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n\n    this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n    this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n    this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n    this.parent.grid.on('get-row-position', this.getRowPosition, this);\n  };\n\n  Edit.prototype.gridDblClick = function (e) {\n    this.doubleClickTarget = e.target;\n  };\n\n  Edit.prototype.getRowPosition = function (addArgs) {\n    addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n    addArgs.addRowIndex = this.addRowIndex;\n    addArgs.ariaRowIndex = +this.prevAriaRowIndex;\n  };\n\n  Edit.prototype.beforeStartEdit = function (args) {\n    this.parent.trigger(events.actionBegin, args);\n  };\n\n  Edit.prototype.beforeBatchCancel = function (args) {\n    if (this.parent.editSettings.mode === 'Cell') {\n      this.parent.trigger(events.actionComplete, args);\n    }\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n\n\n  Edit.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.off(events.crudAction, this.crudAction);\n    this.parent.off(events.beginEdit, this.beginEdit);\n    this.parent.off(events.beginAdd, this.beginAdd);\n    this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n    this.parent.off(events.batchCancel, this.batchCancel);\n    this.parent.grid.off(events.keyPressed, this.keyPressed);\n    this.parent.grid.off('batchedit-form', this.lastCellTab);\n    this.parent.grid.off('content-ready', this.contentready);\n    this.parent.off(events.cellEdit, this.cellEdit);\n    this.parent.off('actionBegin', this.editActionEvents);\n    this.parent.off('actionComplete', this.editActionEvents);\n    this.parent.grid.off('recordAdded', this.customCellSave);\n    this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n    this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n    this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n    this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n    this.parent.grid.off('dblclick', this.gridDblClick);\n    this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n    this.parent.grid.off('get-row-position', this.getRowPosition); //this.parent.grid.off('click', this.gridSingleClick);\n  };\n  /**\n   * To destroy the editModule\n   *\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Edit.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n  /**\n   * @param {Column[]} cols - Column property Collection\n   * @hidden\n   * @returns {void}\n   */\n\n\n  Edit.prototype.applyFormValidation = function (cols) {\n    this.parent.grid.editModule.applyFormValidation(cols);\n  };\n\n  Edit.prototype.editActionEvents = function (args) {\n    var eventArgs = getObject('editAction', args);\n    var eventName = getObject('name', eventArgs);\n    var treeObj = this.parent;\n    var adaptor = treeObj.dataSource.adaptor;\n\n    if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) && eventArgs.requestType === 'save' && eventArgs.action === 'add' && (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below' || treeObj.editSettings.newRowPosition === 'Above')) {\n      if (eventName === 'actionBegin') {\n        var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex : eventArgs.row.rowIndex - 1;\n        var keyData = !isNullOrUndefined(rowIndex) && rowIndex !== -1 ? treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n        treeObj.grid.query.addParams('relationalKey', keyData);\n      } else if (eventName === 'actionComplete') {\n        var paramsLength = treeObj.grid.query.params.length;\n\n        for (var i = 0; i < paramsLength; i++) {\n          if (treeObj.grid.query.params[i].key === 'relationalKey') {\n            treeObj.grid.query.params.splice(i);\n          }\n        }\n      }\n    }\n\n    if (this.parent.enableInfiniteScrolling && eventName === 'actionComplete') {\n      this.infiniteAddAction(eventArgs);\n    }\n\n    if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n      this.parent.notify('batchPageAction', {});\n    }\n  };\n\n  Edit.prototype.infiniteAddAction = function (args) {\n    if (args.requestType === 'save' && args.action === 'add' || args.requestType === 'delete') {\n      if (this.parent.editSettings.newRowPosition !== 'Top' && this.selectedIndex !== -1 && args.requestType === 'save' && args.action === 'add') {\n        var rowObjects = this.parent.grid.getRowsObject();\n        var newRowObject = rowObjects.splice(0, 1)[0];\n        var newRowObjectIndex = this.addRowIndex;\n        var currentData = this.parent.getCurrentViewRecords();\n\n        if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n          newRowObjectIndex += findChildrenRecords(currentData[newRowObjectIndex + 1]).length;\n        }\n\n        newRowObjectIndex = this.parent.editSettings.newRowPosition === 'Below' ? newRowObjectIndex + 1 : newRowObjectIndex;\n        rowObjects.splice(newRowObjectIndex, 0, newRowObject);\n        var newRecord = currentData.splice(0, 1)[0];\n        currentData.splice(newRowObjectIndex, 0, newRecord);\n        this.updateInfiniteCurrentViewData(newRecord, this.addRowIndex);\n      }\n\n      var movableRows = this.parent.grid.getMovableRows();\n      var movableRowsObject = this.parent.grid.getMovableRowsObject();\n      var isCache = this.parent.infiniteScrollSettings.enableCache;\n\n      if (!isCache) {\n        resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n        this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n      }\n\n      if (!isCache && this.parent.getFrozenColumns() > 0) {\n        resetRowIndex(this.parent.grid, movableRowsObject, movableRows, 0);\n        this.updateIndex(this.parent.grid.dataSource, movableRows, this.parent.getCurrentViewRecords());\n      }\n    }\n  };\n\n  Edit.prototype.updateInfiniteCurrentViewData = function (newRecord, newRowIndex) {\n    var _this = this;\n\n    var infiniteData = 'infiniteCurrentViewData';\n    var updateCurrentViewData = 'updateCurrentViewData';\n    var size = Math.ceil(newRowIndex / this.parent.grid.pageSettings.pageSize);\n    var page = size > 0 ? size : 1;\n    var dataIndex = newRowIndex - (page - 1) * this.parent.pageSettings.pageSize;\n    var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[infiniteData];\n    infiniteCurrentViewData[1].splice(0, 1);\n    var data = infiniteCurrentViewData[page];\n\n    if (!isNullOrUndefined(this.addRowRecord)) {\n      data.filter(function (e, index) {\n        if (e.uniqueID === _this.addRowRecord.uniqueID) {\n          dataIndex = index;\n        }\n      });\n\n      if (this.addRowRecord.hasChildRecords && this.addRowRecord.childRecords.length && this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n        dataIndex += findChildrenRecords(this.addRowRecord).length;\n      }\n    }\n\n    if (dataIndex >= this.parent.pageSettings.pageSize) {\n      page += 1;\n      data = infiniteCurrentViewData[page];\n      dataIndex = dataIndex - this.parent.pageSettings.pageSize >= 0 ? dataIndex - this.parent.pageSettings.pageSize : 0;\n    }\n\n    dataIndex = this.parent.editSettings.newRowPosition === 'Below' ? dataIndex + 1 : dataIndex;\n    data.splice(dataIndex, 0, newRecord);\n    this.parent.grid.infiniteScrollModule[updateCurrentViewData]();\n  };\n\n  Edit.prototype.recordDoubleClick = function (args) {\n    var target = args.target;\n\n    if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n      return;\n    }\n\n    var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n\n    if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey && this.parent.editSettings.allowEditing && column.allowEditing && !(target.classList.contains('e-treegridexpand') || target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n      this.isOnBatch = true;\n      this.parent.grid.setProperties({\n        selectedRowIndex: args.rowIndex\n      }, true);\n\n      if (this.parent.enableVirtualization) {\n        var tr = parentsUntil(args.target, 'e-row');\n        this.prevAriaRowIndex = tr.getAttribute('aria-rowindex');\n        tr.setAttribute('aria-rowindex', tr.rowIndex + '');\n      }\n\n      this.updateGridEditMode('Batch');\n    }\n  };\n\n  Edit.prototype.updateGridEditMode = function (mode) {\n    this.parent.grid.setProperties({\n      editSettings: {\n        mode: mode\n      }\n    }, true);\n    var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n    updateMethod.apply(this.parent.grid.editModule);\n    this.parent.grid.isEdit = false;\n  };\n\n  Edit.prototype.resetIsOnBatch = function () {\n    if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n      this.isOnBatch = false;\n      this.updateGridEditMode('Normal');\n    }\n  };\n\n  Edit.prototype.keyPressed = function (args) {\n    if (this.isOnBatch) {\n      this.keyPress = args.action;\n    }\n\n    if (args.action === 'f2') {\n      this.recordDoubleClick(args);\n    }\n  };\n\n  Edit.prototype.deleteUniqueID = function (value) {\n    var idFilter = 'uniqueIDFilterCollection';\n    delete this.parent[idFilter][value];\n    var id = 'uniqueIDCollection';\n    delete this.parent[id][value];\n  };\n\n  Edit.prototype.cellEdit = function (args) {\n    var _this = this;\n\n    var promise = 'promise';\n    var prom = args[promise];\n    delete args[promise];\n\n    if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex)) {\n      args.row.setAttribute('aria-rowindex', this.prevAriaRowIndex);\n      this.prevAriaRowIndex = undefined;\n    }\n\n    if (this.keyPress !== 'enter') {\n      this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n        if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n          _this.enableToolbarItems('edit');\n        } else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n          _this.isOnBatch = false;\n\n          _this.updateGridEditMode('Normal');\n        }\n\n        if (!isNullOrUndefined(prom)) {\n          prom.resolve(celleditArgs);\n        }\n      });\n    }\n\n    if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') || this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n      args.cancel = true;\n      this.doubleClickTarget = null;\n      return;\n    }\n\n    if (this.parent.editSettings.mode === 'Cell') {\n      if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n        this.keyPress = null;\n      } else if (this.keyPress === 'enter') {\n        args.cancel = true;\n        this.keyPress = null;\n      }\n    } // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n    //   this.isAdd = false;\n    // }\n\n  };\n\n  Edit.prototype.enableToolbarItems = function (request) {\n    if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n      var toolbarID = this.parent.element.id + '_gridcontrol_';\n      this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n      this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n    }\n  };\n\n  Edit.prototype.batchCancel = function () {\n    if (this.parent.editSettings.mode === 'Cell') {\n      var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n      var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n      this.parent.renderModule.cellRender({\n        data: cellDetails.rowData,\n        cell: treeCell,\n        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n      });\n      this.updateGridEditMode('Normal');\n      this.isOnBatch = false;\n    }\n\n    if (this.parent.editSettings.mode === 'Batch') {\n      this.parent.notify('batchCancelAction', {});\n    }\n  };\n\n  Edit.prototype.customCellSave = function (args) {\n    if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n      this.updateCell(args, args.rowIndex);\n      this.afterCellSave(args, args.row, args.rowIndex);\n    }\n  };\n\n  Edit.prototype.cellSave = function (args) {\n    var _this = this;\n\n    if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n      args.cancel = true;\n      var editModule = 'editModule';\n      setValue('isEdit', false, this.parent.grid);\n      setValue('isEditCollapse', true, this.parent);\n      args.rowData[args.columnName] = args.value;\n      var row_1;\n\n      if (isNullOrUndefined(args.cell)) {\n        row_1 = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n      } else {\n        row_1 = args.cell.parentNode;\n      }\n\n      var rowIndex_1;\n      var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n\n      if (isNullOrUndefined(row_1)) {\n        this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n          if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n            rowIndex_1 = i;\n            return;\n          }\n        });\n      } else {\n        rowIndex_1 = this.parent.getRows().indexOf(row_1) === -1 && this.parent.getFrozenColumns() > 0 ? this.parent.grid.getMovableRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n      }\n\n      var arg = {};\n      extend(arg, args);\n      arg.cancel = false;\n      arg.type = 'save';\n      row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n      this.parent.trigger(events.actionBegin, arg);\n\n      if (!arg.cancel) {\n        if (row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1 && this.keyPress === 'tab') {\n          this.isTabLastRow = true;\n        }\n\n        if (!isRemoteData(this.parent) && !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n          if (isCountRequired(this.parent)) {\n            var eventPromise = 'eventPromise';\n            var editArgs = {\n              requestType: 'save',\n              data: args.rowData,\n              action: 'edit',\n              row: row_1,\n              rowIndex: rowIndex_1,\n              rowData: args.rowData,\n              columnName: args.columnName,\n              filterChoiceCount: null,\n              excelSearchOperator: null\n            };\n            this.parent.grid.getDataModule()[eventPromise](editArgs, this.parent.grid.query);\n          } else {\n            this.updateCell(args, rowIndex_1);\n            this.afterCellSave(args, row_1, rowIndex_1);\n          }\n        } else if (isRemoteData(this.parent) || this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n          var query = this.parent.grid.query;\n          var crud = null;\n          crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n          crud.then(function (e) {\n            if (!isNullOrUndefined(e)) {\n              args.rowData[args.columnName] = e[args.columnName];\n            }\n\n            _this.updateCell(args, rowIndex_1);\n\n            _this.afterCellSave(args, row_1, rowIndex_1);\n          });\n        }\n      } else {\n        this.parent.grid.isEdit = true;\n      }\n    }\n  };\n\n  Edit.prototype.afterCellSave = function (args, row, rowIndex) {\n    var mRow;\n\n    if (this.parent.grid.aggregateModule) {\n      this.parent.grid.aggregateModule.refresh(args.rowData);\n    }\n\n    this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n    this.parent.grid.editModule.formObj.destroy();\n\n    if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n      this.updateGridEditMode('Normal');\n      this.isOnBatch = false;\n    }\n\n    this.enableToolbarItems('save');\n\n    if (this.parent.getFrozenColumns() > 0) {\n      mRow = this.parent.grid.getMovableRows()[rowIndex];\n      removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n      removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n    }\n\n    removeClass([row], ['e-editedrow', 'e-batchrow']);\n    removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n\n    if (this.parent['isCellSaveFocus'] !== false) {\n      this.parent.grid.focusModule.restoreFocus();\n    }\n\n    editAction({\n      value: args.rowData,\n      action: 'edit'\n    }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n\n    if (row.rowIndex === this.parent.getCurrentViewRecords().length - 1 && this.keyPress === 'enter') {\n      this.keyPress = null;\n    }\n\n    var saveArgs = {\n      type: 'save',\n      column: this.parent.getColumnByField(args.columnName),\n      data: args.rowData,\n      previousData: args.previousValue,\n      row: row,\n      target: args.cell\n    };\n    this.parent.trigger(events.actionComplete, saveArgs);\n  };\n\n  Edit.prototype.lastCellTab = function () {\n    if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n      if (!this.parent.editSettings.allowNextRowEdit) {\n        this.updateGridEditMode('Normal');\n        this.isOnBatch = false;\n        this.keyPress = null;\n      } else {\n        this.enableToolbarItems('edit');\n      }\n    }\n  };\n\n  Edit.prototype.updateCell = function (args, rowIndex) {\n    this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n    this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n  };\n\n  Edit.prototype.crudAction = function (details, columnName) {\n    editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n    this.parent.parentData = [];\n    var data = this.parent.grid.dataSource instanceof DataManager ? this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n\n    for (var i = 0; i < data.length; i++) {\n      data[i].index = i;\n      var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n\n      if (details.value[key] === data[i][key]) {\n        if (details.action === 'add') {\n          data[i].level = this.internalProperties.level;\n          data[i].taskData = this.internalProperties.taskData;\n          data[i].uniqueID = this.internalProperties.uniqueID;\n\n          if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n            data[i].parentItem = this.internalProperties.parentItem;\n            data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n          }\n\n          data[i].childRecords = this.internalProperties.childRecords;\n        }\n      }\n\n      setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n\n      if (!data[i].level) {\n        this.parent.parentData.push(data[i]);\n      }\n    }\n\n    if (details.action === 'add' && this.previousNewRowPosition != null) {\n      this.parent.setProperties({\n        editSettings: {\n          newRowPosition: this.previousNewRowPosition\n        }\n      }, true);\n      this.previousNewRowPosition = null;\n    }\n  };\n\n  Edit.prototype.updateIndex = function (data, rows, records) {\n    for (var j = 0; j < this.parent.getDataRows().length; j++) {\n      var data1 = records[j];\n      var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n      data1.index = index;\n\n      if (!isNullOrUndefined(data1.parentItem)) {\n        var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n        data1.parentItem.index = parentIndex;\n      }\n    }\n\n    var count = -1;\n    var treeColIndex = this.parent.treeColumnIndex;\n\n    if (this.parent.getFrozenColumns() > 0) {\n      var cells = rows[0].querySelectorAll('.e-rowcell');\n\n      for (var l = 0; l < cells.length; l++) {\n        if (cells[l].classList.contains('e-gridrowindex0level0')) {\n          treeColIndex = l;\n          break;\n        }\n      }\n    }\n\n    for (var k = 0; k < this.parent.getRows().length; k++) {\n      if (!rows[k].classList.contains('e-detailrow')) {\n        count++;\n      }\n\n      var data2 = records[count];\n      var index = data2.index;\n      var level = data2.level;\n      var row = rows[k];\n\n      if (!isNullOrUndefined(data2.parentItem)) {\n        index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n      }\n\n      var treecell = row.cells[treeColIndex];\n\n      if (!isNullOrUndefined(treecell)) {\n        for (var l = 0; l < treecell.classList.length; l++) {\n          var value = treecell.classList[l];\n          var remove = /e-gridrowindex/i;\n          var removed = /e-griddetailrowindex/i;\n          var result = value.match(remove);\n          var results = value.match(removed);\n\n          if (result != null) {\n            removeClass([treecell], value);\n          }\n\n          if (results != null) {\n            removeClass([treecell], value);\n          }\n        }\n\n        if (!rows[k].classList.contains('e-detailrow')) {\n          addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n        } else {\n          addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n        }\n      }\n    }\n  };\n\n  Edit.prototype.beginAdd = function () {\n    var position;\n    var index = this.addRowIndex;\n    var records = this.parent.grid.getCurrentViewRecords();\n\n    if (this.parent.editSettings.mode === 'Batch') {\n      index = this.batchEditModule.getAddRowIndex();\n      this.selectedIndex = this.batchEditModule.getSelectedIndex();\n\n      if (this.parent.getBatchChanges()[this.addedRecords].length > 1 || this.parent.getBatchChanges()[this.deletedRecords].length) {\n        records = this.batchEditModule.getBatchRecords();\n      }\n    }\n\n    var rows = this.parent.grid.getDataRows();\n    var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n    var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n    var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n    var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n\n    if (this.parent.editSettings.mode !== 'Dialog') {\n      if (this.parent.editSettings.newRowPosition === 'Above') {\n        position = 'before';\n      } else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n        position = 'after';\n\n        if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n          if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1 || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n            index += findChildrenRecords(records[index]).length;\n\n            if (this.parent.editSettings.newRowPosition !== 'Child') {\n              var batchChildCount = this.batchEditModule.getBatchChildCount();\n              index = index + batchChildCount;\n            }\n          } else {\n            index += findChildrenRecords(records[index]).length;\n          }\n        }\n      }\n\n      if ((this.selectedIndex > -1 || isVirtualization) && withinRange && (index || this.parent.editSettings.newRowPosition === 'Child' || this.parent.editSettings.newRowPosition === 'Below')) {\n        if (index >= rows.length) {\n          index = rows.length - 2;\n        }\n\n        var r = 'rows';\n        var newRowObject = this.parent.grid.contentModule[r][0];\n        var focussedElement = document.activeElement;\n        rows[index + 1][position](rows[0]);\n        setValue('batchIndex', index + 1, this.batchEditModule);\n        var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n\n        if (this.parent.editSettings.mode === 'Batch') {\n          this.parent.grid.contentModule[r].splice(0, 1);\n          this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n        }\n\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n          var movableRows = this.parent.getMovableDataRows();\n          var frows = 'freezeRows';\n          var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n          movableRows[index + 1][position](movableRows[0]);\n\n          if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.grid.contentModule[frows].splice(0, 1);\n            this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n          }\n\n          setValue('batchIndex', index + 1, this.batchEditModule);\n        }\n\n        if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n          var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n\n          for (var i = 0; i < errors.length; i++) {\n            errors[i].remove();\n          }\n\n          setValue('errorRules', [], this.parent.grid.editModule.formObj);\n        }\n\n        if (isVirtualization) {\n          this.prevAriaRowIndex = '-1';\n        }\n\n        focussedElement.focus();\n      }\n    }\n  }; // private beforeDataBound(args: BeforeDataBoundArgs): void {\n  //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n  //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n  //     let action: string = getValue('action', args);\n  //     let data: Object = getValue('data', args);\n  //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n  //       data = extend(this.editedData, data);\n  //       this.editedData = null;\n  //     }\n  //     if (!isNullOrUndefined(this.addedData)) {\n  //       let addedData: Object = args.result[args.result.length - 1];\n  //       addedData = extend(this.addedData, addedData);\n  //       this.addedData = null;\n  //       args.result.splice(this.addedIndex, 0, addedData);\n  //       args.result.splice(args.result.length, 1);\n  //     }\n  //   }\n  // }\n\n\n  Edit.prototype.beginEdit = function (args) {\n    if (args.requestType === 'refresh' && this.isOnBatch) {\n      args.cancel = true;\n      return;\n    }\n\n    if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n      args.cancel = true;\n      return;\n    }\n\n    if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') || this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n      args.cancel = true;\n      this.doubleClickTarget = null;\n      return;\n    }\n\n    if (args.requestType === 'delete') {\n      var data = args.data;\n\n      for (var i = 0; i < data.length; i++) {\n        this.deleteUniqueID(data[i].uniqueID);\n        var childs = findChildrenRecords(data[i]);\n\n        for (var c = 0; c < childs.length; c++) {\n          this.deleteUniqueID(childs[c].uniqueID);\n        }\n\n        args.data = data.concat(childs);\n      }\n    }\n\n    if (args.requestType === 'add') {\n      this.selectedIndex = this.parent.grid.selectedRowIndex;\n\n      if (this.parent.enableVirtualization) {\n        var selector = '.e-row[aria-rowindex=\"' + this.selectedIndex + '\"]';\n        var row = void 0;\n\n        if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n          this.prevAriaRowIndex = this.selectedIndex.toString();\n          row = this.parent.getContent().querySelector(selector);\n          this.addRowIndex = row ? row.rowIndex : 0;\n        } else {\n          if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n            selector = '.e-row[aria-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n            row = this.parent.getContent().querySelector(selector);\n            this.addRowIndex = row ? row.rowIndex : 0;\n          } else {\n            this.addRowIndex = 0;\n          }\n        }\n      } else {\n        this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n      }\n\n      this.addRowRecord = this.parent.getSelectedRecords()[0];\n    }\n\n    args = this.beginAddEdit(args); // if (args.requestType === 'save' &&\n    //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n    //      if (args.action === 'edit') {\n    //           this.editedData = args.data;\n    //      } else if (args.action === 'add') {\n    //           this.addedData = value;\n    //      }\n    // }\n  };\n\n  Edit.prototype.savePreviousRowPosition = function () {\n    if (this.previousNewRowPosition === null) {\n      this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n    }\n  };\n\n  Edit.prototype.beginAddEdit = function (args) {\n    var value = args.data;\n\n    if (args.action === 'add') {\n      var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n      var position = null;\n      value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n      var currentData = this.parent.grid.getCurrentViewRecords();\n      var index = this.addRowIndex;\n      value.uniqueID = getUid(this.parent.element.id + '_data_');\n      setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n      var level = 0;\n      var idMapping = void 0;\n      var parentUniqueID = void 0;\n      var parentItem = void 0;\n      var parentIdMapping = void 0;\n      var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n      var rows = this.parent.getRows();\n      var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n      var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n      var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n\n      if (currentData.length) {\n        idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n        parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n\n        if (currentData[this.addRowIndex].parentItem) {\n          parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n        }\n\n        parentItem = currentData[this.addRowIndex].parentItem;\n      }\n\n      if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n        level = currentData[this.addRowIndex].level;\n\n        if (this.parent.editSettings.newRowPosition === 'Above') {\n          position = 'before';\n          index = currentData[this.addRowIndex].index;\n        } else if (this.parent.editSettings.newRowPosition === 'Below') {\n          position = 'after';\n          var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n          var currentDataIndex = currentData[this.addRowIndex].index;\n          index = childRecordCount > 0 ? currentDataIndex + childRecordCount : currentDataIndex;\n        } else if (this.parent.editSettings.newRowPosition === 'Child') {\n          position = 'after';\n\n          if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n            value.parentItem = extend({}, currentData[this.addRowIndex]);\n            value.parentUniqueID = value.parentItem.uniqueID;\n            delete value.parentItem.childRecords;\n            delete value.parentItem[this.parent.childMapping];\n          }\n\n          var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n          var currentDataIndex1 = currentData[this.addRowIndex].index;\n\n          if (this.selectedIndex >= 0) {\n            value.level = level + 1;\n          }\n\n          index = childRecordCount1 > 0 ? currentDataIndex1 + childRecordCount1 : currentDataIndex1;\n\n          if (this.isSelfReference) {\n            value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n\n            if (!isNullOrUndefined(value.parentItem)) {\n              updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n            }\n          }\n        }\n\n        if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n          if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n            value.parentUniqueID = parentUniqueID;\n            value.parentItem = extend({}, parentItem);\n            delete value.parentItem.childRecords;\n            delete value.parentItem[this.parent.childMapping];\n          }\n\n          value.level = level;\n\n          if (this.isSelfReference) {\n            value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n\n            if (!isNullOrUndefined(value.parentItem)) {\n              updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n            }\n          }\n        }\n\n        if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n          args.index = position === 'before' ? index : index + 1;\n        }\n\n        if (this.parent.editSettings.newRowPosition === 'Bottom') {\n          var dataSource = this.parent.grid.dataSource instanceof DataManager ? this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n          args.index = dataSource.length;\n        }\n      }\n\n      if (isNullOrUndefined(value.level)) {\n        value.level = level;\n      }\n\n      value.hasChildRecords = false;\n      value.childRecords = [];\n      value.index = 0;\n    }\n\n    if (args.action === 'add') {\n      this.internalProperties = {\n        level: value.level,\n        parentItem: value.parentItem,\n        uniqueID: value.uniqueID,\n        taskData: value.taskData,\n        parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n        childRecords: value.childRecords\n      };\n    }\n\n    if (args.requestType === 'delete') {\n      var deletedValues = args.data;\n\n      for (var i = 0; i < deletedValues.length; i++) {\n        if (deletedValues[i].parentItem) {\n          var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n\n          if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n            var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n            parentItem.childRecords.splice(childIndex, 1);\n          }\n        }\n      }\n    }\n\n    return args;\n  };\n  /**\n   * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n   *\n   * @returns {void}\n   */\n\n\n  Edit.prototype.addRecord = function (data, index, position) {\n    if (this.parent.editSettings.newRowPosition === this.previousNewRowPosition || this.previousNewRowPosition === null) {\n      this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n    }\n\n    if (!this.isSelfReference && !isNullOrUndefined(data) && Object.hasOwnProperty.call(data, this.parent.childMapping)) {\n      var addRecords = [];\n      var previousEditMode = this.parent.editSettings.mode;\n      var previousGridEditMode = this.parent.grid.editSettings.mode;\n      addRecords.push(data);\n      this.parent.setProperties({\n        editSettings: {\n          mode: 'Batch'\n        }\n      }, true);\n      this.parent.grid.setProperties({\n        editSettings: {\n          mode: 'Batch'\n        }\n      }, true);\n\n      if (!isNullOrUndefined(position)) {\n        this.parent.setProperties({\n          editSettings: {\n            newRowPosition: position\n          }\n        }, true);\n      }\n\n      var updatedRecords = {\n        addedRecords: addRecords,\n        changedRecords: [],\n        deletedRecords: []\n      };\n      this.parent.notify(events.batchSave, {\n        updatedRecords: updatedRecords,\n        index: index\n      });\n      this.parent.setProperties({\n        editSettings: {\n          mode: previousEditMode\n        }\n      }, true);\n      this.parent.grid.setProperties({\n        editSettings: {\n          mode: previousGridEditMode\n        }\n      }, true);\n      this.parent.refresh();\n    } else {\n      if (data) {\n        if (index > -1) {\n          this.selectedIndex = index;\n          this.addRowIndex = index;\n        } else {\n          this.selectedIndex = this.parent.selectedRowIndex;\n          this.addRowIndex = this.parent.selectedRowIndex;\n        }\n\n        if (position) {\n          this.parent.setProperties({\n            editSettings: {\n              newRowPosition: position\n            }\n          }, true);\n        }\n\n        this.parent.grid.editModule.addRecord(data, index);\n      } else {\n        this.parent.grid.editModule.addRecord(data, index);\n      }\n    }\n  };\n  /**\n   * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n   *\n   * @returns {boolean} Returns form validation results\n   */\n\n\n  Edit.prototype.editFormValidate = function () {\n    return this.parent.grid.editModule.editFormValidate();\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n\n\n  Edit.prototype.destroyForm = function () {\n    this.parent.grid.editModule.destroyForm();\n  };\n\n  Edit.prototype.contentready = function (e) {\n    if (!isNullOrUndefined(e.args.requestType) && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save' || this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave')) {\n      this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n\n      if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n        if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n          this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n        }\n      }\n    }\n  };\n  /**\n   * If the row index and field is given, edits the particular cell in a row.\n   *\n   * @returns {void}\n   */\n\n\n  Edit.prototype.editCell = function (rowIndex, field) {\n    if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n      if (this.parent.editSettings.mode !== 'Batch') {\n        this.isOnBatch = true;\n        this.updateGridEditMode('Batch');\n      }\n\n      this.parent.grid.editModule.editCell(rowIndex, field);\n    }\n  };\n\n  return Edit;\n}();\n\nexport { Edit };","map":{"version":3,"sources":["/Users/zhouzhou/Desktop/lightfront/node_modules/@syncfusion/ej2-treegrid/src/treegrid/actions/edit.js"],"names":["Grid","Edit","GridEdit","getUid","getObject","resetRowIndex","parentsUntil","events","isNullOrUndefined","extend","setValue","removeClass","addClass","getValue","DataManager","RemoteSaveAdaptor","findChildrenRecords","getParentData","isCountRequired","isRemoteData","editAction","updateParentRow","BatchEdit","parent","addedRecords","deletedRecords","prevAriaRowIndex","Inject","isSelfReference","parentIdMapping","previousNewRowPosition","internalProperties","batchEditModule","addEventListener","prototype","getModuleName","on","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","batchCancel","grid","keyPressed","lastCellTab","contentready","cellEdit","editActionEvents","doubleTap","gridDblClick","customCellSave","savePreviousRowPosition","beforeStartEdit","beforeBatchCancel","resetIsOnBatch","getRowPosition","e","doubleClickTarget","target","addArgs","newRowPosition","editSettings","addRowIndex","ariaRowIndex","args","trigger","actionBegin","mode","actionComplete","removeEventListener","isDestroyed","off","destroy","applyFormValidation","cols","editModule","eventArgs","eventName","treeObj","adaptor","dataSource","requestType","action","rowIndex","row","Object","keys","length","selectedIndex","keyData","getCurrentViewRecords","getPrimaryKeyFieldNames","query","addParams","paramsLength","params","i","key","splice","enableInfiniteScrolling","infiniteAddAction","notify","rowObjects","getRowsObject","newRowObject","newRowObjectIndex","currentData","newRecord","updateInfiniteCurrentViewData","movableRows","getMovableRows","movableRowsObject","getMovableRowsObject","isCache","infiniteScrollSettings","enableCache","getRows","updateIndex","getFrozenColumns","newRowIndex","_this","infiniteData","updateCurrentViewData","size","Math","ceil","pageSettings","pageSize","page","dataIndex","infiniteCurrentViewData","infiniteScrollModule","data","addRowRecord","filter","index","uniqueID","hasChildRecords","childRecords","closest","column","getColumnByIndex","getAttribute","isOnBatch","isPrimaryKey","allowEditing","classList","contains","allowEditOnDblClick","setProperties","selectedRowIndex","enableVirtualization","tr","setAttribute","updateGridEditMode","updateMethod","apply","isEdit","keyPress","deleteUniqueID","value","idFilter","id","promise","prom","undefined","celleditArgs","cancel","enableToolbarItems","resolve","request","toolbarModule","toolbarID","element","enableItems","cellDetails","treeCell","getCellFromIndex","treeColumnIndex","renderModule","cellRender","rowData","cell","getColumns","updateCell","afterCellSave","querySelector","columnName","row_1","form","parentElement","parentNode","rowIndex_1","primaryKeys_1","indexOf","arg","type","isTabLastRow","eventPromise","editArgs","filterChoiceCount","excelSearchOperator","getDataModule","crud","update","fromTable","previousValue","then","mRow","aggregateModule","refresh","destroyWidgets","getColumnByField","formObj","querySelectorAll","focusModule","restoreFocus","saveArgs","previousData","allowNextRowEdit","updateRow","details","parentData","json","level","taskData","parentItem","parentUniqueID","push","rows","records","j","getDataRows","data1","parentIndex","count","treeColIndex","cells","l","k","data2","treecell","remove","removed","result","match","results","position","getAddRowIndex","getSelectedIndex","getBatchChanges","getBatchRecords","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","expanded","batchChildCount","getBatchChildCount","r","contentModule","focussedElement","document","activeElement","rowObjectIndex","frozenRows","frozenColumns","getMovableDataRows","frows","newFreezeRowObject","errors","getContentTable","focus","childs","c","concat","selector","toString","getContent","getSelectedRecords","beginAddEdit","idMapping","childRecordCount","currentDataIndex","childMapping","childRecordCount1","currentDataIndex1","deletedValues","childIndex","addRecord","hasOwnProperty","call","addRecords","previousEditMode","previousGridEditMode","updatedRecords","changedRecords","batchSave","editFormValidate","destroyForm","editCell","field"],"mappings":"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","sourcesContent":["import { Grid, Edit as GridEdit, getUid, getObject, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Edit module name\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('recordAdded', this.customCellSave, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.ariaRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off('recordAdded', this.customCellSave);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @param {Column[]} cols - Column property Collection\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.enableInfiniteScrolling && eventName === 'actionComplete') {\n            this.infiniteAddAction(eventArgs);\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.infiniteAddAction = function (args) {\n        if ((args.requestType === 'save' && args.action === 'add') || args.requestType === 'delete') {\n            if (this.parent.editSettings.newRowPosition !== 'Top' && this.selectedIndex !== -1\n                && (args.requestType === 'save' && args.action === 'add')) {\n                var rowObjects = this.parent.grid.getRowsObject();\n                var newRowObject = rowObjects.splice(0, 1)[0];\n                var newRowObjectIndex = this.addRowIndex;\n                var currentData = this.parent.getCurrentViewRecords();\n                if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                    newRowObjectIndex += findChildrenRecords(currentData[newRowObjectIndex + 1]).length;\n                }\n                newRowObjectIndex = this.parent.editSettings.newRowPosition === 'Below' ? newRowObjectIndex + 1 : newRowObjectIndex;\n                rowObjects.splice(newRowObjectIndex, 0, newRowObject);\n                var newRecord = currentData.splice(0, 1)[0];\n                currentData.splice(newRowObjectIndex, 0, newRecord);\n                this.updateInfiniteCurrentViewData(newRecord, this.addRowIndex);\n            }\n            var movableRows = this.parent.grid.getMovableRows();\n            var movableRowsObject = this.parent.grid.getMovableRowsObject();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (!isCache) {\n                resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            }\n            if (!isCache && this.parent.getFrozenColumns() > 0) {\n                resetRowIndex(this.parent.grid, movableRowsObject, movableRows, 0);\n                this.updateIndex(this.parent.grid.dataSource, movableRows, this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    Edit.prototype.updateInfiniteCurrentViewData = function (newRecord, newRowIndex) {\n        var _this = this;\n        var infiniteData = 'infiniteCurrentViewData';\n        var updateCurrentViewData = 'updateCurrentViewData';\n        var size = Math.ceil(newRowIndex / this.parent.grid.pageSettings.pageSize);\n        var page = size > 0 ? size : 1;\n        var dataIndex = newRowIndex - ((page - 1) * this.parent.pageSettings.pageSize);\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[infiniteData];\n        infiniteCurrentViewData[1].splice(0, 1);\n        var data = infiniteCurrentViewData[page];\n        if (!isNullOrUndefined(this.addRowRecord)) {\n            data.filter(function (e, index) {\n                if (e.uniqueID === _this.addRowRecord.uniqueID) {\n                    dataIndex = index;\n                }\n            });\n            if (this.addRowRecord.hasChildRecords && this.addRowRecord.childRecords.length &&\n                this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                dataIndex += findChildrenRecords(this.addRowRecord).length;\n            }\n        }\n        if (dataIndex >= this.parent.pageSettings.pageSize) {\n            page += 1;\n            data = infiniteCurrentViewData[page];\n            dataIndex = dataIndex - this.parent.pageSettings.pageSize >= 0 ? dataIndex - this.parent.pageSettings.pageSize : 0;\n        }\n        dataIndex = this.parent.editSettings.newRowPosition === 'Below' ? dataIndex + 1 : dataIndex;\n        data.splice(dataIndex, 0, newRecord);\n        this.parent.grid.infiniteScrollModule[updateCurrentViewData]();\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            this.parent.editSettings.allowEditing && column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('aria-rowindex');\n                tr.setAttribute('aria-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex)) {\n            args.row.setAttribute('aria-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function () {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.customCellSave = function (args) {\n        if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n            this.updateCell(args, args.rowIndex);\n            this.afterCellSave(args, args.row, args.rowIndex);\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        var _this = this;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row_1;\n            if (isNullOrUndefined(args.cell)) {\n                row_1 = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row_1 = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row_1)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = (this.parent.getRows().indexOf(row_1) === -1 && (this.parent.getFrozenColumns() > 0)) ?\n                    this.parent.grid.getMovableRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                if (!isRemoteData(this.parent) &&\n                    !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    if (isCountRequired(this.parent)) {\n                        var eventPromise = 'eventPromise';\n                        var editArgs = { requestType: 'save', data: args.rowData, action: 'edit', row: row_1,\n                            rowIndex: rowIndex_1, rowData: args.rowData, columnName: args.columnName,\n                            filterChoiceCount: null, excelSearchOperator: null };\n                        this.parent.grid.getDataModule()[eventPromise](editArgs, this.parent.grid.query);\n                    }\n                    else {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                }\n                else if (isRemoteData(this.parent) ||\n                    (this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    var query = this.parent.grid.query;\n                    var crud = null;\n                    crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n                    crud.then(function (e) {\n                        if (!isNullOrUndefined(e)) {\n                            args.rowData[args.columnName] = e[args.columnName];\n                        }\n                        _this.updateCell(args, rowIndex_1);\n                        _this.afterCellSave(args, row_1, rowIndex_1);\n                    });\n                }\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.afterCellSave = function (args, row, rowIndex) {\n        var mRow;\n        if (this.parent.grid.aggregateModule) {\n            this.parent.grid.aggregateModule.refresh(args.rowData);\n        }\n        this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n        this.parent.grid.editModule.formObj.destroy();\n        if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        this.enableToolbarItems('save');\n        if (this.parent.getFrozenColumns() > 0) {\n            mRow = this.parent.grid.getMovableRows()[rowIndex];\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        removeClass([row], ['e-editedrow', 'e-batchrow']);\n        removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        if (this.parent['isCellSaveFocus'] !== false) {\n            this.parent.grid.focusModule.restoreFocus();\n        }\n        editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n        if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n            this.keyPress = null;\n        }\n        var saveArgs = {\n            type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n            previousData: args.previousValue, row: row, target: args.cell\n        };\n        this.parent.trigger(events.actionComplete, saveArgs);\n    };\n    Edit.prototype.lastCellTab = function () {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            if (!this.parent.editSettings.allowNextRowEdit) {\n                this.updateGridEditMode('Normal');\n                this.isOnBatch = false;\n                this.keyPress = null;\n            }\n            else {\n                this.enableToolbarItems('edit');\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        var treeColIndex = this.parent.treeColumnIndex;\n        if (this.parent.getFrozenColumns() > 0) {\n            var cells = rows[0].querySelectorAll('.e-rowcell');\n            for (var l = 0; l < cells.length; l++) {\n                if (cells[l].classList.contains('e-gridrowindex0level0')) {\n                    treeColIndex = l;\n                    break;\n                }\n            }\n        }\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[treeColIndex];\n            if (!isNullOrUndefined(treecell)) {\n                for (var l = 0; l < treecell.classList.length; l++) {\n                    var value = treecell.classList[l];\n                    var remove = /e-gridrowindex/i;\n                    var removed = /e-griddetailrowindex/i;\n                    var result = value.match(remove);\n                    var results = value.match(removed);\n                    if (result != null) {\n                        removeClass([treecell], value);\n                    }\n                    if (results != null) {\n                        removeClass([treecell], value);\n                    }\n                }\n                if (!rows[k].classList.contains('e-detailrow')) {\n                    addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                }\n                else {\n                    addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function () {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.parent.grid.contentModule[r].splice(0, 1);\n                    this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n                }\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][position](movableRows[0]);\n                    if (this.parent.editSettings.mode === 'Batch') {\n                        this.parent.grid.contentModule[frows].splice(0, 1);\n                        this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    }\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[aria-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[aria-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            }\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function () {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n            var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    if (this.selectedIndex >= 0) {\n                        value.level = level + 1;\n                    }\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        if (this.parent.editSettings.newRowPosition === this.previousNewRowPosition || this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n        if (!this.isSelfReference && !isNullOrUndefined(data) && Object.hasOwnProperty.call(data, this.parent.childMapping)) {\n            var addRecords = [];\n            var previousEditMode = this.parent.editSettings.mode;\n            var previousGridEditMode = this.parent.grid.editSettings.mode;\n            addRecords.push(data);\n            this.parent.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            if (!isNullOrUndefined(position)) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            var updatedRecords = { addedRecords: addRecords, changedRecords: [], deletedRecords: [] };\n            this.parent.notify(events.batchSave, { updatedRecords: updatedRecords, index: index });\n            this.parent.setProperties({ editSettings: { mode: previousEditMode } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: previousGridEditMode } }, true);\n            this.parent.refresh();\n        }\n        else {\n            if (data) {\n                if (index > -1) {\n                    this.selectedIndex = index;\n                    this.addRowIndex = index;\n                }\n                else {\n                    this.selectedIndex = this.parent.selectedRowIndex;\n                    this.addRowIndex = this.parent.selectedRowIndex;\n                }\n                if (position) {\n                    this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n                }\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n            else {\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     *\n     * @returns {boolean} Returns form validation results\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n"]},"metadata":{},"sourceType":"module"}