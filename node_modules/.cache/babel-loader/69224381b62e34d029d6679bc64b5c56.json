{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n *\n * @hidden\n */\n\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation'; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]'; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nvar INFO = '[EJ2TreeGrid.Info]';\nvar isRowDDEnabled = false;\n\nvar Logger =\n/** @class */\nfunction (_super) {\n  __extends(Logger, _super);\n\n  function Logger(parent) {\n    var _this = this;\n\n    Grid.Inject(GridLogger);\n    _this = _super.call(this, parent) || this;\n    return _this;\n  }\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @private\n   * @returns {string} - Returns Logger module name\n   */\n\n\n  Logger.prototype.getModuleName = function () {\n    return 'logger';\n  };\n\n  Logger.prototype.log = function (types, args) {\n    if (!(types instanceof Array)) {\n      types = [types];\n    }\n\n    var type = types;\n\n    for (var i = 0; i < type.length; i++) {\n      var item = detailLists[type[i]];\n      var cOp = item.check(args, this.parent);\n\n      if (cOp.success) {\n        var message = item.generateMessage(args, this.parent, cOp.options);\n        message = message.replace('EJ2Grid', 'EJ2TreeGrid').replace('* Hierarchy Grid', '').replace('* Grouping', '');\n\n        if (isRowDDEnabled && type[i] === 'primary_column_missing') {\n          message = message.replace('Editing', 'Row DragAndDrop');\n          isRowDDEnabled = false;\n        }\n\n        var index = message.indexOf('https');\n        var gridurl = message.substring(index);\n\n        if (type[i] === 'module_missing') {\n          message = message.replace(gridurl, DOC_URL + '/modules');\n        } else if (type[i] === 'primary_column_missing' || type[i] === 'selection_key_missing') {\n          message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n        } else if (type[i] === 'grid_remote_edit') {\n          message = message.replace(gridurl, DOC_URL + '/edit');\n        } else if (type[i] === 'virtual_height') {\n          message = message.replace(gridurl, DOC_URL + '/virtual');\n        } else if (type[i] === 'check_datasource_columns') {\n          message = message.replace(gridurl, DOC_URL + '/columns');\n        } else if (type[i] === 'locale_missing') {\n          message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n        }\n\n        if (type[i] === 'datasource_syntax_mismatch') {\n          if (!isNullOrUndefined(this.treeGridObj) && !isNullOrUndefined(this.treeGridObj.dataStateChange)) {\n            // eslint-disable-next-line no-console\n            console[item.logType](message);\n          }\n        } else {\n          // eslint-disable-next-line no-console\n          console[item.logType](message);\n        }\n      }\n    }\n  };\n\n  Logger.prototype.treeLog = function (types, args, treeGrid) {\n    this.treeGridObj = treeGrid;\n\n    if (!(types instanceof Array)) {\n      types = [types];\n    }\n\n    var type = types;\n\n    if (treeGrid.allowRowDragAndDrop && !treeGrid.columns.filter(function (column) {\n      return column.isPrimaryKey;\n    }).length) {\n      isRowDDEnabled = true;\n      this.log('primary_column_missing', args);\n    }\n\n    for (var i = 0; i < type.length; i++) {\n      var item = treeGridDetails[type[i]];\n      var cOp = item.check(args, treeGrid);\n\n      if (cOp.success) {\n        var message = item.generateMessage(args, treeGrid, cOp.options); // eslint-disable-next-line no-console\n\n        console[item.logType](message);\n      }\n    }\n  };\n\n  return Logger;\n}(GridLogger);\n\nexport { Logger };\nexport var treeGridDetails = {\n  // eslint-disable-next-line camelcase\n  mapping_fields_missing: {\n    type: 'mapping_fields_missing',\n    logType: 'error',\n    check: function (args, parent) {\n      var opt = {\n        success: false\n      };\n\n      if (isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping) && isNullOrUndefined(parent.parentIdMapping) || !isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping) || isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping)) {\n        opt = {\n          success: true\n        };\n      }\n\n      return opt;\n    },\n    generateMessage: function () {\n      return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields is missing. It is ' + 'required for the hierarchical relationship of records in TreeGrid:\\n' + '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' + 'Refer to the following documentation links for more details.\\n' + (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' + (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' + (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n    }\n  }\n};","map":{"version":3,"sources":["/Users/zhouzhou/Desktop/lightfront/node_modules/@syncfusion/ej2-treegrid/src/treegrid/actions/logger.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","isNullOrUndefined","Logger","GridLogger","Grid","detailLists","DOC_URL","BASE_DOC_URL","WARNING","ERROR","INFO","isRowDDEnabled","_super","parent","_this","Inject","call","getModuleName","log","types","args","type","i","length","item","cOp","check","success","message","generateMessage","options","replace","index","indexOf","gridurl","substring","treeGridObj","dataStateChange","console","logType","treeLog","treeGrid","allowRowDragAndDrop","columns","filter","column","isPrimaryKey","treeGridDetails","mapping_fields_missing","opt","idMapping","childMapping","parentIdMapping"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n *\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar INFO = '[EJ2TreeGrid.Info]';\nvar isRowDDEnabled = false;\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[i]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid').replace('* Hierarchy Grid', '').replace('* Grouping', '');\n                if (isRowDDEnabled && type[i] === 'primary_column_missing') {\n                    message = message.replace('Editing', 'Row DragAndDrop');\n                    isRowDDEnabled = false;\n                }\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[i] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[i] === 'primary_column_missing' || type[i] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[i] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[i] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[i] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[i] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                if (type[i] === 'datasource_syntax_mismatch') {\n                    if (!isNullOrUndefined(this.treeGridObj) && !isNullOrUndefined(this.treeGridObj.dataStateChange)) {\n                        // eslint-disable-next-line no-console\n                        console[item.logType](message);\n                    }\n                }\n                else {\n                    // eslint-disable-next-line no-console\n                    console[item.logType](message);\n                }\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        this.treeGridObj = treeGrid;\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop && !treeGrid.columns.filter(function (column) { return column.isPrimaryKey; }).length) {\n            isRowDDEnabled = true;\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[i]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                // eslint-disable-next-line no-console\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    // eslint-disable-next-line camelcase\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function () {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields is missing. It is ' +\n                'required for the hierarchical relationship of records in TreeGrid:\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details.\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"module"}