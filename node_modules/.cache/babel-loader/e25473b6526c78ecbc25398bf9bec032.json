{"ast":null,"code":"import { closest, addClass, select } from '@syncfusion/ej2-base';\nimport { extend, getValue } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { EditRender } from '../renderer/edit-renderer';\nimport { BooleanEditCell } from '../renderer/boolean-edit-cell';\nimport { DropDownEditCell } from '../renderer/dropdown-edit-cell';\nimport { NumericEditCell } from '../renderer/numeric-edit-cell';\nimport { DefaultEditCell } from '../renderer/default-edit-cell';\nimport { InlineEdit } from './inline-edit';\nimport { BatchEdit } from './batch-edit';\nimport { DialogEdit } from './dialog-edit';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { parentsUntil, getComplexFieldID, setComplexFieldID, getScrollBarWidth, setValidationRuels } from '../base/util';\nimport { FormValidator } from '@syncfusion/ej2-inputs';\nimport { DatePickerEditCell } from '../renderer/datepicker-edit-cell';\nimport { calculateRelativeBasedPosition } from '@syncfusion/ej2-popups';\nimport { TemplateEditCell } from '../renderer/template-edit-cell';\nimport { DataUtil } from '@syncfusion/ej2-data';\nimport { addRemoveEventListener, getColumnModelByFieldName } from '../base/util';\nimport * as literals from '../base/string-literals';\n/**\n * The `Edit` module is used to handle editing actions.\n */\n\nvar Edit =\n/** @class */\nfunction () {\n  /**\n   * Constructor for the Grid editing module\n   *\n   * @param {IGrid} parent - specifies the IGrid\n   * @param {ServiceLocator} serviceLocator - specifies the servicelocator\n   * @hidden\n   */\n  function Edit(parent, serviceLocator) {\n    this.editType = {\n      'Inline': InlineEdit,\n      'Normal': InlineEdit,\n      'Batch': BatchEdit,\n      'Dialog': DialogEdit\n    };\n    this.parent = parent;\n    this.serviceLocator = serviceLocator;\n    this.l10n = this.serviceLocator.getService('localization');\n    this.addEventListener();\n    this.updateEditObj();\n    this.createAlertDlg();\n    this.createConfirmDlg();\n  }\n\n  Edit.prototype.updateColTypeObj = function () {\n    var cols = this.parent.columnModel;\n\n    for (var i = 0; i < cols.length; i++) {\n      if (this.parent.editSettings.template || cols[i].editTemplate) {\n        var templteCell = 'templateedit';\n        cols[i].edit = extend(new Edit.editCellType[templteCell](this.parent), cols[i].edit || {});\n      } else {\n        cols[i].edit = extend(new Edit.editCellType[cols[i].editType && Edit.editCellType[cols[i].editType] ? cols[i].editType : 'defaultedit'](this.parent, this.serviceLocator), cols[i].edit || {});\n      }\n    }\n\n    this.parent.log('primary_column_missing');\n  };\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @returns {string} returns the module name\n   * @private\n   */\n\n\n  Edit.prototype.getModuleName = function () {\n    return 'edit';\n  };\n  /**\n   * @param {NotifyArgs} e - specifies the notifyargs\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Edit.prototype.onPropertyChanged = function (e) {\n    if (e.module !== this.getModuleName()) {\n      return;\n    }\n\n    var gObj = this.parent;\n\n    for (var _i = 0, _a = Object.keys(e.properties); _i < _a.length; _i++) {\n      var prop = _a[_i];\n\n      switch (prop) {\n        case 'allowAdding':\n        case 'allowDeleting':\n        case 'allowEditing':\n          if (gObj.editSettings.allowAdding || gObj.editSettings.allowEditing || gObj.editSettings.allowDeleting) {\n            this.initialEnd();\n          }\n\n          break;\n\n        case 'mode':\n          this.updateEditObj();\n          gObj.isEdit = false;\n          gObj.refresh();\n          break;\n      }\n    }\n  };\n\n  Edit.prototype.updateEditObj = function () {\n    if (this.editModule) {\n      this.editModule.destroy();\n    }\n\n    this.renderer = new EditRender(this.parent, this.serviceLocator);\n    this.editModule = new this.editType[this.parent.editSettings.mode](this.parent, this.serviceLocator, this.renderer);\n  };\n\n  Edit.prototype.initialEnd = function () {\n    this.updateColTypeObj();\n  };\n  /**\n   * Edits any bound record in the Grid by TR element.\n   *\n   * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n   * @returns {void}\n   */\n\n\n  Edit.prototype.startEdit = function (tr) {\n    var gObj = this.parent;\n\n    if (!gObj.editSettings.allowEditing || gObj.isEdit || gObj.editSettings.mode === 'Batch') {\n      return;\n    }\n\n    this.parent.element.classList.add('e-editing');\n\n    if (!gObj.getSelectedRows().length) {\n      if (!tr) {\n        this.showDialog('EditOperationAlert', this.alertDObj);\n        return;\n      }\n    } else if (!tr) {\n      tr = gObj.getSelectedRows()[0];\n    }\n\n    this.isLastRow = tr.rowIndex === this.parent.getContent().querySelector('tr:last-child').rowIndex;\n\n    if (tr.style.display === 'none') {\n      return;\n    }\n\n    this.editModule.startEdit(tr);\n    this.refreshToolbar();\n    gObj.element.querySelector('.e-gridpopup').style.display = 'none';\n    this.parent.notify('start-edit', {});\n  };\n  /**\n   * @param {Element} tr - specifies the tr element\n   * @param {object} args - specifies the object\n   * @param {Element} args.row -specfifes the row\n   * @param {string} args.requestType - specifies the request type\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Edit.prototype.checkLastRow = function (tr, args) {\n    var checkLastRow = this.isLastRow;\n\n    if (this.parent.height !== 'auto' && this.parent.editSettings.newRowPosition === 'Bottom' && args && args.requestType === 'add' && this.parent.height > this.parent.getContentTable().scrollHeight) {\n      addClass([].slice.call(tr.getElementsByClassName(literals.rowCell)), 'e-lastrowadded');\n    } else if (checkLastRow && tr && tr.classList) {\n      addClass([].slice.call(tr.getElementsByClassName(literals.rowCell)), 'e-lastrowcell');\n    }\n  };\n  /**\n   * Cancels edited state.\n   *\n   * @returns {void}\n   */\n\n\n  Edit.prototype.closeEdit = function () {\n    if (this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.showConfirmDialog && this.parent.element.getElementsByClassName('e-updatedtd').length) {\n      this.showDialog('CancelEdit', this.dialogObj);\n      return;\n    }\n\n    this.parent.element.classList.remove('e-editing');\n    this.editModule.closeEdit();\n    this.refreshToolbar();\n    this.parent.notify(events.closeEdit, {});\n  };\n\n  Edit.prototype.refreshToolbar = function () {\n    this.parent.notify(events.toolbarRefresh, {});\n  };\n  /**\n   * To adds a new row at the top with the given data. When data is not passed, it will add empty rows.\n   * > `editSettings.allowEditing` should be true.\n   *\n   * @param {Object} data - Defines the new add record data.\n   * @param {number} index - Defines the row index to be added\n   * @returns {void}\n   */\n\n\n  Edit.prototype.addRecord = function (data, index) {\n    if (!this.parent.editSettings.allowAdding) {\n      return;\n    }\n\n    var args = {\n      startEdit: true\n    };\n\n    if (!data) {\n      this.parent.notify(events.virtualScrollAddActionBegin, args);\n    }\n\n    if (args.startEdit) {\n      this.parent.element.classList.add('e-editing');\n      this.editModule.addRecord(data, index);\n      this.refreshToolbar();\n      this.parent.notify('start-add', {});\n    }\n  };\n  /**\n   * Deletes a record with the given options. If fieldname and data are not given, the Grid will delete the selected record.\n   * > `editSettings.allowDeleting` should be true.\n   *\n   * @param {string} fieldname - Defines the primary key field name of the column.\n   * @param {Object} data - Defines the JSON data record to be deleted.\n   * @returns {void}\n   */\n\n\n  Edit.prototype.deleteRecord = function (fieldname, data) {\n    var gObj = this.parent;\n\n    if (!gObj.editSettings.allowDeleting) {\n      return;\n    }\n\n    if (!data) {\n      if (!gObj.getSelectedRecords().length && isNullOrUndefined(gObj.commandDelIndex)) {\n        this.showDialog('DeleteOperationAlert', this.alertDObj);\n        return;\n      }\n    }\n\n    if (gObj.editSettings.showDeleteConfirmDialog) {\n      this.showDialog('ConfirmDelete', this.dialogObj);\n      return;\n    }\n\n    this.editModule.deleteRecord(fieldname, data);\n  };\n  /**\n   * Deletes a visible row by TR element.\n   *\n   * @param {HTMLTableRowElement} tr - Defines the table row element.\n   * @returns {void}\n   */\n\n\n  Edit.prototype.deleteRow = function (tr) {\n    this.deleteRowUid = tr.getAttribute('data-uid');\n    var rowObj = this.parent.getRowObjectFromUID(this.deleteRowUid);\n\n    if (!isNullOrUndefined(rowObj)) {\n      this.deleteRecord(null, rowObj.data);\n    }\n  };\n  /**\n   * If Grid is in editable state, you can save a record by invoking endEdit.\n   *\n   * @returns {void}\n   */\n\n\n  Edit.prototype.endEdit = function () {\n    if (this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.showConfirmDialog && (isNullOrUndefined(this.formObj) || this.formObj.validate())) {\n      this.parent.editModule.saveCell();\n      this.parent.notify(events.editNextValCell, {});\n\n      if (isNullOrUndefined(this.formObj) || this.formObj.validate()) {\n        this.showDialog('BatchSaveConfirm', this.dialogObj);\n        return;\n      }\n    }\n\n    this.endEditing();\n  };\n  /**\n   * To update the specified cell by given value without changing into edited state.\n   *\n   * @param {number} rowIndex Defines the row index.\n   * @param {string} field Defines the column field.\n   * @param {string | number | boolean | Date} value - Defines the value to be changed.\n   * @returns {void}\n   */\n\n\n  Edit.prototype.updateCell = function (rowIndex, field, value) {\n    this.editModule.updateCell(rowIndex, field, value);\n  };\n  /**\n   * To update the specified row by given values without changing into edited state.\n   *\n   * @param {number} index Defines the row index.\n   * @param {Object} data Defines the data object to be updated.\n   * @returns {void}\n   */\n\n\n  Edit.prototype.updateRow = function (index, data) {\n    this.editModule.updateRow(index, data);\n  };\n  /**\n   * Resets added, edited, and deleted records in the batch mode.\n   *\n   * @returns {void}\n   */\n\n\n  Edit.prototype.batchCancel = function () {\n    this.closeEdit();\n  };\n  /**\n   * Bulk saves added, edited, and deleted records in the batch mode.\n   *\n   * @returns {void}\n   */\n\n\n  Edit.prototype.batchSave = function () {\n    this.endEdit();\n  };\n  /**\n   * Changes a particular cell into edited state based on the row index and field name provided in the `batch` mode.\n   *\n   * @param {number} index - Defines row index to edit a particular cell.\n   * @param {string} field - Defines the field name of the column to perform batch edit.\n   * @returns {void}\n   */\n\n\n  Edit.prototype.editCell = function (index, field) {\n    this.editModule.editCell(index, field);\n  };\n  /**\n   * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n   *\n   * @returns {boolean} returns whether the form is validated\n   */\n\n\n  Edit.prototype.editFormValidate = function () {\n    var form1 = this.formObj ? this.formObj.validate() : true;\n    var form2 = this.mFormObj ? this.mFormObj.validate() : true;\n    var form3 = this.frFormObj ? this.frFormObj.validate() : true;\n    return form1 && form2 && form3;\n  };\n  /**\n   * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n   *\n   * @returns {Object} returns the Object\n   */\n\n\n  Edit.prototype.getBatchChanges = function () {\n    return this.editModule.getBatchChanges ? this.editModule.getBatchChanges() : {};\n  };\n  /**\n   * Gets the current value of the edited component.\n   *\n   * @returns {Object} returns the Object\n   */\n\n\n  Edit.prototype.getCurrentEditCellData = function () {\n    var obj = this.getCurrentEditedData(this.formObj.element, {});\n    return obj[Object.keys(obj)[0]];\n  };\n  /**\n   * Saves the cell that is currently edited. It does not save the value to the DataSource.\n   *\n   * @returns {void}\n   */\n\n\n  Edit.prototype.saveCell = function () {\n    this.editModule.saveCell();\n  };\n\n  Edit.prototype.endEditing = function () {\n    this.parent.element.classList.remove('e-editing');\n    this.editModule.endEdit();\n    this.refreshToolbar();\n  };\n\n  Edit.prototype.showDialog = function (content, obj) {\n    obj.content = '<div>' + this.l10n.getConstant(content) + '</div>';\n    obj.dataBind();\n    obj.show();\n  };\n\n  Edit.prototype.getValueFromType = function (col, value) {\n    var val = value;\n\n    switch (col.type) {\n      case 'number':\n        val = !isNaN(parseFloat(value)) ? parseFloat(value) : null;\n        break;\n\n      case 'boolean':\n        if (col.editType !== 'booleanedit') {\n          val = value === this.l10n.getConstant('True') || value === true ? true : false;\n        }\n\n        break;\n\n      case 'date':\n      case 'datetime':\n        if (col.editType !== 'datepickeredit' && col.editType !== 'datetimepickeredit' && value && value.length) {\n          val = new Date(value);\n        } else if (value === '') {\n          val = null;\n        }\n\n        break;\n    }\n\n    return val;\n  };\n\n  Edit.prototype.destroyToolTip = function () {\n    var elements = [].slice.call(this.parent.element.getElementsByClassName('e-griderror'));\n\n    for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n      var elem = elements_1[_i];\n      remove(elem);\n    }\n\n    this.parent.getContent().firstElementChild.style.position = 'relative';\n  };\n\n  Edit.prototype.createConfirmDlg = function () {\n    this.dialogObj = this.dlgWidget([{\n      click: this.dlgOk.bind(this),\n      buttonModel: {\n        content: this.l10n.getConstant('OKButton'),\n        cssClass: 'e-primary',\n        isPrimary: true\n      }\n    }, {\n      click: this.dlgCancel.bind(this),\n      buttonModel: {\n        cssClass: 'e-flat',\n        content: this.l10n.getConstant('CancelButton')\n      }\n    }], 'EditConfirm');\n  };\n\n  Edit.prototype.createAlertDlg = function () {\n    this.alertDObj = this.dlgWidget([{\n      click: this.alertClick.bind(this),\n      buttonModel: {\n        content: this.l10n.getConstant('OKButton'),\n        cssClass: 'e-flat',\n        isPrimary: true\n      }\n    }], 'EditAlert');\n  };\n\n  Edit.prototype.alertClick = function () {\n    this.alertDObj.hide();\n  };\n\n  Edit.prototype.dlgWidget = function (btnOptions, name) {\n    var div = this.parent.createElement('div', {\n      id: this.parent.element.id + name\n    });\n    this.parent.element.appendChild(div);\n    var options = {\n      showCloseIcon: false,\n      isModal: true,\n      visible: false,\n      closeOnEscape: true,\n      target: this.parent.element,\n      width: '320px',\n      animationSettings: {\n        effect: 'None'\n      }\n    };\n    options.buttons = btnOptions;\n    var obj = new Dialog(options);\n    var isStringTemplate = 'isStringTemplate';\n    obj[isStringTemplate] = true;\n    obj.appendTo(div);\n    return obj;\n  };\n\n  Edit.prototype.dlgCancel = function () {\n    this.parent.focusModule.clearIndicator();\n    this.parent.focusModule.restoreFocus();\n    this.dialogObj.hide();\n  };\n\n  Edit.prototype.dlgOk = function () {\n    switch (this.dialogObj.element.querySelector('.e-dlg-content').firstElementChild.innerText) {\n      case this.l10n.getConstant('ConfirmDelete'):\n        this.editModule.deleteRecord();\n        break;\n\n      case this.l10n.getConstant('CancelEdit'):\n        this.editModule.closeEdit();\n        break;\n\n      case this.l10n.getConstant('BatchSaveConfirm'):\n        this.endEditing();\n        break;\n\n      case this.l10n.getConstant('BatchSaveLostChanges'):\n        if (this.parent.editSettings.mode === 'Batch') {\n          this.editModule.addCancelWhilePaging();\n        }\n\n        this.executeAction();\n        break;\n    }\n\n    this.dlgCancel();\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Edit.prototype.addEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.eventDetails = [{\n      event: events.inBoundModelChanged,\n      handler: this.onPropertyChanged\n    }, {\n      event: events.initialEnd,\n      handler: this.initialEnd\n    }, {\n      event: events.keyPressed,\n      handler: this.keyPressHandler\n    }, {\n      event: events.autoCol,\n      handler: this.updateColTypeObj\n    }, {\n      event: events.tooltipDestroy,\n      handler: this.destroyToolTip\n    }, {\n      event: events.preventBatch,\n      handler: this.preventBatch\n    }, {\n      event: events.destroyForm,\n      handler: this.destroyForm\n    }];\n    addRemoveEventListener(this.parent, this.eventDetails, true, this);\n    this.actionBeginFunction = this.onActionBegin.bind(this);\n    this.actionCompleteFunction = this.actionComplete.bind(this);\n    this.parent.addEventListener(events.actionBegin, this.actionBeginFunction);\n    this.parent.addEventListener(events.actionComplete, this.actionCompleteFunction);\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Edit.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    addRemoveEventListener(this.parent, this.eventDetails, false);\n    this.parent.removeEventListener(events.actionComplete, this.actionCompleteFunction);\n    this.parent.removeEventListener(events.actionBegin, this.actionBeginFunction);\n  };\n\n  Edit.prototype.actionComplete = function (e) {\n    var actions = ['add', 'beginEdit', 'save', 'delete', 'cancel'];\n\n    if (actions.indexOf(e.requestType) < 0) {\n      this.parent.isEdit = false;\n    }\n\n    if (e.requestType === 'batchsave') {\n      this.parent.focusModule.restoreFocus();\n    }\n\n    this.refreshToolbar();\n  };\n  /**\n   * @param {Element} form - specifies the element\n   * @param {Object} editedData - specifies the edited data\n   * @returns {Object} returns the object\n   * @hidden\n   */\n\n\n  Edit.prototype.getCurrentEditedData = function (form, editedData) {\n    var gObj = this.parent;\n\n    if (gObj.editSettings.template) {\n      var elements = [].slice.call(form.elements);\n\n      for (var k = 0; k < elements.length; k++) {\n        if ((elements[k].hasAttribute('name') && elements[k].className !== 'e-multi-hidden' || elements[k].classList.contains('e-multiselect')) && !(elements[k].type === 'hidden' && (parentsUntil(elements[k], 'e-switch-wrapper') || parentsUntil(elements[k], 'e-checkbox-wrapper')))) {\n          var field = elements[k].hasAttribute('name') ? setComplexFieldID(elements[k].getAttribute('name')) : setComplexFieldID(elements[k].getAttribute('id'));\n          var column = gObj.getColumnByField(field) || {\n            field: field,\n            type: elements[k].getAttribute('type')\n          };\n          var value = void 0;\n\n          if (column.type === 'checkbox' || column.type === 'boolean') {\n            value = elements[k].checked;\n          } else if (elements[k].value) {\n            value = elements[k].value;\n\n            if (elements[k].ej2_instances && elements[k].ej2_instances.length && !isNullOrUndefined(elements[k].ej2_instances[0].value)) {\n              elements[k].blur();\n              value = elements[k].ej2_instances[0].value;\n\n              if ((column.type === 'date' || column.type === 'dateTime' || column.type === 'datetime') && elements[k].ej2_instances[0].isServerRendered) {\n                value = elements[k].value;\n              }\n            }\n          } else if (elements[k].ej2_instances) {\n            value = elements[k].ej2_instances[0].value;\n          }\n\n          if (column.edit && typeof column.edit.read === 'string') {\n            value = getValue(column.edit.read, window)(elements[k], value);\n          } else if (column.edit && column.edit.read) {\n            value = column.edit.read(elements[k], value);\n          }\n\n          value = gObj.editModule.getValueFromType(column, value);\n\n          if (elements[k].type === 'radio') {\n            if (elements[k].checked) {\n              DataUtil.setValue(column.field, value, editedData);\n            }\n          } else {\n            DataUtil.setValue(column.field, value, editedData);\n          }\n        }\n      }\n\n      return editedData;\n    }\n\n    var col = gObj.columnModel.filter(function (col) {\n      return col.editTemplate;\n    });\n\n    for (var j = 0; j < col.length; j++) {\n      if (form[getComplexFieldID(col[j].field)]) {\n        var inputElements = [].slice.call(form[getComplexFieldID(col[j].field)]);\n        inputElements = inputElements.length ? inputElements : [form[getComplexFieldID(col[j].field)]];\n        var temp = inputElements.filter(function (e) {\n          return !isNullOrUndefined(e.ej2_instances);\n        });\n\n        if (temp.length === 0) {\n          temp = inputElements.filter(function (e) {\n            return e.hasAttribute('name');\n          });\n        }\n\n        for (var k = 0; k < temp.length; k++) {\n          var value = this.getValue(col[j], temp[k], editedData);\n          DataUtil.setValue(col[j].field, value, editedData);\n        }\n      }\n    }\n\n    var inputs = [].slice.call(form.getElementsByClassName('e-field'));\n\n    for (var i = 0, len = inputs.length; i < len; i++) {\n      var col_1 = gObj.getColumnByUid(inputs[i].getAttribute('e-mappinguid'));\n\n      if (col_1 && col_1.field) {\n        var value = this.getValue(col_1, inputs[i], editedData);\n        DataUtil.setValue(col_1.field, value, editedData);\n      }\n    }\n\n    return editedData;\n  };\n\n  Edit.prototype.getValue = function (col, input, editedData) {\n    var value = input.ej2_instances ? input.ej2_instances[0].value : input.value;\n    var gObj = this.parent;\n    var temp = col.edit.read;\n\n    if (col.type === 'checkbox' || col.type === 'boolean') {\n      value = input.checked;\n    }\n\n    if (typeof temp === 'string') {\n      temp = getValue(temp, window);\n      value = gObj.editModule.getValueFromType(col, temp(input, value));\n    } else {\n      value = gObj.editModule.getValueFromType(col, col.edit.read(input, value));\n    }\n\n    if (isNullOrUndefined(editedData[col.field]) && value === '') {\n      value = editedData[col.field];\n    }\n\n    return value;\n  };\n  /**\n   * @param {NotifyArgs} e - specifies the NotifyArgs\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Edit.prototype.onActionBegin = function (e) {\n    if (e.requestType === 'columnstate' && this.parent.isEdit && this.parent.editSettings.mode !== 'Batch') {\n      this.closeEdit();\n    } else {\n      var editRow = this.parent.element.querySelector('.' + literals.editedRow);\n      var addRow = this.parent.element.querySelector('.' + literals.addedRow);\n\n      if (editRow && this.parent.frozenRows && e.requestType === 'virtualscroll' && parseInt(parentsUntil(editRow, literals.row).getAttribute(literals.ariaRowIndex), 10) < this.parent.frozenRows) {\n        return;\n      }\n\n      var restrictedRequestTypes = ['filterafteropen', 'filterbeforeopen', 'filterchoicerequest', 'save', 'infiniteScroll', 'virtualscroll'];\n      var isRestrict = restrictedRequestTypes.indexOf(e.requestType) === -1;\n      var isDestroyVirtualForm = this.parent.enableVirtualization && this.formObj && !this.formObj.isDestroyed && (editRow || addRow || e.requestType === 'cancel') && isRestrict;\n\n      if (!this.parent.enableVirtualization && this.parent.editSettings.mode !== 'Batch' && this.formObj && !this.formObj.isDestroyed && isRestrict && !e.cancel || isDestroyVirtualForm) {\n        this.destroyWidgets();\n        this.destroyForm();\n      }\n    }\n  };\n  /**\n   * @param {Column[]} cols - specfies the column\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Edit.prototype.destroyWidgets = function (cols) {\n    var gObj = this.parent;\n\n    if (gObj.editSettings.template) {\n      this.parent.destroyTemplate(['editSettingsTemplate']);\n\n      if (this.parent.isReact) {\n        this.parent.renderTemplates();\n      }\n    }\n\n    cols = cols ? cols : this.parent.getCurrentVisibleColumns(this.parent.enableColumnVirtualization);\n\n    if (cols.some(function (column) {\n      return !isNullOrUndefined(column.editTemplate);\n    })) {\n      this.parent.destroyTemplate(['editTemplate']);\n\n      if (this.parent.isReact) {\n        this.parent.renderTemplates();\n      }\n    }\n\n    for (var _i = 0, cols_1 = cols; _i < cols_1.length; _i++) {\n      var col = cols_1[_i];\n      var temp = col.edit.destroy;\n\n      if (col.edit.destroy) {\n        if (typeof temp === 'string') {\n          temp = getValue(temp, window);\n          temp();\n        } else {\n          col.edit.destroy();\n        }\n      }\n    }\n\n    var elements = [].slice.call(this.formObj.element.elements);\n\n    for (var i = 0; i < elements.length; i++) {\n      if (elements[i].hasAttribute('name')) {\n        if (elements[i].ej2_instances && elements[i].ej2_instances.length && !elements[i].ej2_instances[0].isDestroyed) {\n          elements[i].ej2_instances[0].destroy();\n        }\n      }\n    }\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Edit.prototype.destroyForm = function () {\n    this.destroyToolTip();\n    var formObjects = [this.formObj, this.mFormObj, this.frFormObj, this.virtualFormObj];\n\n    for (var i = 0; i < formObjects.length; i++) {\n      if (formObjects[i] && formObjects[i].element && !formObjects[i].isDestroyed) {\n        formObjects[i].destroy();\n      }\n    }\n\n    this.destroyToolTip();\n  };\n  /**\n   * To destroy the editing.\n   *\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Edit.prototype.destroy = function () {\n    var gridElement = this.parent.element;\n\n    if (!gridElement) {\n      return;\n    }\n\n    var hasGridChild = gridElement.querySelector('.' + literals.gridHeader) && gridElement.querySelector('.' + literals.gridContent) ? true : false;\n\n    if (hasGridChild) {\n      this.destroyForm();\n    }\n\n    this.removeEventListener();\n    var elem = this.dialogObj.element;\n\n    if (elem.childElementCount > 0) {\n      this.dialogObj.destroy();\n      remove(elem);\n    }\n\n    elem = this.alertDObj.element;\n\n    if (elem.childElementCount > 0) {\n      this.alertDObj.destroy();\n      remove(elem);\n    }\n\n    if (!hasGridChild) {\n      return;\n    }\n\n    if (this.editModule) {\n      this.editModule.destroy();\n    }\n  };\n\n  Edit.prototype.keyPressHandler = function (e) {\n    switch (e.action) {\n      case 'insert':\n        this.addRecord();\n        break;\n\n      case 'delete':\n        if ((e.target.tagName !== 'INPUT' || e.target.classList.contains('e-checkselect')) && !document.querySelector('.e-popup-open')) {\n          this.deleteRecord();\n        }\n\n        break;\n\n      case 'f2':\n        this.startEdit();\n        break;\n\n      case 'enter':\n        if (!parentsUntil(e.target, 'e-unboundcelldiv') && this.parent.editSettings.mode !== 'Batch' && (parentsUntil(e.target, literals.gridContent) || this.parent.frozenRows && parentsUntil(e.target, literals.headerContent)) && !document.getElementsByClassName('e-popup-open').length) {\n          e.preventDefault();\n          this.endEdit();\n        }\n\n        break;\n\n      case 'escape':\n        if (this.parent.isEdit) {\n          if (this.parent.editSettings.mode === 'Batch') {\n            this.editModule.escapeCellEdit();\n          } else {\n            this.closeEdit();\n          }\n        }\n\n        break;\n    }\n  };\n\n  Edit.prototype.preventBatch = function (args) {\n    this.preventObj = args;\n    this.showDialog('BatchSaveLostChanges', this.dialogObj);\n  };\n\n  Edit.prototype.executeAction = function () {\n    this.preventObj.handler.call(this.preventObj.instance, this.preventObj.arg1, this.preventObj.arg2, this.preventObj.arg3, this.preventObj.arg4, this.preventObj.arg5, this.preventObj.arg6, this.preventObj.arg7, this.preventObj.arg8);\n  };\n  /**\n   * @param {Column[]} cols - specifies the column\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Edit.prototype.applyFormValidation = function (cols) {\n    var gObj = this.parent;\n    var frzCols = gObj.isFrozenGrid();\n    var isInline = this.parent.editSettings.mode === 'Normal';\n    var idx = this.parent.getFrozenMode() === 'Right' && isInline ? 1 : 0;\n    var form = this.parent.editSettings.mode !== 'Dialog' ? gObj.element.getElementsByClassName('e-gridform')[idx] : select('#' + gObj.element.id + '_dialogEdit_wrapper .e-gridform', document);\n    var index = this.parent.getFrozenMode() === 'Right' && isInline ? 0 : 1;\n    var mForm = gObj.element.getElementsByClassName('e-gridform')[index];\n    var rules = {};\n    var mRules = {};\n    var frRules = {};\n    cols = cols ? cols : gObj.getColumns();\n\n    for (var i = 0; i < cols.length; i++) {\n      if (!cols[i].visible) {\n        continue;\n      }\n\n      if (cols[i].validationRules) {\n        setValidationRuels(cols[i], index, rules, mRules, frRules, cols.length);\n      }\n    }\n\n    if (frzCols && this.parent.editSettings.mode !== 'Dialog') {\n      this.parent.editModule.mFormObj = this.createFormObj(mForm, mRules);\n\n      if (this.parent.getFrozenMode() === literals.leftRight) {\n        var frForm = gObj.element.getElementsByClassName('e-gridform')[2];\n        this.parent.editModule.frFormObj = this.createFormObj(frForm, frRules);\n      }\n    } else {\n      rules = extend(rules, mRules, frRules);\n    }\n\n    this.parent.editModule.formObj = this.createFormObj(form, rules);\n  };\n  /**\n   * @param {HTMLFormElement} form - Defined Form element\n   * @param {Object} rules - Defines form rules\n   * @returns {FormValidator} Returns formvalidator instance\n   * @hidden\n   */\n\n\n  Edit.prototype.createFormObj = function (form, rules) {\n    var _this = this;\n\n    return new FormValidator(form, {\n      rules: rules,\n      locale: this.parent.locale,\n      validationComplete: function (args) {\n        _this.validationComplete(args);\n      },\n      customPlacement: function (inputElement, error) {\n        var uid = inputElement.getAttribute('e-mappinguid');\n        var args = {\n          column: _this.parent.getColumnByUid(uid),\n          error: error,\n          inputElement: inputElement,\n          value: inputElement.value\n        };\n\n        _this.valErrorPlacement(inputElement, error);\n\n        _this.parent.notify(events.valCustomPlacement, args);\n      }\n    });\n  };\n\n  Edit.prototype.valErrorPlacement = function (inputElement, error) {\n    if (this.parent.isEdit) {\n      var id = error.getAttribute('for');\n      var elem = this.getElemTable(inputElement).querySelector('#' + id + '_Error');\n\n      if (!elem) {\n        this.createTooltip(inputElement, error, id, '');\n      } else {\n        elem.querySelector('.e-tip-content').innerHTML = error.outerHTML;\n      }\n    }\n  };\n\n  Edit.prototype.getElemTable = function (inputElement) {\n    var isFHdr;\n    var gObj = this.parent;\n    var table;\n\n    if (gObj.editSettings.mode !== 'Dialog') {\n      isFHdr = gObj.frozenRows && gObj.frozenRows > (parseInt(closest(inputElement, '.' + literals.row).getAttribute(literals.ariaRowIndex), 10) || 0);\n      var field = inputElement.name;\n      var col = void 0;\n\n      if (field) {\n        col = getColumnModelByFieldName(this.parent, setComplexFieldID(field));\n      }\n\n      if (col && gObj.isFrozenGrid()) {\n        if (col.getFreezeTableName() === 'frozen-left') {\n          table = isFHdr ? gObj.getFrozenVirtualHeader().querySelector('table') : gObj.getFrozenVirtualContent().querySelector('table');\n        } else if (col.getFreezeTableName() === 'frozen-right') {\n          table = isFHdr ? gObj.getFrozenRightHeader().querySelector('table') : gObj.getFrozenRightContent().querySelector('table');\n        } else if (col.getFreezeTableName() === 'movable') {\n          table = isFHdr ? gObj.getMovableVirtualHeader().querySelector('table') : gObj.getMovableVirtualContent().querySelector('table');\n        }\n      } else {\n        table = isFHdr ? gObj.getHeaderTable() : gObj.getContentTable();\n      }\n    } else {\n      table = select('#' + gObj.element.id + '_dialogEdit_wrapper', document);\n    }\n\n    return table;\n  };\n\n  Edit.prototype.resetElemPosition = function (elem, args) {\n    var td = parentsUntil(args.element, literals.rowCell);\n\n    if (td) {\n      var tdRight = td.getBoundingClientRect().right;\n      var elemRight = elem.getBoundingClientRect().right;\n\n      if (elemRight > tdRight) {\n        var offSet = elemRight - tdRight;\n        elem.style.left = elem.offsetLeft - offSet + 'px';\n      }\n    }\n  };\n\n  Edit.prototype.validationComplete = function (args) {\n    if (this.parent.isEdit) {\n      var elem = this.getElemTable(args.element).querySelector('#' + args.inputName + '_Error');\n\n      if (elem) {\n        if (args.status === 'failure') {\n          elem.style.display = '';\n          this.resetElemPosition(elem, args);\n        } else {\n          elem.style.display = 'none';\n        }\n      }\n    }\n  };\n\n  Edit.prototype.createTooltip = function (element, error, name, display) {\n    var column = this.parent.getColumnByField(name);\n    var formObj = this.parent.getFrozenMode() === literals.leftRight && this.parent.editSettings.mode === 'Normal' && column.getFreezeTableName() === literals.frozenRight ? this.frFormObj.element : this.formObj.element;\n    var customForm = parentsUntil(element, 'e-virtual-validation');\n\n    if (customForm) {\n      formObj = this.virtualFormObj.element;\n    }\n\n    var gcontent = this.parent.getContent().firstElementChild;\n    var frzCols = this.parent.getFrozenColumns() || this.parent.getFrozenLeftColumnsCount() || this.parent.getFrozenRightColumnsCount();\n\n    if (frzCols) {\n      gcontent = this.parent.getMovableVirtualContent();\n    }\n\n    var isScroll = gcontent.scrollHeight > gcontent.clientHeight || gcontent.scrollWidth > gcontent.clientWidth;\n    var isInline = this.parent.editSettings.mode !== 'Dialog';\n    var td = closest(element, '.' + literals.rowCell);\n    var row = closest(element, '.' + literals.row);\n    var fCont = this.parent.getContent().querySelector('.' + literals.frozenContent);\n    var isFHdr;\n    var isFHdrLastRow = false;\n    var validationForBottomRowPos;\n    var isBatchModeLastRow = false;\n    var viewPortRowCount = Math.round(this.parent.getContent().clientHeight / this.parent.getRowHeight()) - 1;\n    var rows = !fCont ? [].slice.call(this.parent.getContent().getElementsByClassName(literals.row)) : [].slice.call(this.parent.getFrozenVirtualContent().getElementsByClassName(literals.row));\n\n    if (this.parent.editSettings.mode === 'Batch') {\n      if (viewPortRowCount > 1 && rows.length >= viewPortRowCount && rows[rows.length - 1].getAttribute(literals.ariaRowIndex) === row.getAttribute(literals.ariaRowIndex)) {\n        isBatchModeLastRow = true;\n      }\n    }\n\n    if (isInline) {\n      if (this.parent.frozenRows) {\n        var fHeraderRows = frzCols ? this.parent.getFrozenVirtualHeader().querySelector(literals.tbody).children : this.parent.getHeaderTable().querySelector(literals.tbody).children;\n        isFHdr = fHeraderRows.length > (parseInt(row.getAttribute(literals.ariaRowIndex), 10) || 0);\n        isFHdrLastRow = isFHdr && parseInt(row.getAttribute(literals.ariaRowIndex), 10) === fHeraderRows.length - 1;\n      }\n\n      if (isFHdrLastRow || viewPortRowCount > 1 && rows.length >= viewPortRowCount && (this.parent.editSettings.newRowPosition === 'Bottom' && this.editModule.args && this.editModule.args.requestType === 'add' || td.classList.contains('e-lastrowcell') && !row.classList.contains(literals.addedRow)) || isBatchModeLastRow) {\n        validationForBottomRowPos = true;\n      }\n    }\n\n    var table = isInline ? isFHdr ? this.parent.getHeaderTable() : this.parent.getContentTable() : select('#' + this.parent.element.id + '_dialogEdit_wrapper .e-dlg-content', document);\n    var client = table.getBoundingClientRect();\n    var left = isInline ? this.parent.element.getBoundingClientRect().left : client.left;\n    var input = closest(element, 'td');\n    var inputClient = input ? input.getBoundingClientRect() : element.parentElement.getBoundingClientRect();\n    var div = this.parent.createElement('div', {\n      className: 'e-tooltip-wrap e-lib e-control e-popup e-griderror',\n      id: name + '_Error',\n      styles: 'display:' + display + ';top:' + ((isFHdr ? inputClient.top + inputClient.height : inputClient.bottom - client.top - (frzCols ? fCont.scrollTop : 0)) + table.scrollTop + 9) + 'px;left:' + (inputClient.left - left + table.scrollLeft + inputClient.width / 2) + 'px;' + 'max-width:' + inputClient.width + 'px;text-align:center;'\n    });\n\n    if (isInline && client.left < left) {\n      div.style.left = parseInt(div.style.left, 10) - client.left + left + 'px';\n    }\n\n    var content = this.parent.createElement('div', {\n      className: 'e-tip-content'\n    });\n    content.appendChild(error);\n    var arrow;\n\n    if (validationForBottomRowPos) {\n      arrow = this.parent.createElement('div', {\n        className: 'e-arrow-tip e-tip-bottom'\n      });\n      arrow.appendChild(this.parent.createElement('div', {\n        className: 'e-arrow-tip-outer e-tip-bottom'\n      }));\n      arrow.appendChild(this.parent.createElement('div', {\n        className: 'e-arrow-tip-inner e-tip-bottom'\n      }));\n    } else {\n      arrow = this.parent.createElement('div', {\n        className: 'e-arrow-tip e-tip-top'\n      });\n      arrow.appendChild(this.parent.createElement('div', {\n        className: 'e-arrow-tip-outer e-tip-top'\n      }));\n      arrow.appendChild(this.parent.createElement('div', {\n        className: 'e-arrow-tip-inner e-tip-top'\n      }));\n    }\n\n    div.appendChild(content);\n    div.appendChild(arrow);\n\n    if (!customForm && (frzCols || this.parent.frozenRows) && this.parent.editSettings.mode !== 'Dialog') {\n      var getEditCell = this.parent.editSettings.mode === 'Normal' ? closest(element, '.e-editcell') : closest(element, '.' + literals.table);\n      getEditCell.style.position = 'relative';\n      div.style.position = 'absolute';\n\n      if (this.parent.editSettings.mode === 'Batch' || closest(element, '.' + literals.frozenContent) || closest(element, '.' + literals.frozenHeader) || this.parent.frozenRows && !frzCols) {\n        formObj.appendChild(div);\n      } else {\n        this.mFormObj.element.appendChild(div);\n      }\n    } else {\n      if (customForm) {\n        this.virtualFormObj.element.appendChild(div);\n      } else {\n        this.formObj.element.appendChild(div);\n      }\n    }\n\n    if (!validationForBottomRowPos && isInline && gcontent.getBoundingClientRect().bottom < inputClient.bottom + inputClient.height) {\n      gcontent.scrollTop = gcontent.scrollTop + div.offsetHeight + arrow.scrollHeight;\n    }\n\n    var lineHeight = parseInt(document.defaultView.getComputedStyle(div, null).getPropertyValue('font-size'), 10);\n\n    if (div.getBoundingClientRect().width < inputClient.width && div.querySelector('label').getBoundingClientRect().height / (lineHeight * 1.2) >= 2) {\n      div.style.width = div.style.maxWidth;\n    }\n\n    if ((frzCols || this.parent.frozenRows) && this.parent.editSettings.mode !== 'Dialog') {\n      div.style.left = input.offsetLeft + (input.offsetWidth / 2 - div.offsetWidth / 2) + 'px';\n    } else {\n      div.style.left = parseInt(div.style.left, 10) - div.offsetWidth / 2 + 'px';\n    }\n\n    if (isInline && !isScroll && !this.parent.allowPaging || frzCols || this.parent.frozenRows) {\n      gcontent.style.position = 'static';\n      var pos = calculateRelativeBasedPosition(input, div);\n      div.style.top = pos.top + inputClient.height + 9 + 'px';\n    }\n\n    if (validationForBottomRowPos) {\n      if (isScroll && !frzCols && this.parent.height !== 'auto' && !this.parent.frozenRows && !this.parent.enableVirtualization) {\n        var scrollWidth = gcontent.scrollWidth > gcontent.offsetWidth ? getScrollBarWidth() : 0;\n        div.style.bottom = this.parent.height - gcontent.querySelector('table').offsetHeight - scrollWidth + inputClient.height + 9 + 'px';\n      } else {\n        div.style.bottom = inputClient.height + 9 + 'px';\n      }\n\n      if (rows.length < viewPortRowCount && this.parent.editSettings.newRowPosition === 'Bottom' && this.editModule.args && this.editModule.args.requestType === 'add') {\n        var rowsCount = this.parent.frozenRows ? this.parent.frozenRows + (rows.length - 1) : rows.length - 1;\n        var rowsHeight = rowsCount * this.parent.getRowHeight();\n        var position = this.parent.getContent().clientHeight - rowsHeight;\n        div.style.bottom = position + 9 + 'px';\n      }\n\n      div.style.top = null;\n    }\n  };\n  /**\n   * @param {Column} col - specfies the column\n   * @returns {boolean} returns the whether column is grouped\n   * @hidden\n   */\n\n\n  Edit.prototype.checkColumnIsGrouped = function (col) {\n    return !col.visible && !(this.parent.groupSettings.columns.indexOf(col.field) > -1);\n  };\n  /**\n   * @param {object} editors -specfies the editors\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Edit.AddEditors = function (editors) {\n    Edit.editCellType = extend(Edit.editCellType, editors);\n  };\n\n  Edit.editCellType = {\n    'dropdownedit': DropDownEditCell,\n    'numericedit': NumericEditCell,\n    'datepickeredit': DatePickerEditCell,\n    'datetimepickeredit': DatePickerEditCell,\n    'booleanedit': BooleanEditCell,\n    'defaultedit': DefaultEditCell,\n    'templateedit': TemplateEditCell\n  };\n  return Edit;\n}();\n\nexport { Edit };","map":{"version":3,"sources":["/Users/zhouzhou/Desktop/lightfront/node_modules/@syncfusion/ej2-grids/src/grid/actions/edit.js"],"names":["closest","addClass","select","extend","getValue","remove","isNullOrUndefined","events","EditRender","BooleanEditCell","DropDownEditCell","NumericEditCell","DefaultEditCell","InlineEdit","BatchEdit","DialogEdit","Dialog","parentsUntil","getComplexFieldID","setComplexFieldID","getScrollBarWidth","setValidationRuels","FormValidator","DatePickerEditCell","calculateRelativeBasedPosition","TemplateEditCell","DataUtil","addRemoveEventListener","getColumnModelByFieldName","literals","Edit","parent","serviceLocator","editType","l10n","getService","addEventListener","updateEditObj","createAlertDlg","createConfirmDlg","prototype","updateColTypeObj","cols","columnModel","i","length","editSettings","template","editTemplate","templteCell","edit","editCellType","log","getModuleName","onPropertyChanged","e","module","gObj","_i","_a","Object","keys","properties","prop","allowAdding","allowEditing","allowDeleting","initialEnd","isEdit","refresh","editModule","destroy","renderer","mode","startEdit","tr","element","classList","add","getSelectedRows","showDialog","alertDObj","isLastRow","rowIndex","getContent","querySelector","style","display","refreshToolbar","notify","checkLastRow","args","height","newRowPosition","requestType","getContentTable","scrollHeight","slice","call","getElementsByClassName","rowCell","closeEdit","showConfirmDialog","dialogObj","toolbarRefresh","addRecord","data","index","virtualScrollAddActionBegin","deleteRecord","fieldname","getSelectedRecords","commandDelIndex","showDeleteConfirmDialog","deleteRow","deleteRowUid","getAttribute","rowObj","getRowObjectFromUID","endEdit","formObj","validate","saveCell","editNextValCell","endEditing","updateCell","field","value","updateRow","batchCancel","batchSave","editCell","editFormValidate","form1","form2","mFormObj","form3","frFormObj","getBatchChanges","getCurrentEditCellData","obj","getCurrentEditedData","content","getConstant","dataBind","show","getValueFromType","col","val","type","isNaN","parseFloat","Date","destroyToolTip","elements","elements_1","elem","firstElementChild","position","dlgWidget","click","dlgOk","bind","buttonModel","cssClass","isPrimary","dlgCancel","alertClick","hide","btnOptions","name","div","createElement","id","appendChild","options","showCloseIcon","isModal","visible","closeOnEscape","target","width","animationSettings","effect","buttons","isStringTemplate","appendTo","focusModule","clearIndicator","restoreFocus","innerText","addCancelWhilePaging","executeAction","isDestroyed","eventDetails","event","inBoundModelChanged","handler","keyPressed","keyPressHandler","autoCol","tooltipDestroy","preventBatch","destroyForm","actionBeginFunction","onActionBegin","actionCompleteFunction","actionComplete","actionBegin","removeEventListener","actions","indexOf","form","editedData","k","hasAttribute","className","contains","column","getColumnByField","checked","ej2_instances","blur","isServerRendered","read","window","setValue","filter","j","inputElements","temp","inputs","len","col_1","getColumnByUid","input","editRow","editedRow","addRow","addedRow","frozenRows","parseInt","row","ariaRowIndex","restrictedRequestTypes","isRestrict","isDestroyVirtualForm","enableVirtualization","cancel","destroyWidgets","destroyTemplate","isReact","renderTemplates","getCurrentVisibleColumns","enableColumnVirtualization","some","cols_1","formObjects","virtualFormObj","gridElement","hasGridChild","gridHeader","gridContent","childElementCount","action","tagName","document","headerContent","preventDefault","escapeCellEdit","preventObj","instance","arg1","arg2","arg3","arg4","arg5","arg6","arg7","arg8","applyFormValidation","frzCols","isFrozenGrid","isInline","idx","getFrozenMode","mForm","rules","mRules","frRules","getColumns","validationRules","createFormObj","leftRight","frForm","_this","locale","validationComplete","customPlacement","inputElement","error","uid","valErrorPlacement","valCustomPlacement","getElemTable","createTooltip","innerHTML","outerHTML","isFHdr","table","getFreezeTableName","getFrozenVirtualHeader","getFrozenVirtualContent","getFrozenRightHeader","getFrozenRightContent","getMovableVirtualHeader","getMovableVirtualContent","getHeaderTable","resetElemPosition","td","tdRight","getBoundingClientRect","right","elemRight","offSet","left","offsetLeft","inputName","status","frozenRight","customForm","gcontent","getFrozenColumns","getFrozenLeftColumnsCount","getFrozenRightColumnsCount","isScroll","clientHeight","scrollWidth","clientWidth","fCont","frozenContent","isFHdrLastRow","validationForBottomRowPos","isBatchModeLastRow","viewPortRowCount","Math","round","getRowHeight","rows","fHeraderRows","tbody","children","client","inputClient","parentElement","styles","top","bottom","scrollTop","scrollLeft","arrow","getEditCell","frozenHeader","offsetHeight","lineHeight","defaultView","getComputedStyle","getPropertyValue","maxWidth","offsetWidth","allowPaging","pos","rowsCount","rowsHeight","checkColumnIsGrouped","groupSettings","columns","AddEditors","editors"],"mappings":"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","sourcesContent":["import { closest, addClass, select } from '@syncfusion/ej2-base';\nimport { extend, getValue } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { EditRender } from '../renderer/edit-renderer';\nimport { BooleanEditCell } from '../renderer/boolean-edit-cell';\nimport { DropDownEditCell } from '../renderer/dropdown-edit-cell';\nimport { NumericEditCell } from '../renderer/numeric-edit-cell';\nimport { DefaultEditCell } from '../renderer/default-edit-cell';\nimport { InlineEdit } from './inline-edit';\nimport { BatchEdit } from './batch-edit';\nimport { DialogEdit } from './dialog-edit';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { parentsUntil, getComplexFieldID, setComplexFieldID, getScrollBarWidth, setValidationRuels } from '../base/util';\nimport { FormValidator } from '@syncfusion/ej2-inputs';\nimport { DatePickerEditCell } from '../renderer/datepicker-edit-cell';\nimport { calculateRelativeBasedPosition } from '@syncfusion/ej2-popups';\nimport { TemplateEditCell } from '../renderer/template-edit-cell';\nimport { DataUtil } from '@syncfusion/ej2-data';\nimport { addRemoveEventListener, getColumnModelByFieldName } from '../base/util';\nimport * as literals from '../base/string-literals';\n/**\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for the Grid editing module\n     *\n     * @param {IGrid} parent - specifies the IGrid\n     * @param {ServiceLocator} serviceLocator - specifies the servicelocator\n     * @hidden\n     */\n    function Edit(parent, serviceLocator) {\n        this.editType = { 'Inline': InlineEdit, 'Normal': InlineEdit, 'Batch': BatchEdit, 'Dialog': DialogEdit };\n        this.parent = parent;\n        this.serviceLocator = serviceLocator;\n        this.l10n = this.serviceLocator.getService('localization');\n        this.addEventListener();\n        this.updateEditObj();\n        this.createAlertDlg();\n        this.createConfirmDlg();\n    }\n    Edit.prototype.updateColTypeObj = function () {\n        var cols = this.parent.columnModel;\n        for (var i = 0; i < cols.length; i++) {\n            if (this.parent.editSettings.template || cols[i].editTemplate) {\n                var templteCell = 'templateedit';\n                cols[i].edit = extend(new Edit.editCellType[templteCell](this.parent), cols[i].edit || {});\n            }\n            else {\n                cols[i].edit = extend(new Edit.editCellType[cols[i].editType && Edit.editCellType[cols[i].editType] ?\n                    cols[i].editType : 'defaultedit'](this.parent, this.serviceLocator), cols[i].edit || {});\n            }\n        }\n        this.parent.log('primary_column_missing');\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} returns the module name\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @param {NotifyArgs} e - specifies the notifyargs\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.onPropertyChanged = function (e) {\n        if (e.module !== this.getModuleName()) {\n            return;\n        }\n        var gObj = this.parent;\n        for (var _i = 0, _a = Object.keys(e.properties); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'allowAdding':\n                case 'allowDeleting':\n                case 'allowEditing':\n                    if (gObj.editSettings.allowAdding || gObj.editSettings.allowEditing || gObj.editSettings.allowDeleting) {\n                        this.initialEnd();\n                    }\n                    break;\n                case 'mode':\n                    this.updateEditObj();\n                    gObj.isEdit = false;\n                    gObj.refresh();\n                    break;\n            }\n        }\n    };\n    Edit.prototype.updateEditObj = function () {\n        if (this.editModule) {\n            this.editModule.destroy();\n        }\n        this.renderer = new EditRender(this.parent, this.serviceLocator);\n        this.editModule = new this.editType[this.parent.editSettings.mode](this.parent, this.serviceLocator, this.renderer);\n    };\n    Edit.prototype.initialEnd = function () {\n        this.updateColTypeObj();\n    };\n    /**\n     * Edits any bound record in the Grid by TR element.\n     *\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     * @returns {void}\n     */\n    Edit.prototype.startEdit = function (tr) {\n        var gObj = this.parent;\n        if (!gObj.editSettings.allowEditing || gObj.isEdit || gObj.editSettings.mode === 'Batch') {\n            return;\n        }\n        this.parent.element.classList.add('e-editing');\n        if (!gObj.getSelectedRows().length) {\n            if (!tr) {\n                this.showDialog('EditOperationAlert', this.alertDObj);\n                return;\n            }\n        }\n        else if (!tr) {\n            tr = gObj.getSelectedRows()[0];\n        }\n        this.isLastRow = tr.rowIndex === this.parent.getContent().querySelector('tr:last-child').rowIndex;\n        if (tr.style.display === 'none') {\n            return;\n        }\n        this.editModule.startEdit(tr);\n        this.refreshToolbar();\n        gObj.element.querySelector('.e-gridpopup').style.display = 'none';\n        this.parent.notify('start-edit', {});\n    };\n    /**\n     * @param {Element} tr - specifies the tr element\n     * @param {object} args - specifies the object\n     * @param {Element} args.row -specfifes the row\n     * @param {string} args.requestType - specifies the request type\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.checkLastRow = function (tr, args) {\n        var checkLastRow = this.isLastRow;\n        if (this.parent.height !== 'auto' && this.parent.editSettings.newRowPosition === 'Bottom' && args &&\n            args.requestType === 'add' && this.parent.height > this.parent.getContentTable().scrollHeight) {\n            addClass([].slice.call(tr.getElementsByClassName(literals.rowCell)), 'e-lastrowadded');\n        }\n        else if (checkLastRow && tr && tr.classList) {\n            addClass([].slice.call(tr.getElementsByClassName(literals.rowCell)), 'e-lastrowcell');\n        }\n    };\n    /**\n     * Cancels edited state.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.closeEdit = function () {\n        if (this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.showConfirmDialog\n            && this.parent.element.getElementsByClassName('e-updatedtd').length) {\n            this.showDialog('CancelEdit', this.dialogObj);\n            return;\n        }\n        this.parent.element.classList.remove('e-editing');\n        this.editModule.closeEdit();\n        this.refreshToolbar();\n        this.parent.notify(events.closeEdit, {});\n    };\n    Edit.prototype.refreshToolbar = function () {\n        this.parent.notify(events.toolbarRefresh, {});\n    };\n    /**\n     * To adds a new row at the top with the given data. When data is not passed, it will add empty rows.\n     * > `editSettings.allowEditing` should be true.\n     *\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added\n     * @returns {void}\n     */\n    Edit.prototype.addRecord = function (data, index) {\n        if (!this.parent.editSettings.allowAdding) {\n            return;\n        }\n        var args = { startEdit: true };\n        if (!data) {\n            this.parent.notify(events.virtualScrollAddActionBegin, args);\n        }\n        if (args.startEdit) {\n            this.parent.element.classList.add('e-editing');\n            this.editModule.addRecord(data, index);\n            this.refreshToolbar();\n            this.parent.notify('start-add', {});\n        }\n    };\n    /**\n     * Deletes a record with the given options. If fieldname and data are not given, the Grid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     *\n     * @param {string} fieldname - Defines the primary key field name of the column.\n     * @param {Object} data - Defines the JSON data record to be deleted.\n     * @returns {void}\n     */\n    Edit.prototype.deleteRecord = function (fieldname, data) {\n        var gObj = this.parent;\n        if (!gObj.editSettings.allowDeleting) {\n            return;\n        }\n        if (!data) {\n            if (!gObj.getSelectedRecords().length && isNullOrUndefined(gObj.commandDelIndex)) {\n                this.showDialog('DeleteOperationAlert', this.alertDObj);\n                return;\n            }\n        }\n        if (gObj.editSettings.showDeleteConfirmDialog) {\n            this.showDialog('ConfirmDelete', this.dialogObj);\n            return;\n        }\n        this.editModule.deleteRecord(fieldname, data);\n    };\n    /**\n     * Deletes a visible row by TR element.\n     *\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     * @returns {void}\n     */\n    Edit.prototype.deleteRow = function (tr) {\n        this.deleteRowUid = tr.getAttribute('data-uid');\n        var rowObj = this.parent.getRowObjectFromUID(this.deleteRowUid);\n        if (!isNullOrUndefined(rowObj)) {\n            this.deleteRecord(null, rowObj.data);\n        }\n    };\n    /**\n     * If Grid is in editable state, you can save a record by invoking endEdit.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.endEdit = function () {\n        if (this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.showConfirmDialog &&\n            (isNullOrUndefined(this.formObj) || this.formObj.validate())) {\n            this.parent.editModule.saveCell();\n            this.parent.notify(events.editNextValCell, {});\n            if (isNullOrUndefined(this.formObj) || this.formObj.validate()) {\n                this.showDialog('BatchSaveConfirm', this.dialogObj);\n                return;\n            }\n        }\n        this.endEditing();\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     *\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     * @returns {void}\n     */\n    Edit.prototype.updateCell = function (rowIndex, field, value) {\n        this.editModule.updateCell(rowIndex, field, value);\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     *\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     * @returns {void}\n     */\n    Edit.prototype.updateRow = function (index, data) {\n        this.editModule.updateRow(index, data);\n    };\n    /**\n     * Resets added, edited, and deleted records in the batch mode.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.batchCancel = function () {\n        this.closeEdit();\n    };\n    /**\n     * Bulk saves added, edited, and deleted records in the batch mode.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.batchSave = function () {\n        this.endEdit();\n    };\n    /**\n     * Changes a particular cell into edited state based on the row index and field name provided in the `batch` mode.\n     *\n     * @param {number} index - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform batch edit.\n     * @returns {void}\n     */\n    Edit.prototype.editCell = function (index, field) {\n        this.editModule.editCell(index, field);\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     *\n     * @returns {boolean} returns whether the form is validated\n     */\n    Edit.prototype.editFormValidate = function () {\n        var form1 = this.formObj ? this.formObj.validate() : true;\n        var form2 = this.mFormObj ? this.mFormObj.validate() : true;\n        var form3 = this.frFormObj ? this.frFormObj.validate() : true;\n        return form1 && form2 && form3;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     *\n     * @returns {Object} returns the Object\n     */\n    Edit.prototype.getBatchChanges = function () {\n        return this.editModule.getBatchChanges ? this.editModule.getBatchChanges() : {};\n    };\n    /**\n     * Gets the current value of the edited component.\n     *\n     * @returns {Object} returns the Object\n     */\n    Edit.prototype.getCurrentEditCellData = function () {\n        var obj = this.getCurrentEditedData(this.formObj.element, {});\n        return obj[Object.keys(obj)[0]];\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.saveCell = function () {\n        this.editModule.saveCell();\n    };\n    Edit.prototype.endEditing = function () {\n        this.parent.element.classList.remove('e-editing');\n        this.editModule.endEdit();\n        this.refreshToolbar();\n    };\n    Edit.prototype.showDialog = function (content, obj) {\n        obj.content = '<div>' + this.l10n.getConstant(content) + '</div>';\n        obj.dataBind();\n        obj.show();\n    };\n    Edit.prototype.getValueFromType = function (col, value) {\n        var val = value;\n        switch (col.type) {\n            case 'number':\n                val = !isNaN(parseFloat(value)) ? parseFloat(value) : null;\n                break;\n            case 'boolean':\n                if (col.editType !== 'booleanedit') {\n                    val = value === this.l10n.getConstant('True') || value === true ? true : false;\n                }\n                break;\n            case 'date':\n            case 'datetime':\n                if (col.editType !== 'datepickeredit' && col.editType !== 'datetimepickeredit'\n                    && value && value.length) {\n                    val = new Date(value);\n                }\n                else if (value === '') {\n                    val = null;\n                }\n                break;\n        }\n        return val;\n    };\n    Edit.prototype.destroyToolTip = function () {\n        var elements = [].slice.call(this.parent.element.getElementsByClassName('e-griderror'));\n        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n            var elem = elements_1[_i];\n            remove(elem);\n        }\n        this.parent.getContent().firstElementChild.style.position = 'relative';\n    };\n    Edit.prototype.createConfirmDlg = function () {\n        this.dialogObj = this.dlgWidget([\n            {\n                click: this.dlgOk.bind(this),\n                buttonModel: { content: this.l10n.getConstant('OKButton'), cssClass: 'e-primary', isPrimary: true }\n            },\n            {\n                click: this.dlgCancel.bind(this),\n                buttonModel: { cssClass: 'e-flat', content: this.l10n.getConstant('CancelButton') }\n            }\n        ], 'EditConfirm');\n    };\n    Edit.prototype.createAlertDlg = function () {\n        this.alertDObj = this.dlgWidget([\n            {\n                click: this.alertClick.bind(this), buttonModel: { content: this.l10n.getConstant('OKButton'), cssClass: 'e-flat', isPrimary: true }\n            }\n        ], 'EditAlert');\n    };\n    Edit.prototype.alertClick = function () {\n        this.alertDObj.hide();\n    };\n    Edit.prototype.dlgWidget = function (btnOptions, name) {\n        var div = this.parent.createElement('div', { id: this.parent.element.id + name });\n        this.parent.element.appendChild(div);\n        var options = {\n            showCloseIcon: false,\n            isModal: true,\n            visible: false,\n            closeOnEscape: true,\n            target: this.parent.element,\n            width: '320px',\n            animationSettings: { effect: 'None' }\n        };\n        options.buttons = btnOptions;\n        var obj = new Dialog(options);\n        var isStringTemplate = 'isStringTemplate';\n        obj[isStringTemplate] = true;\n        obj.appendTo(div);\n        return obj;\n    };\n    Edit.prototype.dlgCancel = function () {\n        this.parent.focusModule.clearIndicator();\n        this.parent.focusModule.restoreFocus();\n        this.dialogObj.hide();\n    };\n    Edit.prototype.dlgOk = function () {\n        switch (this.dialogObj.element.querySelector('.e-dlg-content').firstElementChild.innerText) {\n            case this.l10n.getConstant('ConfirmDelete'):\n                this.editModule.deleteRecord();\n                break;\n            case this.l10n.getConstant('CancelEdit'):\n                this.editModule.closeEdit();\n                break;\n            case this.l10n.getConstant('BatchSaveConfirm'):\n                this.endEditing();\n                break;\n            case this.l10n.getConstant('BatchSaveLostChanges'):\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.editModule.addCancelWhilePaging();\n                }\n                this.executeAction();\n                break;\n        }\n        this.dlgCancel();\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.eventDetails = [{ event: events.inBoundModelChanged, handler: this.onPropertyChanged },\n            { event: events.initialEnd, handler: this.initialEnd },\n            { event: events.keyPressed, handler: this.keyPressHandler },\n            { event: events.autoCol, handler: this.updateColTypeObj },\n            { event: events.tooltipDestroy, handler: this.destroyToolTip },\n            { event: events.preventBatch, handler: this.preventBatch },\n            { event: events.destroyForm, handler: this.destroyForm }];\n        addRemoveEventListener(this.parent, this.eventDetails, true, this);\n        this.actionBeginFunction = this.onActionBegin.bind(this);\n        this.actionCompleteFunction = this.actionComplete.bind(this);\n        this.parent.addEventListener(events.actionBegin, this.actionBeginFunction);\n        this.parent.addEventListener(events.actionComplete, this.actionCompleteFunction);\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        addRemoveEventListener(this.parent, this.eventDetails, false);\n        this.parent.removeEventListener(events.actionComplete, this.actionCompleteFunction);\n        this.parent.removeEventListener(events.actionBegin, this.actionBeginFunction);\n    };\n    Edit.prototype.actionComplete = function (e) {\n        var actions = ['add', 'beginEdit', 'save', 'delete', 'cancel'];\n        if (actions.indexOf(e.requestType) < 0) {\n            this.parent.isEdit = false;\n        }\n        if (e.requestType === 'batchsave') {\n            this.parent.focusModule.restoreFocus();\n        }\n        this.refreshToolbar();\n    };\n    /**\n     * @param {Element} form - specifies the element\n     * @param {Object} editedData - specifies the edited data\n     * @returns {Object} returns the object\n     * @hidden\n     */\n    Edit.prototype.getCurrentEditedData = function (form, editedData) {\n        var gObj = this.parent;\n        if (gObj.editSettings.template) {\n            var elements = [].slice.call(form.elements);\n            for (var k = 0; k < elements.length; k++) {\n                if (((elements[k].hasAttribute('name') && (elements[k].className !== 'e-multi-hidden')) ||\n                    elements[k].classList.contains('e-multiselect')) && !(elements[k].type === 'hidden' &&\n                    (parentsUntil(elements[k], 'e-switch-wrapper') || parentsUntil(elements[k], 'e-checkbox-wrapper')))) {\n                    var field = (elements[k].hasAttribute('name')) ? setComplexFieldID(elements[k].getAttribute('name')) :\n                        setComplexFieldID(elements[k].getAttribute('id'));\n                    var column = gObj.getColumnByField(field) || { field: field, type: elements[k].getAttribute('type') };\n                    var value = void 0;\n                    if (column.type === 'checkbox' || column.type === 'boolean') {\n                        value = elements[k].checked;\n                    }\n                    else if (elements[k].value) {\n                        value = elements[k].value;\n                        if (elements[k].ej2_instances &&\n                            elements[k].ej2_instances.length &&\n                            !isNullOrUndefined(elements[k].ej2_instances[0].value)) {\n                            elements[k].blur();\n                            value = elements[k].ej2_instances[0].value;\n                            if ((column.type === 'date' || column.type === 'dateTime' || column.type === 'datetime') &&\n                                (elements[k].ej2_instances[0].isServerRendered)) {\n                                value = elements[k].value;\n                            }\n                        }\n                    }\n                    else if (elements[k].ej2_instances) {\n                        value = elements[k].ej2_instances[0].value;\n                    }\n                    if (column.edit && typeof column.edit.read === 'string') {\n                        value = getValue(column.edit.read, window)(elements[k], value);\n                    }\n                    else if (column.edit && column.edit.read) {\n                        value = column.edit.read(elements[k], value);\n                    }\n                    value = gObj.editModule.getValueFromType(column, value);\n                    if (elements[k].type === 'radio') {\n                        if (elements[k].checked) {\n                            DataUtil.setValue(column.field, value, editedData);\n                        }\n                    }\n                    else {\n                        DataUtil.setValue(column.field, value, editedData);\n                    }\n                }\n            }\n            return editedData;\n        }\n        var col = gObj.columnModel.filter(function (col) { return col.editTemplate; });\n        for (var j = 0; j < col.length; j++) {\n            if (form[getComplexFieldID(col[j].field)]) {\n                var inputElements = [].slice.call(form[getComplexFieldID(col[j].field)]);\n                inputElements = inputElements.length ? inputElements : [form[getComplexFieldID(col[j].field)]];\n                var temp = inputElements.filter(function (e) {\n                    return !isNullOrUndefined((e.ej2_instances));\n                });\n                if (temp.length === 0) {\n                    temp = inputElements.filter(function (e) { return e.hasAttribute('name'); });\n                }\n                for (var k = 0; k < temp.length; k++) {\n                    var value = this.getValue(col[j], temp[k], editedData);\n                    DataUtil.setValue(col[j].field, value, editedData);\n                }\n            }\n        }\n        var inputs = [].slice.call(form.getElementsByClassName('e-field'));\n        for (var i = 0, len = inputs.length; i < len; i++) {\n            var col_1 = gObj.getColumnByUid(inputs[i].getAttribute('e-mappinguid'));\n            if (col_1 && col_1.field) {\n                var value = this.getValue(col_1, inputs[i], editedData);\n                DataUtil.setValue(col_1.field, value, editedData);\n            }\n        }\n        return editedData;\n    };\n    Edit.prototype.getValue = function (col, input, editedData) {\n        var value = input.ej2_instances ?\n            input.ej2_instances[0].value : input.value;\n        var gObj = this.parent;\n        var temp = col.edit.read;\n        if (col.type === 'checkbox' || col.type === 'boolean') {\n            value = input.checked;\n        }\n        if (typeof temp === 'string') {\n            temp = getValue(temp, window);\n            value = gObj.editModule.getValueFromType(col, (temp)(input, value));\n        }\n        else {\n            value = gObj.editModule.getValueFromType(col, col.edit.read(input, value));\n        }\n        if (isNullOrUndefined(editedData[col.field]) && value === '') {\n            value = editedData[col.field];\n        }\n        return value;\n    };\n    /**\n     * @param {NotifyArgs} e - specifies the NotifyArgs\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.onActionBegin = function (e) {\n        if (e.requestType === 'columnstate' && this.parent.isEdit\n            && this.parent.editSettings.mode !== 'Batch') {\n            this.closeEdit();\n        }\n        else {\n            var editRow = this.parent.element.querySelector('.' + literals.editedRow);\n            var addRow = this.parent.element.querySelector('.' + literals.addedRow);\n            if (editRow && this.parent.frozenRows && e.requestType === 'virtualscroll'\n                && parseInt(parentsUntil(editRow, literals.row).getAttribute(literals.ariaRowIndex), 10) < this.parent.frozenRows) {\n                return;\n            }\n            var restrictedRequestTypes = ['filterafteropen', 'filterbeforeopen', 'filterchoicerequest', 'save', 'infiniteScroll', 'virtualscroll'];\n            var isRestrict = restrictedRequestTypes.indexOf(e.requestType) === -1;\n            var isDestroyVirtualForm = this.parent.enableVirtualization && this.formObj\n                && !this.formObj.isDestroyed && (editRow || addRow || e.requestType === 'cancel') && isRestrict;\n            if ((!this.parent.enableVirtualization && this.parent.editSettings.mode !== 'Batch' && this.formObj && !this.formObj.isDestroyed\n                && isRestrict && !e.cancel) || isDestroyVirtualForm) {\n                this.destroyWidgets();\n                this.destroyForm();\n            }\n        }\n    };\n    /**\n     * @param {Column[]} cols - specfies the column\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.destroyWidgets = function (cols) {\n        var gObj = this.parent;\n        if (gObj.editSettings.template) {\n            this.parent.destroyTemplate(['editSettingsTemplate']);\n            if (this.parent.isReact) {\n                this.parent.renderTemplates();\n            }\n        }\n        cols = cols ? cols : this.parent.getCurrentVisibleColumns(this.parent.enableColumnVirtualization);\n        if (cols.some(function (column) { return !isNullOrUndefined(column.editTemplate); })) {\n            this.parent.destroyTemplate(['editTemplate']);\n            if (this.parent.isReact) {\n                this.parent.renderTemplates();\n            }\n        }\n        for (var _i = 0, cols_1 = cols; _i < cols_1.length; _i++) {\n            var col = cols_1[_i];\n            var temp = col.edit.destroy;\n            if (col.edit.destroy) {\n                if (typeof temp === 'string') {\n                    temp = getValue(temp, window);\n                    temp();\n                }\n                else {\n                    col.edit.destroy();\n                }\n            }\n        }\n        var elements = [].slice.call(this.formObj.element.elements);\n        for (var i = 0; i < elements.length; i++) {\n            if (elements[i].hasAttribute('name')) {\n                if (elements[i].ej2_instances &&\n                    elements[i].ej2_instances.length &&\n                    !elements[i].ej2_instances[0].isDestroyed) {\n                    elements[i].ej2_instances[0].destroy();\n                }\n            }\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.destroyToolTip();\n        var formObjects = [this.formObj, this.mFormObj, this.frFormObj, this.virtualFormObj];\n        for (var i = 0; i < formObjects.length; i++) {\n            if (formObjects[i] && formObjects[i].element && !formObjects[i].isDestroyed) {\n                formObjects[i].destroy();\n            }\n        }\n        this.destroyToolTip();\n    };\n    /**\n     * To destroy the editing.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        var gridElement = this.parent.element;\n        if (!gridElement) {\n            return;\n        }\n        var hasGridChild = gridElement.querySelector('.' + literals.gridHeader) &&\n            gridElement.querySelector('.' + literals.gridContent) ? true : false;\n        if (hasGridChild) {\n            this.destroyForm();\n        }\n        this.removeEventListener();\n        var elem = this.dialogObj.element;\n        if (elem.childElementCount > 0) {\n            this.dialogObj.destroy();\n            remove(elem);\n        }\n        elem = this.alertDObj.element;\n        if (elem.childElementCount > 0) {\n            this.alertDObj.destroy();\n            remove(elem);\n        }\n        if (!hasGridChild) {\n            return;\n        }\n        if (this.editModule) {\n            this.editModule.destroy();\n        }\n    };\n    Edit.prototype.keyPressHandler = function (e) {\n        switch (e.action) {\n            case 'insert':\n                this.addRecord();\n                break;\n            case 'delete':\n                if ((e.target.tagName !== 'INPUT' || e.target.classList.contains('e-checkselect'))\n                    && !document.querySelector('.e-popup-open')) {\n                    this.deleteRecord();\n                }\n                break;\n            case 'f2':\n                this.startEdit();\n                break;\n            case 'enter':\n                if (!parentsUntil(e.target, 'e-unboundcelldiv') && this.parent.editSettings.mode !== 'Batch' &&\n                    (parentsUntil(e.target, literals.gridContent) || (this.parent.frozenRows\n                        && parentsUntil(e.target, literals.headerContent)))\n                    && !document.getElementsByClassName('e-popup-open').length) {\n                    e.preventDefault();\n                    this.endEdit();\n                }\n                break;\n            case 'escape':\n                if (this.parent.isEdit) {\n                    if (this.parent.editSettings.mode === 'Batch') {\n                        this.editModule.escapeCellEdit();\n                    }\n                    else {\n                        this.closeEdit();\n                    }\n                }\n                break;\n        }\n    };\n    Edit.prototype.preventBatch = function (args) {\n        this.preventObj = args;\n        this.showDialog('BatchSaveLostChanges', this.dialogObj);\n    };\n    Edit.prototype.executeAction = function () {\n        this.preventObj.handler.call(this.preventObj.instance, this.preventObj.arg1, this.preventObj.arg2, this.preventObj.arg3, this.preventObj.arg4, this.preventObj.arg5, this.preventObj.arg6, this.preventObj.arg7, this.preventObj.arg8);\n    };\n    /**\n     * @param {Column[]} cols - specifies the column\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        var gObj = this.parent;\n        var frzCols = gObj.isFrozenGrid();\n        var isInline = this.parent.editSettings.mode === 'Normal';\n        var idx = this.parent.getFrozenMode() === 'Right' && isInline ? 1 : 0;\n        var form = this.parent.editSettings.mode !== 'Dialog' ?\n            gObj.element.getElementsByClassName('e-gridform')[idx] :\n            select('#' + gObj.element.id + '_dialogEdit_wrapper .e-gridform', document);\n        var index = this.parent.getFrozenMode() === 'Right' && isInline ? 0 : 1;\n        var mForm = gObj.element.getElementsByClassName('e-gridform')[index];\n        var rules = {};\n        var mRules = {};\n        var frRules = {};\n        cols = cols ? cols : gObj.getColumns();\n        for (var i = 0; i < cols.length; i++) {\n            if (!cols[i].visible) {\n                continue;\n            }\n            if (cols[i].validationRules) {\n                setValidationRuels(cols[i], index, rules, mRules, frRules, cols.length);\n            }\n        }\n        if (frzCols && this.parent.editSettings.mode !== 'Dialog') {\n            this.parent.editModule.mFormObj = this.createFormObj(mForm, mRules);\n            if (this.parent.getFrozenMode() === literals.leftRight) {\n                var frForm = gObj.element.getElementsByClassName('e-gridform')[2];\n                this.parent.editModule.frFormObj = this.createFormObj(frForm, frRules);\n            }\n        }\n        else {\n            rules = extend(rules, mRules, frRules);\n        }\n        this.parent.editModule.formObj = this.createFormObj(form, rules);\n    };\n    /**\n     * @param {HTMLFormElement} form - Defined Form element\n     * @param {Object} rules - Defines form rules\n     * @returns {FormValidator} Returns formvalidator instance\n     * @hidden\n     */\n    Edit.prototype.createFormObj = function (form, rules) {\n        var _this = this;\n        return new FormValidator(form, {\n            rules: rules,\n            locale: this.parent.locale,\n            validationComplete: function (args) {\n                _this.validationComplete(args);\n            },\n            customPlacement: function (inputElement, error) {\n                var uid = inputElement.getAttribute('e-mappinguid');\n                var args = {\n                    column: _this.parent.getColumnByUid(uid),\n                    error: error,\n                    inputElement: inputElement,\n                    value: inputElement.value\n                };\n                _this.valErrorPlacement(inputElement, error);\n                _this.parent.notify(events.valCustomPlacement, args);\n            }\n        });\n    };\n    Edit.prototype.valErrorPlacement = function (inputElement, error) {\n        if (this.parent.isEdit) {\n            var id = error.getAttribute('for');\n            var elem = this.getElemTable(inputElement).querySelector('#' + id + '_Error');\n            if (!elem) {\n                this.createTooltip(inputElement, error, id, '');\n            }\n            else {\n                elem.querySelector('.e-tip-content').innerHTML = error.outerHTML;\n            }\n        }\n    };\n    Edit.prototype.getElemTable = function (inputElement) {\n        var isFHdr;\n        var gObj = this.parent;\n        var table;\n        if (gObj.editSettings.mode !== 'Dialog') {\n            isFHdr = (gObj.frozenRows && gObj.frozenRows\n                > (parseInt(closest(inputElement, '.' + literals.row).getAttribute(literals.ariaRowIndex), 10) || 0));\n            var field = inputElement.name;\n            var col = void 0;\n            if (field) {\n                col = getColumnModelByFieldName(this.parent, setComplexFieldID(field));\n            }\n            if (col && gObj.isFrozenGrid()) {\n                if (col.getFreezeTableName() === 'frozen-left') {\n                    table = isFHdr ? gObj.getFrozenVirtualHeader().querySelector('table')\n                        : gObj.getFrozenVirtualContent().querySelector('table');\n                }\n                else if (col.getFreezeTableName() === 'frozen-right') {\n                    table = isFHdr ? gObj.getFrozenRightHeader().querySelector('table')\n                        : gObj.getFrozenRightContent().querySelector('table');\n                }\n                else if (col.getFreezeTableName() === 'movable') {\n                    table = isFHdr ? gObj.getMovableVirtualHeader().querySelector('table')\n                        : gObj.getMovableVirtualContent().querySelector('table');\n                }\n            }\n            else {\n                table = isFHdr ? gObj.getHeaderTable() : gObj.getContentTable();\n            }\n        }\n        else {\n            table = select('#' + gObj.element.id + '_dialogEdit_wrapper', document);\n        }\n        return table;\n    };\n    Edit.prototype.resetElemPosition = function (elem, args) {\n        var td = parentsUntil(args.element, literals.rowCell);\n        if (td) {\n            var tdRight = td.getBoundingClientRect().right;\n            var elemRight = elem.getBoundingClientRect().right;\n            if (elemRight > tdRight) {\n                var offSet = elemRight - tdRight;\n                elem.style.left = (elem.offsetLeft - offSet) + 'px';\n            }\n        }\n    };\n    Edit.prototype.validationComplete = function (args) {\n        if (this.parent.isEdit) {\n            var elem = this.getElemTable(args.element).querySelector('#' + args.inputName + '_Error');\n            if (elem) {\n                if (args.status === 'failure') {\n                    elem.style.display = '';\n                    this.resetElemPosition(elem, args);\n                }\n                else {\n                    elem.style.display = 'none';\n                }\n            }\n        }\n    };\n    Edit.prototype.createTooltip = function (element, error, name, display) {\n        var column = this.parent.getColumnByField(name);\n        var formObj = this.parent.getFrozenMode() === literals.leftRight && this.parent.editSettings.mode === 'Normal'\n            && column.getFreezeTableName() === literals.frozenRight ? this.frFormObj.element : this.formObj.element;\n        var customForm = parentsUntil(element, 'e-virtual-validation');\n        if (customForm) {\n            formObj = this.virtualFormObj.element;\n        }\n        var gcontent = this.parent.getContent().firstElementChild;\n        var frzCols = this.parent.getFrozenColumns() || this.parent.getFrozenLeftColumnsCount()\n            || this.parent.getFrozenRightColumnsCount();\n        if (frzCols) {\n            gcontent = this.parent.getMovableVirtualContent();\n        }\n        var isScroll = gcontent.scrollHeight > gcontent.clientHeight || gcontent.scrollWidth > gcontent.clientWidth;\n        var isInline = this.parent.editSettings.mode !== 'Dialog';\n        var td = closest(element, '.' + literals.rowCell);\n        var row = closest(element, '.' + literals.row);\n        var fCont = this.parent.getContent().querySelector('.' + literals.frozenContent);\n        var isFHdr;\n        var isFHdrLastRow = false;\n        var validationForBottomRowPos;\n        var isBatchModeLastRow = false;\n        var viewPortRowCount = Math.round(this.parent.getContent().clientHeight / this.parent.getRowHeight()) - 1;\n        var rows = !fCont ? [].slice.call(this.parent.getContent().getElementsByClassName(literals.row))\n            : [].slice.call(this.parent.getFrozenVirtualContent().getElementsByClassName(literals.row));\n        if (this.parent.editSettings.mode === 'Batch') {\n            if (viewPortRowCount > 1 && rows.length >= viewPortRowCount\n                && rows[rows.length - 1].getAttribute(literals.ariaRowIndex) === row.getAttribute(literals.ariaRowIndex)) {\n                isBatchModeLastRow = true;\n            }\n        }\n        if (isInline) {\n            if (this.parent.frozenRows) {\n                var fHeraderRows = frzCols ? this.parent.getFrozenVirtualHeader().querySelector(literals.tbody).children\n                    : this.parent.getHeaderTable().querySelector(literals.tbody).children;\n                isFHdr = fHeraderRows.length > (parseInt(row.getAttribute(literals.ariaRowIndex), 10) || 0);\n                isFHdrLastRow = isFHdr && parseInt(row.getAttribute(literals.ariaRowIndex), 10) === fHeraderRows.length - 1;\n            }\n            if (isFHdrLastRow || (viewPortRowCount > 1 && rows.length >= viewPortRowCount\n                && ((this.parent.editSettings.newRowPosition === 'Bottom' && (this.editModule.args\n                    && this.editModule.args.requestType === 'add')) || (td.classList.contains('e-lastrowcell')\n                    && !row.classList.contains(literals.addedRow)))) || isBatchModeLastRow) {\n                validationForBottomRowPos = true;\n            }\n        }\n        var table = isInline ?\n            (isFHdr ? this.parent.getHeaderTable() : this.parent.getContentTable()) :\n            select('#' + this.parent.element.id + '_dialogEdit_wrapper .e-dlg-content', document);\n        var client = table.getBoundingClientRect();\n        var left = isInline ?\n            this.parent.element.getBoundingClientRect().left : client.left;\n        var input = closest(element, 'td');\n        var inputClient = input ? input.getBoundingClientRect() : element.parentElement.getBoundingClientRect();\n        var div = this.parent.createElement('div', {\n            className: 'e-tooltip-wrap e-lib e-control e-popup e-griderror',\n            id: name + '_Error',\n            styles: 'display:' + display + ';top:' +\n                ((isFHdr ? inputClient.top + inputClient.height : inputClient.bottom - client.top\n                    - (frzCols ? fCont.scrollTop : 0)) + table.scrollTop + 9) + 'px;left:' +\n                (inputClient.left - left + table.scrollLeft + inputClient.width / 2) + 'px;' +\n                'max-width:' + inputClient.width + 'px;text-align:center;'\n        });\n        if (isInline && client.left < left) {\n            div.style.left = parseInt(div.style.left, 10) - client.left + left + 'px';\n        }\n        var content = this.parent.createElement('div', { className: 'e-tip-content' });\n        content.appendChild(error);\n        var arrow;\n        if (validationForBottomRowPos) {\n            arrow = this.parent.createElement('div', { className: 'e-arrow-tip e-tip-bottom' });\n            arrow.appendChild(this.parent.createElement('div', { className: 'e-arrow-tip-outer e-tip-bottom' }));\n            arrow.appendChild(this.parent.createElement('div', { className: 'e-arrow-tip-inner e-tip-bottom' }));\n        }\n        else {\n            arrow = this.parent.createElement('div', { className: 'e-arrow-tip e-tip-top' });\n            arrow.appendChild(this.parent.createElement('div', { className: 'e-arrow-tip-outer e-tip-top' }));\n            arrow.appendChild(this.parent.createElement('div', { className: 'e-arrow-tip-inner e-tip-top' }));\n        }\n        div.appendChild(content);\n        div.appendChild(arrow);\n        if (!customForm && (frzCols || this.parent.frozenRows) && this.parent.editSettings.mode !== 'Dialog') {\n            var getEditCell = this.parent.editSettings.mode === 'Normal' ?\n                closest(element, '.e-editcell') : closest(element, '.' + literals.table);\n            getEditCell.style.position = 'relative';\n            div.style.position = 'absolute';\n            if (this.parent.editSettings.mode === 'Batch' ||\n                (closest(element, '.' + literals.frozenContent) || closest(element, '.' + literals.frozenHeader))\n                || (this.parent.frozenRows && !frzCols)) {\n                formObj.appendChild(div);\n            }\n            else {\n                this.mFormObj.element.appendChild(div);\n            }\n        }\n        else {\n            if (customForm) {\n                this.virtualFormObj.element.appendChild(div);\n            }\n            else {\n                this.formObj.element.appendChild(div);\n            }\n        }\n        if (!validationForBottomRowPos && isInline && gcontent.getBoundingClientRect().bottom < inputClient.bottom + inputClient.height) {\n            gcontent.scrollTop = gcontent.scrollTop + div.offsetHeight + arrow.scrollHeight;\n        }\n        var lineHeight = parseInt(document.defaultView.getComputedStyle(div, null).getPropertyValue('font-size'), 10);\n        if (div.getBoundingClientRect().width < inputClient.width &&\n            div.querySelector('label').getBoundingClientRect().height / (lineHeight * 1.2) >= 2) {\n            div.style.width = div.style.maxWidth;\n        }\n        if ((frzCols || this.parent.frozenRows) && this.parent.editSettings.mode !== 'Dialog') {\n            div.style.left = input.offsetLeft + (input.offsetWidth / 2 - div.offsetWidth / 2) + 'px';\n        }\n        else {\n            div.style.left = (parseInt(div.style.left, 10) - div.offsetWidth / 2) + 'px';\n        }\n        if (isInline && !isScroll && !this.parent.allowPaging || frzCols || this.parent.frozenRows) {\n            gcontent.style.position = 'static';\n            var pos = calculateRelativeBasedPosition(input, div);\n            div.style.top = pos.top + inputClient.height + 9 + 'px';\n        }\n        if (validationForBottomRowPos) {\n            if (isScroll && !frzCols && this.parent.height !== 'auto' && !this.parent.frozenRows\n                && !this.parent.enableVirtualization) {\n                var scrollWidth = gcontent.scrollWidth > gcontent.offsetWidth ? getScrollBarWidth() : 0;\n                div.style.bottom = (this.parent.height - gcontent.querySelector('table').offsetHeight\n                    - scrollWidth) + inputClient.height + 9 + 'px';\n            }\n            else {\n                div.style.bottom = inputClient.height + 9 + 'px';\n            }\n            if (rows.length < viewPortRowCount && this.parent.editSettings.newRowPosition === 'Bottom' && (this.editModule.args\n                && this.editModule.args.requestType === 'add')) {\n                var rowsCount = this.parent.frozenRows ? this.parent.frozenRows + (rows.length - 1) : rows.length - 1;\n                var rowsHeight = rowsCount * this.parent.getRowHeight();\n                var position = this.parent.getContent().clientHeight - rowsHeight;\n                div.style.bottom = position + 9 + 'px';\n            }\n            div.style.top = null;\n        }\n    };\n    /**\n     * @param {Column} col - specfies the column\n     * @returns {boolean} returns the whether column is grouped\n     * @hidden\n     */\n    Edit.prototype.checkColumnIsGrouped = function (col) {\n        return !col.visible && !(this.parent.groupSettings.columns.indexOf(col.field) > -1);\n    };\n    /**\n     * @param {object} editors -specfies the editors\n     * @returns {void}\n     * @hidden\n     */\n    Edit.AddEditors = function (editors) {\n        Edit.editCellType = extend(Edit.editCellType, editors);\n    };\n    Edit.editCellType = {\n        'dropdownedit': DropDownEditCell, 'numericedit': NumericEditCell,\n        'datepickeredit': DatePickerEditCell, 'datetimepickeredit': DatePickerEditCell,\n        'booleanedit': BooleanEditCell, 'defaultedit': DefaultEditCell,\n        'templateedit': TemplateEditCell\n    };\n    return Edit;\n}());\nexport { Edit };\n"]},"metadata":{},"sourceType":"module"}