{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { Browser, EventHandler, createElement, isBlazor } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, isUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { remove, closest, select } from '@syncfusion/ej2-base';\nimport { Query } from '@syncfusion/ej2-data';\nimport { setCssInGridPopUp, getPosition, isGroupAdaptive, addRemoveActiveClasses, removeAddCboxClasses } from '../base/util';\nimport { getCellsByTableName, getCellByColAndRowIndex, parentsUntil, gridActionHandler } from '../base/util';\nimport * as events from '../base/constant';\nimport { RenderType } from '../base/enum';\nimport { iterateExtend, setChecked } from '../base/util';\nimport { addRemoveEventListener } from '../base/util';\nimport * as literals from '../base/string-literals';\n/**\n * The `Selection` module is used to handle cell and row selection.\n */\n\nvar Selection =\n/** @class */\nfunction () {\n  /**\n   * Constructor for the Grid selection module\n   *\n   * @param {IGrid} parent - specifies the IGrid\n   * @param {SelectionSettings} selectionSettings - specifies the selectionsettings\n   * @param {ServiceLocator} locator - specifies the ServiceLocator\n   * @hidden\n   */\n  function Selection(parent, selectionSettings, locator) {\n    //Internal letiables\n\n    /**\n     * @hidden\n     */\n    this.selectedRowIndexes = [];\n    /**\n     * @hidden\n     */\n\n    this.selectedRowCellIndexes = [];\n    /**\n     * @hidden\n     */\n\n    this.selectedRecords = [];\n    /**\n     * @hidden\n     */\n\n    this.preventFocus = false;\n    /**\n     *  @hidden\n     */\n\n    this.selectedColumnsIndexes = [];\n    this.checkBoxState = false;\n    this.isMultiShiftRequest = false;\n    this.isMultiCtrlRequest = false;\n    this.enableSelectMultiTouch = false;\n    this.clearRowCheck = false;\n    this.selectRowCheck = false;\n    this.selectedRowState = {};\n    this.totalRecordsCount = 0;\n    this.chkAllCollec = [];\n    this.isCheckedOnAdd = false;\n    this.persistSelectedData = [];\n    this.deSelectedData = [];\n    this.needColumnSelection = false;\n    this.isCancelDeSelect = false;\n    this.isPreventCellSelect = false;\n    this.disableUI = false;\n    this.isPersisted = false;\n    this.cmdKeyPressed = false;\n    this.cellselected = false;\n    this.isMultiSelection = false;\n    this.isAddRowsToSelection = false;\n    this.initialRowSelection = false;\n    this.isPrevRowSelection = false;\n    /**\n     * @hidden\n     */\n\n    this.autoFillRLselection = true;\n    this.bottom = '0 0 2px 0';\n    this.top = '2px 0 0 0';\n    /* eslint-disable */\n\n    this.right_bottom = '0 2px 2px 0';\n    this.bottom_left = '0 0 2px 2px';\n    this.top_right = '2px 2px 0 0';\n    this.top_left = '2px 0 0 2px';\n    this.top_bottom = '2px 0 2px 0';\n    this.top_right_bottom = '2px 2px 2px 0';\n    this.top_bottom_left = '2px 0 2px 2px';\n    this.top_right_left = '2px 2px 0 2px';\n    this.right_bottom_left = '0 2px 2px 2px';\n    this.all_border = '2px';\n    this.parent = parent;\n    this.selectionSettings = selectionSettings;\n    this.factory = locator.getService('rendererFactory');\n    this.focus = locator.getService('focus');\n    this.addEventListener();\n    this.wireEvents();\n  }\n\n  Selection.prototype.initializeSelection = function () {\n    this.parent.log('selection_key_missing');\n    this.render();\n  };\n  /**\n   * The function used to trigger onActionBegin\n   *\n   * @param {Object} args - specifies the args\n   * @param {string} type - specifies the type\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.onActionBegin = function (args, type) {\n    this.parent.trigger(type, this.fDataUpdate(args));\n  };\n\n  Selection.prototype.fDataUpdate = function (args) {\n    if (!this.isMultiSelection && (!isNullOrUndefined(args.cellIndex) || !isNullOrUndefined(args.rowIndex))) {\n      var rowObj = this.getRowObj(isNullOrUndefined(args.rowIndex) ? isNullOrUndefined(args.cellIndex) ? this.currentIndex : args.cellIndex.rowIndex : args.rowIndex);\n      args.foreignKeyData = rowObj.foreignKeyData;\n    }\n\n    return args;\n  };\n  /**\n   * The function used to trigger onActionComplete\n   *\n   * @param {Object} args - specifies the args\n   * @param {string} type - specifies the type\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.onActionComplete = function (args, type) {\n    this.parent.trigger(type, this.fDataUpdate(args));\n    this.isMultiSelection = false;\n  };\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @returns {string} returns the module name\n   * @private\n   */\n\n\n  Selection.prototype.getModuleName = function () {\n    return 'selection';\n  };\n  /**\n   * To destroy the selection\n   *\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.destroy = function () {\n    var gridElement = this.parent.element;\n\n    if (!gridElement || !gridElement.querySelector('.' + literals.gridHeader) && !gridElement.querySelector('.' + literals.gridContent)) {\n      return;\n    }\n\n    this.hidePopUp();\n    this.clearSelection();\n    this.removeEventListener();\n    this.unWireEvents();\n    EventHandler.remove(this.parent.getContent(), 'mousedown', this.mouseDownHandler);\n    EventHandler.remove(this.parent.getHeaderContent(), 'mousedown', this.mouseDownHandler);\n  };\n\n  Selection.prototype.isEditing = function () {\n    return (this.parent.editSettings.mode === 'Normal' || this.parent.editSettings.mode === 'Batch' && this.parent.editModule && this.parent.editModule.formObj && !this.parent.editModule.formObj.validate()) && this.parent.isEdit && !this.parent.isPersistSelection;\n  };\n\n  Selection.prototype.getSelectedMovableRow = function (index) {\n    var gObj = this.parent;\n\n    if (gObj.isFrozenGrid() && this.parent.getContent().querySelector('.' + literals.movableContent)) {\n      return gObj.getMovableRowByIndex(index);\n    }\n\n    return null;\n  };\n\n  Selection.prototype.getSelectedFrozenRightRow = function (index) {\n    var gObj = this.parent;\n\n    if (gObj.isFrozenGrid() && gObj.getFrozenMode() === literals.leftRight && gObj.getFrozenRightContent()) {\n      return gObj.getFrozenRightRowByIndex(index);\n    }\n\n    return null;\n  };\n\n  Selection.prototype.getCurrentBatchRecordChanges = function () {\n    var gObj = this.parent;\n\n    if (gObj.editSettings.mode === 'Batch' && gObj.editModule) {\n      var currentRecords = iterateExtend(this.parent.getCurrentViewRecords());\n      currentRecords = gObj.editSettings.newRowPosition === 'Bottom' ? currentRecords.concat(this.parent.editModule.getBatchChanges()[literals.addedRecords]) : this.parent.editModule.getBatchChanges()[literals.addedRecords].concat(currentRecords);\n      var deletedRecords = this.parent.editModule.getBatchChanges()[literals.deletedRecords];\n      var primaryKey = this.parent.getPrimaryKeyFieldNames()[0];\n\n      for (var i = 0; i < deletedRecords.length; i++) {\n        for (var j = 0; j < currentRecords.length; j++) {\n          if (deletedRecords[i][primaryKey] === currentRecords[j][primaryKey]) {\n            currentRecords.splice(j, 1);\n            break;\n          }\n        }\n      }\n\n      return currentRecords;\n    } else {\n      return gObj.getCurrentViewRecords();\n    }\n  };\n  /**\n   * Selects a row by the given index.\n   *\n   * @param  {number} index - Defines the row index.\n   * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n   * @returns {void}\n   */\n\n\n  Selection.prototype.selectRow = function (index, isToggle) {\n    if (this.selectedRowIndexes.length && this.selectionSettings.enableSimpleMultiRowSelection) {\n      this.addRowsToSelection([index]);\n      return;\n    }\n\n    var gObj = this.parent;\n    var selectedRow = gObj.getRowByIndex(index);\n    var selectedMovableRow = this.getSelectedMovableRow(index);\n    var selectedFrozenRightRow = this.getSelectedFrozenRightRow(index);\n    var selectData;\n    var isRemoved = false;\n\n    if (gObj.enableVirtualization && index > -1) {\n      var e = {\n        selectedIndex: index,\n        isAvailable: true\n      };\n      this.parent.notify(events.selectVirtualRow, e);\n      var frozenData = gObj.isFrozenGrid() ? gObj.contentModule.getRowObjectByIndex(index) : null;\n\n      if (selectedRow && (gObj.getRowObjectFromUID(selectedRow.getAttribute('data-uid')) || frozenData)) {\n        selectData = frozenData ? frozenData : gObj.getRowObjectFromUID(selectedRow.getAttribute('data-uid')).data;\n      } else {\n        if (e.isAvailable && !gObj.selectionSettings.persistSelection) {\n          var prevSelectedData = this.parent.getSelectedRecords();\n\n          if (prevSelectedData.length > 0) {\n            this.clearRowSelection();\n          }\n        }\n\n        return;\n      }\n    } else {\n      selectData = this.getCurrentBatchRecordChanges()[index];\n    }\n\n    if (!this.isRowType() || !selectedRow || this.isEditing()) {\n      // if (this.isEditing()) {\n      //     gObj.selectedRowIndex = index;\n      // }\n      return;\n    }\n\n    var isRowSelected = selectedRow.hasAttribute('aria-selected');\n    this.activeTarget();\n    isToggle = !isToggle ? isToggle : !this.selectedRowIndexes.length ? false : this.selectedRowIndexes.length === 1 ? index === this.selectedRowIndexes[0] : false;\n    var args;\n    var can = 'cancel';\n\n    if (!isToggle) {\n      args = {\n        data: selectData,\n        rowIndex: index,\n        isCtrlPressed: this.isMultiCtrlRequest,\n        isShiftPressed: this.isMultiShiftRequest,\n        row: selectedRow,\n        previousRow: gObj.getRowByIndex(this.prevRowIndex),\n        previousRowIndex: this.prevRowIndex,\n        target: this.actualTarget,\n        cancel: false,\n        isInteracted: this.isInteracted,\n        isHeaderCheckboxClicked: this.isHeaderCheckboxClicked\n      };\n      args = this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n      this.parent.trigger(events.rowSelecting, this.fDataUpdate(args), this.rowSelectingCallBack(args, isToggle, index, selectData, isRemoved, isRowSelected, can));\n    } else {\n      this.rowSelectingCallBack(args, isToggle, index, selectData, isRemoved, isRowSelected, can)(args);\n    }\n  };\n\n  Selection.prototype.rowSelectingCallBack = function (args, isToggle, index, selectData, isRemoved, isRowSelected, can) {\n    var _this = this;\n\n    return function (args) {\n      if (!isNullOrUndefined(args) && args[can] === true) {\n        _this.disableInteracted();\n\n        return;\n      }\n\n      _this.index = index;\n      _this.toggle = isToggle;\n      _this.data = selectData;\n      _this.removed = isRemoved;\n\n      if (isRowSelected && _this.selectionSettings.persistSelection && !(_this.selectionSettings.checkboxMode === 'ResetOnRowClick')) {\n        _this.clearSelectedRow(index);\n\n        _this.selectRowCallBack();\n      } else if (!isRowSelected && _this.selectionSettings.persistSelection && _this.selectionSettings.checkboxMode !== 'ResetOnRowClick') {\n        _this.selectRowCallBack();\n      }\n\n      if (_this.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n        _this.clearSelection();\n      }\n\n      if (!_this.selectionSettings.persistSelection || _this.selectionSettings.checkboxMode === 'ResetOnRowClick' || !_this.parent.isCheckBoxSelection && _this.selectionSettings.persistSelection) {\n        _this.selectRowCheck = true;\n\n        _this.clearRow();\n      }\n    };\n  };\n\n  Selection.prototype.selectRowCallBack = function () {\n    var gObj = this.parent;\n    var args;\n    var index = this.index;\n    var isToggle = this.toggle;\n    var selectData = this.data;\n    var isRemoved = this.removed;\n    var selectedRow = gObj.getRowByIndex(index);\n    var selectedMovableRow = this.getSelectedMovableRow(index);\n    var selectedFrozenRightRow = this.getSelectedFrozenRightRow(index);\n\n    if (!isToggle && !isRemoved) {\n      if (this.selectedRowIndexes.indexOf(index) <= -1) {\n        this.updateRowSelection(selectedRow, index);\n        this.selectMovableRow(selectedMovableRow, selectedFrozenRightRow, index);\n      }\n\n      this.selectRowIndex(index);\n    }\n\n    if (!isToggle) {\n      args = {\n        data: selectData,\n        rowIndex: index,\n        row: selectedRow,\n        previousRow: gObj.getRowByIndex(this.prevRowIndex),\n        previousRowIndex: this.prevRowIndex,\n        target: this.actualTarget,\n        isInteracted: this.isInteracted,\n        isHeaderCheckBoxClicked: this.isHeaderCheckboxClicked\n      };\n      args = this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n      this.onActionComplete(args, events.rowSelected);\n    }\n\n    this.isInteracted = false;\n    this.updateRowProps(index);\n  };\n\n  Selection.prototype.selectMovableRow = function (selectedMovableRow, selectedFrozenRightRow, index) {\n    if (this.parent.isFrozenGrid()) {\n      this.updateRowSelection(selectedMovableRow, index);\n\n      if (this.parent.getFrozenMode() === literals.leftRight && selectedFrozenRightRow) {\n        this.updateRowSelection(selectedFrozenRightRow, index);\n      }\n    }\n  };\n\n  Selection.prototype.addMovableArgs = function (targetObj, mRow, frRow) {\n    if (this.parent.isFrozenGrid()) {\n      var mObj = {\n        mRow: mRow,\n        previousMovRow: this.parent.getMovableRows()[this.prevRowIndex]\n      };\n      var frozenRightRow = 'frozenRightRow';\n      var previousFrozenRightRow = 'previousFrozenRightRow';\n\n      if (this.parent.getFrozenMode() === literals.leftRight && frRow) {\n        mObj[frozenRightRow] = frRow;\n        mObj[previousFrozenRightRow] = this.parent.getFrozenRightDataRows()[this.prevRowIndex];\n      }\n\n      targetObj = __assign({}, targetObj, mObj);\n    }\n\n    return targetObj;\n  };\n  /**\n   * Selects a range of rows from start and end row indexes.\n   *\n   * @param  {number} startIndex - Specifies the start row index.\n   * @param  {number} endIndex - Specifies the end row index.\n   * @returns {void}\n   */\n\n\n  Selection.prototype.selectRowsByRange = function (startIndex, endIndex) {\n    this.selectRows(this.getCollectionFromIndexes(startIndex, endIndex));\n    this.selectRowIndex(endIndex);\n  };\n  /**\n   * Selects a collection of rows by index.\n   *\n   * @param  {number[]} rowIndexes - Specifies an array of row indexes.\n   * @returns {void}\n   */\n\n\n  Selection.prototype.selectRows = function (rowIndexes) {\n    var _this = this;\n\n    var gObj = this.parent;\n    var rowIndex = !this.isSingleSel() ? rowIndexes[0] : rowIndexes[rowIndexes.length - 1];\n    this.isMultiSelection = true;\n    var selectedRows = [];\n    var foreignKeyData = [];\n    var selectedMovableRow = this.getSelectedMovableRow(rowIndex);\n    var selectedFrozenRightRow = this.getSelectedFrozenRightRow(rowIndex);\n    var can = 'cancel';\n    var selectedData = [];\n\n    if (!this.isRowType() || this.isEditing()) {\n      return;\n    }\n\n    for (var i = 0, len = rowIndexes.length; i < len; i++) {\n      var currentRow = this.parent.getDataRows()[rowIndexes[i]];\n      var rowObj = this.getRowObj(currentRow);\n\n      if (rowObj) {\n        selectedData.push(rowObj.data);\n        selectedRows.push(currentRow);\n        foreignKeyData.push(rowObj.foreignKeyData);\n      }\n    }\n\n    var isHybrid = 'isHybrid';\n    this.activeTarget();\n    var args;\n\n    if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n      args = {\n        cancel: false,\n        rowIndexes: rowIndexes,\n        row: selectedRows,\n        rowIndex: rowIndex,\n        target: this.actualTarget,\n        prevRow: gObj.getRows()[this.prevRowIndex],\n        previousRowIndex: this.prevRowIndex,\n        isInteracted: this.isInteracted,\n        isCtrlPressed: this.isMultiCtrlRequest,\n        isShiftPressed: this.isMultiShiftRequest,\n        data: selectedData,\n        isHeaderCheckboxClicked: this.isHeaderCheckboxClicked,\n        foreignKeyData: foreignKeyData\n      };\n      args = this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n    } else {\n      args = {\n        cancel: false,\n        rowIndexes: rowIndexes,\n        rowIndex: rowIndex,\n        previousRowIndex: this.prevRowIndex,\n        isCtrlPressed: this.isMultiCtrlRequest,\n        isShiftPressed: this.isMultiShiftRequest,\n        data: selectedData,\n        isHeaderCheckboxClicked: this.isHeaderCheckboxClicked,\n        foreignKeyData: foreignKeyData\n      };\n    }\n\n    this.parent.trigger(events.rowSelecting, this.fDataUpdate(args), function (args) {\n      if (!isNullOrUndefined(args) && args[can] === true) {\n        _this.disableInteracted();\n\n        return;\n      }\n\n      _this.clearRow();\n\n      _this.selectRowIndex(rowIndexes.slice(-1)[0]);\n\n      var selectRowFn = function (index) {\n        _this.updateRowSelection(gObj.getRowByIndex(index), index);\n\n        if (gObj.isFrozenGrid()) {\n          var rightEle = _this.parent.getFrozenMode() === literals.leftRight ? gObj.getFrozenRightRowByIndex(index) : undefined;\n\n          _this.selectMovableRow(gObj.getMovableRowByIndex(index), rightEle, index);\n        }\n\n        _this.updateRowProps(rowIndex);\n      };\n\n      if (!_this.isSingleSel()) {\n        for (var _i = 0, rowIndexes_1 = rowIndexes; _i < rowIndexes_1.length; _i++) {\n          var rowIdx = rowIndexes_1[_i];\n          selectRowFn(rowIdx);\n        }\n      } else {\n        selectRowFn(rowIndex);\n      }\n\n      var isHybrid = 'isHybrid';\n\n      if (!isBlazor() || _this.parent.isJsComponent || _this.parent[isHybrid]) {\n        args = {\n          rowIndexes: rowIndexes,\n          row: selectedRows,\n          rowIndex: rowIndex,\n          target: _this.actualTarget,\n          prevRow: gObj.getRows()[_this.prevRowIndex],\n          previousRowIndex: _this.prevRowIndex,\n          data: _this.getSelectedRecords(),\n          isInteracted: _this.isInteracted,\n          isHeaderCheckboxClicked: _this.isHeaderCheckboxClicked,\n          foreignKeyData: foreignKeyData\n        };\n        args = _this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n      } else {\n        args = {\n          rowIndexes: rowIndexes,\n          rowIndex: rowIndex,\n          previousRowIndex: _this.prevRowIndex,\n          row: selectedRows,\n          prevRow: gObj.getRows()[_this.prevRowIndex],\n          data: _this.getSelectedRecords(),\n          isInteracted: _this.isInteracted,\n          isHeaderCheckboxClicked: _this.isHeaderCheckboxClicked,\n          foreignKeyData: foreignKeyData\n        };\n      }\n\n      if (_this.isRowSelected) {\n        _this.onActionComplete(args, events.rowSelected);\n      }\n\n      _this.isInteracted = false;\n    });\n  };\n  /**\n   * Select rows with existing row selection by passing row indexes.\n   *\n   * @param {number} rowIndexes - Specifies the row indexes.\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.addRowsToSelection = function (rowIndexes) {\n    var gObj = this.parent;\n    var can = 'cancel';\n    var target = this.target;\n    this.isMultiSelection = true;\n    var indexes = gObj.getSelectedRowIndexes().concat(rowIndexes);\n    var selectedRow = !this.isSingleSel() ? gObj.getRowByIndex(rowIndexes[0]) : gObj.getRowByIndex(rowIndexes[rowIndexes.length - 1]);\n    var selectedMovableRow = !this.isSingleSel() ? this.getSelectedMovableRow(rowIndexes[0]) : this.getSelectedMovableRow(rowIndexes[rowIndexes.length - 1]);\n    var selectedFrozenRightRow = !this.isSingleSel() ? this.getSelectedFrozenRightRow(rowIndexes[0]) : this.getSelectedFrozenRightRow(rowIndexes[rowIndexes.length - 1]);\n\n    if ((!this.isRowType() || this.isEditing()) && !this.selectionSettings.checkboxOnly) {\n      return;\n    }\n\n    var args;\n    var checkboxColumn = this.parent.getColumns().filter(function (col) {\n      return col.type === 'checkbox';\n    });\n\n    for (var _i = 0, rowIndexes_2 = rowIndexes; _i < rowIndexes_2.length; _i++) {\n      var rowIndex = rowIndexes_2[_i];\n      var rowObj = this.getRowObj(rowIndex);\n      var isUnSelected = this.selectedRowIndexes.indexOf(rowIndex) > -1;\n      this.selectRowIndex(rowIndex);\n\n      if (isUnSelected && ((checkboxColumn.length ? true : this.selectionSettings.enableToggle) || this.isMultiCtrlRequest)) {\n        this.isAddRowsToSelection = true;\n        this.rowDeselect(events.rowDeselecting, [rowIndex], [rowObj.data], [selectedRow], [rowObj.foreignKeyData], target);\n\n        if (this.isCancelDeSelect) {\n          return;\n        }\n\n        this.selectedRowIndexes.splice(this.selectedRowIndexes.indexOf(rowIndex), 1);\n        this.selectedRecords.splice(this.selectedRecords.indexOf(selectedRow), 1);\n        this.selectRowIndex(this.selectedRowIndexes.length ? this.selectedRowIndexes[this.selectedRowIndexes.length - 1] : -1);\n        selectedRow.removeAttribute('aria-selected');\n        this.addRemoveClassesForRow(selectedRow, false, null, 'e-selectionbackground', 'e-active');\n\n        if (selectedMovableRow) {\n          this.selectedRecords.splice(this.selectedRecords.indexOf(selectedMovableRow), 1);\n          selectedMovableRow.removeAttribute('aria-selected');\n          this.addRemoveClassesForRow(selectedMovableRow, false, null, 'e-selectionbackground', 'e-active');\n        }\n\n        if (selectedFrozenRightRow) {\n          this.selectedRecords.splice(this.selectedRecords.indexOf(selectedFrozenRightRow), 1);\n          selectedFrozenRightRow.removeAttribute('aria-selected');\n          this.addRemoveClassesForRow(selectedFrozenRightRow, false, null, 'e-selectionbackground', 'e-active');\n        }\n\n        this.rowDeselect(events.rowDeselected, [rowIndex], [rowObj.data], [selectedRow], [rowObj.foreignKeyData], target, [selectedMovableRow], undefined, [selectedFrozenRightRow]);\n        this.isInteracted = false;\n        this.isMultiSelection = false;\n        this.isAddRowsToSelection = false;\n      } else {\n        var isHybrid = 'isHybrid';\n        this.activeTarget();\n\n        if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n          args = {\n            cancel: false,\n            data: rowObj.data,\n            rowIndex: rowIndex,\n            row: selectedRow,\n            target: this.actualTarget,\n            prevRow: gObj.getRows()[this.prevRowIndex],\n            previousRowIndex: this.prevRowIndex,\n            isCtrlPressed: this.isMultiCtrlRequest,\n            isShiftPressed: this.isMultiShiftRequest,\n            foreignKeyData: rowObj.foreignKeyData,\n            isInteracted: this.isInteracted,\n            isHeaderCheckboxClicked: this.isHeaderCheckboxClicked,\n            rowIndexes: indexes\n          };\n          args = this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n        } else {\n          args = {\n            cancel: false,\n            data: rowObj.data,\n            rowIndex: rowIndex,\n            previousRowIndex: this.prevRowIndex,\n            isCtrlPressed: this.isMultiCtrlRequest,\n            isShiftPressed: this.isMultiShiftRequest,\n            foreignKeyData: rowObj.foreignKeyData,\n            isInteracted: this.isInteracted,\n            isHeaderCheckboxClicked: this.isHeaderCheckboxClicked,\n            rowIndexes: indexes\n          };\n        }\n\n        this.parent.trigger(events.rowSelecting, this.fDataUpdate(args));\n\n        if (!isNullOrUndefined(args) && args[can] === true) {\n          this.disableInteracted();\n          return;\n        }\n\n        if (this.isSingleSel()) {\n          this.clearRow();\n        }\n\n        this.updateRowSelection(selectedRow, rowIndex);\n        this.selectMovableRow(selectedMovableRow, selectedFrozenRightRow, rowIndex);\n      }\n\n      if (!isUnSelected) {\n        var isHybrid = 'isHybrid';\n\n        if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n          args = {\n            data: rowObj.data,\n            rowIndex: rowIndex,\n            row: selectedRow,\n            target: this.actualTarget,\n            prevRow: gObj.getRows()[this.prevRowIndex],\n            previousRowIndex: this.prevRowIndex,\n            foreignKeyData: rowObj.foreignKeyData,\n            isInteracted: this.isInteracted,\n            isHeaderCheckboxClicked: this.isHeaderCheckboxClicked,\n            rowIndexes: indexes\n          };\n          args = this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n        } else {\n          args = {\n            data: rowObj.data,\n            rowIndex: rowIndex,\n            previousRowIndex: this.prevRowIndex,\n            row: selectedRow,\n            prevRow: gObj.getRows()[this.prevRowIndex],\n            foreignKeyData: rowObj.foreignKeyData,\n            isInteracted: this.isInteracted,\n            isHeaderCheckboxClicked: this.isHeaderCheckboxClicked,\n            rowIndexes: indexes\n          };\n        }\n\n        this.onActionComplete(args, events.rowSelected);\n      }\n\n      this.isInteracted = false;\n      this.updateRowProps(rowIndex);\n\n      if (this.isSingleSel()) {\n        break;\n      }\n    }\n  };\n\n  Selection.prototype.getCollectionFromIndexes = function (startIndex, endIndex) {\n    var indexes = []; // eslint-disable-next-line prefer-const\n\n    var _a = startIndex <= endIndex ? {\n      i: startIndex,\n      max: endIndex\n    } : {\n      i: endIndex,\n      max: startIndex\n    },\n        i = _a.i,\n        max = _a.max;\n\n    for (; i <= max; i++) {\n      indexes.push(i);\n    }\n\n    if (startIndex > endIndex) {\n      indexes.reverse();\n    }\n\n    return indexes;\n  };\n\n  Selection.prototype.clearRow = function () {\n    this.clearRowCheck = true;\n    this.clearRowSelection();\n  };\n\n  Selection.prototype.clearRowCallBack = function () {\n    if (this.isCancelDeSelect && this.parent.checkAllRows !== 'Check') {\n      return;\n    }\n\n    this.selectedRowIndexes = [];\n    this.selectedRecords = [];\n    this.selectRowIndex(-1);\n\n    if (this.isSingleSel() && this.parent.isPersistSelection) {\n      this.selectedRowState = {};\n    }\n  };\n\n  Selection.prototype.clearSelectedRow = function (index) {\n    if (this.toggle) {\n      var selectedEle = this.parent.getRowByIndex(index);\n\n      if (!this.disableUI) {\n        selectedEle.removeAttribute('aria-selected');\n        this.addRemoveClassesForRow(selectedEle, false, true, 'e-selectionbackground', 'e-active');\n      }\n\n      this.removed = true;\n      this.updatePersistCollection(selectedEle, false);\n      this.updateCheckBoxes(selectedEle);\n      this.selectedRowIndexes.splice(this.selectedRowIndexes.indexOf(index), 1);\n      this.selectedRecords.splice(this.selectedRecords.indexOf(this.parent.getRowByIndex(index)), 1);\n    }\n  };\n\n  Selection.prototype.updateRowProps = function (startIndex) {\n    this.prevRowIndex = startIndex;\n    this.isRowSelected = this.selectedRowIndexes.length && true;\n  };\n\n  Selection.prototype.updatePersistCollection = function (selectedRow, chkState) {\n    var _this = this;\n\n    if ((this.parent.isPersistSelection || this.parent.selectionSettings.persistSelection && this.parent.getPrimaryKeyFieldNames().length > 0) && !isNullOrUndefined(selectedRow)) {\n      if (!this.parent.isPersistSelection) {\n        this.ensureCheckboxFieldSelection();\n      }\n\n      var rowObj = this.getRowObj(selectedRow);\n      var pKey_1 = rowObj.data ? rowObj.data[this.primaryKey] : null;\n\n      if (pKey_1 === null) {\n        return;\n      }\n\n      rowObj.isSelected = chkState;\n\n      if (chkState) {\n        this.selectedRowState[pKey_1] = chkState;\n\n        if (!this.persistSelectedData.some(function (data) {\n          return data[_this.primaryKey] === pKey_1;\n        })) {\n          this.persistSelectedData.push(rowObj.data);\n        }\n      } else {\n        this.updatePersistDelete(pKey_1);\n      }\n    }\n  };\n\n  Selection.prototype.updatePersistDelete = function (pKey) {\n    var _this = this;\n\n    delete this.selectedRowState[pKey];\n    var index;\n    var isPresent = this.persistSelectedData.some(function (data, i) {\n      index = i;\n      return data[_this.primaryKey] === pKey;\n    });\n\n    if (isPresent) {\n      this.persistSelectedData.splice(index, 1);\n    }\n  };\n\n  Selection.prototype.updateCheckBoxes = function (row, chkState, rowIndex) {\n    if (!isNullOrUndefined(row)) {\n      var chkBox = row.querySelector('.e-checkselect');\n\n      if (!isNullOrUndefined(chkBox)) {\n        removeAddCboxClasses(chkBox.nextElementSibling, chkState);\n        setChecked(chkBox, chkState);\n\n        if (isNullOrUndefined(this.checkedTarget) || !isNullOrUndefined(this.checkedTarget) && !this.checkedTarget.classList.contains('e-checkselectall')) {\n          this.setCheckAllState(rowIndex);\n        }\n      }\n    }\n  };\n\n  Selection.prototype.updateRowSelection = function (selectedRow, startIndex) {\n    if (!selectedRow) {\n      return;\n    }\n\n    this.selectedRowIndexes.push(startIndex);\n    var len = this.selectedRowIndexes.length;\n\n    if (this.parent.isFrozenGrid() && len > 1) {\n      if (this.selectedRowIndexes[len - 2] === this.selectedRowIndexes[len - 1]) {\n        this.selectedRowIndexes.pop();\n      }\n    }\n\n    this.selectedRecords.push(selectedRow);\n    selectedRow.setAttribute('aria-selected', 'true');\n    this.updatePersistCollection(selectedRow, true);\n    this.updateCheckBoxes(selectedRow, true);\n    this.addRemoveClassesForRow(selectedRow, true, null, 'e-selectionbackground', 'e-active');\n\n    if (!this.preventFocus) {\n      var target = this.focus.getPrevIndexes().cellIndex ? selectedRow.cells[this.focus.getPrevIndexes().cellIndex] : selectedRow.querySelector('.e-selectionbackground:not(.e-hide):not(.e-detailrowcollapse):not(.e-detailrowexpand)');\n\n      if (this.parent.contextMenuModule && this.mouseButton === 2) {\n        target = this.parent.contextMenuModule.cell;\n      }\n\n      if (!target) {\n        return;\n      }\n\n      this.focus.onClick({\n        target: target\n      }, true);\n    }\n  };\n  /**\n   * Deselects the currently selected rows and cells.\n   *\n   * @returns {void}\n   */\n\n\n  Selection.prototype.clearSelection = function () {\n    if (this.selectionSettings.persistSelection && this.persistSelectedData.length) {\n      this.deSelectedData = iterateExtend(this.persistSelectedData);\n    }\n\n    if (!this.parent.isPersistSelection || this.parent.isPersistSelection && !this.parent.isEdit || !isNullOrUndefined(this.checkedTarget) && this.checkedTarget.classList.contains('e-checkselectall')) {\n      var span = this.parent.element.querySelector('.e-gridpopup').querySelector('span');\n\n      if (span.classList.contains('e-rowselect')) {\n        span.classList.remove('e-spanclicked');\n      }\n\n      if (this.parent.isPersistSelection) {\n        this.persistSelectedData = [];\n        this.selectedRowState = {};\n      }\n\n      this.clearRowSelection();\n      this.clearCellSelection();\n      this.clearColumnSelection();\n      this.prevRowIndex = undefined;\n      this.enableSelectMultiTouch = false;\n      this.isInteracted = false;\n    }\n  };\n  /**\n   * Deselects the currently selected rows.\n   *\n   * @returns {void}\n   */\n\n\n  Selection.prototype.clearRowSelection = function () {\n    var _this = this;\n\n    if (this.isRowSelected) {\n      var gObj = this.parent;\n      var rows_1 = this.parent.getDataRows();\n      var data_1 = [];\n      var row_1 = [];\n      var mRow_1 = [];\n      var fRightRow_1 = [];\n      var rowIndex_1 = [];\n      var foreignKeyData_1 = [];\n      var target_1 = this.target;\n\n      for (var i = 0, len = this.selectedRowIndexes.length; i < len; i++) {\n        var currentRow = this.parent.editSettings.mode === 'Batch' ? this.parent.getRows()[this.selectedRowIndexes[i]] : this.parent.getDataRows()[this.selectedRowIndexes[i]];\n        var rowObj = this.getRowObj(currentRow);\n\n        if (rowObj) {\n          data_1.push(rowObj.data);\n          row_1.push(currentRow);\n          rowIndex_1.push(this.selectedRowIndexes[i]);\n          foreignKeyData_1.push(rowObj.foreignKeyData);\n        }\n\n        if (gObj.isFrozenGrid()) {\n          mRow_1.push(gObj.getMovableRows()[this.selectedRowIndexes[i]]);\n\n          if (gObj.getFrozenMode() === literals.leftRight) {\n            fRightRow_1.push(gObj.getFrozenRightRows()[this.selectedRowIndexes[i]]);\n          }\n        }\n      }\n\n      if (this.selectionSettings.persistSelection && this.selectionSettings.checkboxMode !== 'ResetOnRowClick') {\n        this.isRowClicked = this.checkSelectAllClicked ? true : false;\n      }\n\n      this.rowDeselect(events.rowDeselecting, rowIndex_1, data_1, row_1, foreignKeyData_1, target_1, mRow_1, function () {\n        if (_this.isCancelDeSelect && (_this.isRowClicked || _this.checkSelectAllClicked || _this.isInteracted && !_this.parent.isPersistSelection)) {\n          if (_this.parent.isPersistSelection) {\n            if (_this.getCheckAllStatus(_this.parent.element.querySelector('.e-checkselectall')) === 'Intermediate') {\n              for (var i = 0; i < _this.selectedRecords.length; i++) {\n                _this.updatePersistCollection(_this.selectedRecords[i], true);\n              }\n            } else {\n              _this.parent.checkAllRows = 'Check';\n\n              _this.updatePersistSelectedData(true);\n            }\n          }\n\n          if (_this.clearRowCheck) {\n            _this.clearRowCallBack();\n\n            _this.clearRowCheck = false;\n\n            if (_this.selectRowCheck) {\n              _this.selectRowCallBack();\n\n              _this.selectRowCheck = false;\n            }\n          }\n\n          return;\n        }\n\n        var element = [].slice.call(rows_1.filter(function (record) {\n          return record.hasAttribute('aria-selected');\n        }));\n\n        for (var j = 0; j < element.length; j++) {\n          if (!_this.disableUI || isBlazor()) {\n            element[j].removeAttribute('aria-selected');\n\n            _this.addRemoveClassesForRow(element[j], false, true, 'e-selectionbackground', 'e-active');\n          } // tslint:disable-next-line:align\n\n\n          if (!_this.isPrevRowSelection) {\n            _this.updatePersistCollection(element[j], false);\n          }\n\n          _this.updateCheckBoxes(element[j]);\n        }\n\n        for (var i = 0, len = _this.selectedRowIndexes.length; i < len; i++) {\n          var movableRow = _this.getSelectedMovableRow(_this.selectedRowIndexes[i]);\n\n          if (movableRow) {\n            if (!_this.disableUI || isBlazor()) {\n              movableRow.removeAttribute('aria-selected');\n\n              _this.addRemoveClassesForRow(movableRow, false, true, 'e-selectionbackground', 'e-active');\n            }\n\n            _this.updateCheckBoxes(movableRow);\n\n            if (!_this.isPrevRowSelection) {\n              _this.updatePersistCollection(movableRow, false);\n            }\n          }\n\n          var frRow = _this.getSelectedFrozenRightRow(_this.selectedRowIndexes[i]);\n\n          if (frRow) {\n            if (!_this.disableUI) {\n              frRow.removeAttribute('aria-selected');\n\n              _this.addRemoveClassesForRow(frRow, false, true, 'e-selectionbackground', 'e-active');\n            }\n\n            _this.updateCheckBoxes(frRow);\n\n            if (!_this.isPrevRowSelection) {\n              _this.updatePersistCollection(frRow, false);\n            }\n          }\n        }\n\n        _this.selectedRowIndexes = [];\n        _this.selectedRecords = [];\n        _this.isRowSelected = false;\n\n        _this.selectRowIndex(-1);\n\n        _this.isPrevRowSelection = false;\n\n        _this.rowDeselect(events.rowDeselected, rowIndex_1, data_1, row_1, foreignKeyData_1, target_1, mRow_1, undefined, fRightRow_1);\n\n        if (_this.clearRowCheck) {\n          _this.clearRowCallBack();\n\n          _this.clearRowCheck = false;\n\n          if (_this.selectRowCheck) {\n            _this.selectRowCallBack();\n\n            _this.selectRowCheck = false;\n          }\n        }\n      }, fRightRow_1);\n    } else {\n      if (this.clearRowCheck) {\n        this.clearRowCallBack();\n        this.clearRowCheck = false;\n\n        if (this.selectRowCheck) {\n          this.selectRowCallBack();\n          this.selectRowCheck = false;\n        }\n      }\n    }\n  };\n\n  Selection.prototype.rowDeselect = function (type, rowIndex, data, row, foreignKeyData, target, mRow, rowDeselectCallBack, frozenRightRow) {\n    var _this = this;\n\n    if (this.selectionSettings.persistSelection && (this.isRowClicked || this.checkSelectAllClicked) || !this.selectionSettings.persistSelection) {\n      var cancl_1 = 'cancel';\n      var isSingleDeSel = rowIndex.length === 1 && this.deSelectedData.length === 1;\n      var rowDeselectObj = {\n        rowIndex: rowIndex[0],\n        data: this.selectionSettings.persistSelection && this.parent.checkAllRows === 'Uncheck' && !isSingleDeSel && this.selectionSettings.checkboxMode !== 'ResetOnRowClick' ? this.deSelectedData : data,\n        foreignKeyData: foreignKeyData,\n        cancel: false,\n        isInteracted: this.isInteracted,\n        isHeaderCheckboxClicked: this.isHeaderCheckboxClicked\n      };\n\n      if (type === 'rowDeselected') {\n        delete rowDeselectObj.cancel;\n      }\n\n      var isHybrid = 'isHybrid';\n\n      if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n        var rowInString = 'row';\n        var target_2 = 'target';\n        var rowidx = 'rowIndex';\n        var rowidxex = 'rowIndexes';\n        var data_2 = 'data';\n        var foreignKey = 'foreignKeyData';\n        rowDeselectObj[rowInString] = row;\n        rowDeselectObj[target_2] = this.actualTarget;\n        var isHeaderCheckBxClick = this.actualTarget && !isNullOrUndefined(closest(this.actualTarget, 'thead'));\n\n        if (isHeaderCheckBxClick || rowIndex.length > 1) {\n          rowDeselectObj[rowidx] = rowIndex[0];\n          rowDeselectObj[rowidxex] = rowIndex;\n        } else if (rowIndex.length === 1) {\n          rowDeselectObj[data_2] = rowDeselectObj[data_2][0];\n          rowDeselectObj[rowInString] = rowDeselectObj[rowInString][0];\n          rowDeselectObj[foreignKey] = rowDeselectObj[foreignKey][0];\n\n          if (this.isAddRowsToSelection) {\n            rowDeselectObj[rowidxex] = rowIndex;\n          }\n        }\n      } else {\n        var rowIndex_2 = 'rowIndex';\n        var data_3 = 'data';\n        rowDeselectObj[rowIndex_2] = rowDeselectObj[rowIndex_2][rowDeselectObj[rowIndex_2].length - 1];\n        rowDeselectObj[data_3] = rowDeselectObj[data_3][rowDeselectObj[data_3].length - 1];\n      }\n\n      this.parent.trigger(type, (!isBlazor() || this.parent.isJsComponent) && this.parent.isFrozenGrid() ? __assign({}, rowDeselectObj, {\n        mRow: mRow,\n        frozenRightRow: frozenRightRow\n      }) : rowDeselectObj, function (args) {\n        _this.isCancelDeSelect = args[cancl_1];\n\n        if (!_this.isCancelDeSelect || !_this.isRowClicked && !_this.isInteracted && !_this.checkSelectAllClicked) {\n          _this.updatePersistCollection(row[0], false);\n\n          _this.updateCheckBoxes(row[0], undefined, rowIndex[0]);\n\n          if (mRow) {\n            _this.updateCheckBoxes(mRow[0], undefined, rowIndex[0]);\n          }\n\n          if (frozenRightRow) {\n            _this.updateCheckBoxes(frozenRightRow[0], undefined, rowIndex[0]);\n          }\n        }\n\n        if (rowDeselectCallBack !== undefined) {\n          rowDeselectCallBack();\n        }\n      });\n    } else if (this.selectionSettings.persistSelection && !this.isInteracted) {\n      if (rowDeselectCallBack !== undefined) {\n        rowDeselectCallBack();\n      }\n    }\n  };\n\n  Selection.prototype.getRowObj = function (row) {\n    if (row === void 0) {\n      row = this.currentIndex;\n    }\n\n    if (isNullOrUndefined(row)) {\n      return {};\n    }\n\n    if (typeof row === 'number') {\n      row = this.parent.getRowByIndex(row);\n    }\n\n    if (row) {\n      return this.parent.getRowObjectFromUID(row.getAttribute('data-uid')) || {};\n    }\n\n    return {};\n  };\n\n  Selection.prototype.getSelectedMovableCell = function (cellIndex) {\n    var gObj = this.parent;\n    var col = gObj.getColumnByIndex(cellIndex.cellIndex);\n    var frzCols = gObj.isFrozenGrid();\n\n    if (frzCols) {\n      if (col.getFreezeTableName() === 'movable') {\n        return gObj.getMovableCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n      }\n\n      return null;\n    }\n\n    return null;\n  };\n  /**\n   * Selects a cell by the given index.\n   *\n   * @param  {IIndex} cellIndex - Defines the row and column indexes.\n   * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n   * @returns {void}\n   */\n\n\n  Selection.prototype.selectCell = function (cellIndex, isToggle) {\n    if (!this.isCellType()) {\n      return;\n    }\n\n    var gObj = this.parent;\n    var selectedCell = this.getSelectedMovableCell(cellIndex);\n    var args;\n\n    if (!selectedCell) {\n      selectedCell = gObj.getCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n    }\n\n    this.currentIndex = cellIndex.rowIndex;\n    var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n\n    if (!this.isCellType() || !selectedCell || this.isEditing()) {\n      return;\n    }\n\n    var isCellSelected = selectedCell.classList.contains('e-cellselectionbackground');\n    isToggle = !isToggle ? isToggle : !isUndefined(this.prevCIdxs) && cellIndex.rowIndex === this.prevCIdxs.rowIndex && cellIndex.cellIndex === this.prevCIdxs.cellIndex && isCellSelected;\n\n    if (!isToggle) {\n      args = {\n        data: selectedData,\n        cellIndex: cellIndex,\n        isCtrlPressed: this.isMultiCtrlRequest,\n        isShiftPressed: this.isMultiShiftRequest,\n        previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined,\n        cancel: false\n      };\n\n      if (!isBlazor() || this.parent.isJsComponent) {\n        var currentCell = 'currentCell';\n        args[currentCell] = selectedCell;\n        var previousRowCellIndex = 'previousRowCellIndex';\n        args[previousRowCellIndex] = this.prevECIdxs;\n      }\n\n      this.parent.trigger(events.cellSelecting, this.fDataUpdate(args), this.successCallBack(args, isToggle, cellIndex, selectedCell, selectedData));\n      this.cellselected = true;\n    } else {\n      this.successCallBack(args, isToggle, cellIndex, selectedCell, selectedData)(args);\n    }\n  };\n\n  Selection.prototype.successCallBack = function (cellSelectingArgs, isToggle, cellIndex, selectedCell, selectedData) {\n    var _this = this;\n\n    return function (cellSelectingArgs) {\n      var cncl = 'cancel';\n      var currentCell = 'currentCell';\n\n      if (!isNullOrUndefined(cellSelectingArgs) && cellSelectingArgs[cncl] === true) {\n        return;\n      }\n\n      if (!isToggle) {\n        cellSelectingArgs[currentCell] = cellSelectingArgs[currentCell] ? cellSelectingArgs[currentCell] : selectedCell;\n      }\n\n      _this.clearCell();\n\n      if (!isToggle) {\n        _this.updateCellSelection(selectedCell, cellIndex.rowIndex, cellIndex.cellIndex);\n      }\n\n      if (!isToggle) {\n        var args = void 0;\n        var isHybrid = 'isHybrid';\n\n        if (!isBlazor() || _this.parent.isJsComponent || _this.parent[isHybrid]) {\n          args = {\n            data: selectedData,\n            cellIndex: cellIndex,\n            currentCell: selectedCell,\n            selectedRowCellIndex: _this.selectedRowCellIndexes,\n            previousRowCell: _this.prevECIdxs ? _this.getCellIndex(_this.prevECIdxs.rowIndex, _this.prevECIdxs.cellIndex) : undefined\n          };\n          var previousRowCellIndex = 'previousRowCellIndex';\n          args[previousRowCellIndex] = _this.prevECIdxs;\n        } else {\n          args = {\n            data: selectedData,\n            cellIndex: cellIndex,\n            selectedRowCellIndex: _this.selectedRowCellIndexes\n          };\n        }\n\n        _this.updateCellProps(cellIndex, cellIndex);\n\n        _this.onActionComplete(args, events.cellSelected);\n      }\n    };\n  };\n\n  Selection.prototype.getCellIndex = function (rIdx, cIdx) {\n    return this.parent.getFrozenColumns() ? cIdx >= this.parent.getFrozenColumns() ? this.parent.getMovableCellFromIndex(rIdx, cIdx) : this.parent.getCellFromIndex(rIdx, cIdx) : this.parent.getCellFromIndex(rIdx, cIdx);\n  };\n  /**\n   * Selects a range of cells from start and end indexes.\n   *\n   * @param  {IIndex} startIndex - Specifies the row and column's start index.\n   * @param  {IIndex} endIndex - Specifies the row and column's end index.\n   * @returns {void}\n   */\n\n\n  Selection.prototype.selectCellsByRange = function (startIndex, endIndex) {\n    var _this = this;\n\n    if (!this.isCellType()) {\n      return;\n    }\n\n    var gObj = this.parent;\n    var selectedCell = this.getSelectedMovableCell(startIndex);\n    var frzCols = gObj.getFrozenColumns();\n\n    if (!selectedCell) {\n      selectedCell = gObj.getCellFromIndex(startIndex.rowIndex, startIndex.cellIndex);\n    }\n\n    var min;\n    var max;\n    var stIndex = startIndex;\n    var edIndex = endIndex = endIndex ? endIndex : startIndex;\n    var cellIndexes;\n    this.currentIndex = startIndex.rowIndex;\n    var cncl = 'cancel';\n    var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n\n    if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n      return;\n    }\n\n    var args = {\n      data: selectedData,\n      cellIndex: startIndex,\n      currentCell: selectedCell,\n      isCtrlPressed: this.isMultiCtrlRequest,\n      isShiftPressed: this.isMultiShiftRequest,\n      previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n    };\n\n    if (!isBlazor()) {\n      var previousRowCellIndex = 'previousRowCellIndex';\n      args[previousRowCellIndex] = this.prevECIdxs;\n    }\n\n    this.parent.trigger(events.cellSelecting, this.fDataUpdate(args), function (cellSelectingArgs) {\n      if (!isNullOrUndefined(cellSelectingArgs) && cellSelectingArgs[cncl] === true) {\n        return;\n      }\n\n      _this.clearCell();\n\n      if (startIndex.rowIndex > endIndex.rowIndex) {\n        var temp = startIndex;\n        startIndex = endIndex;\n        endIndex = temp;\n      }\n\n      for (var i = startIndex.rowIndex; i <= endIndex.rowIndex; i++) {\n        if (_this.selectionSettings.cellSelectionMode.indexOf('Box') < 0) {\n          min = i === startIndex.rowIndex ? startIndex.cellIndex : 0;\n          max = i === endIndex.rowIndex ? endIndex.cellIndex : _this.getLastColIndex(i);\n        } else {\n          min = startIndex.cellIndex;\n          max = endIndex.cellIndex;\n        }\n\n        cellIndexes = [];\n\n        for (var j = min < max ? min : max, len = min > max ? min : max; j <= len; j++) {\n          if (frzCols) {\n            if (j < frzCols) {\n              selectedCell = gObj.getCellFromIndex(i, j);\n            } else {\n              selectedCell = gObj.getMovableCellFromIndex(i, j);\n            }\n          } else {\n            selectedCell = gObj.getCellFromIndex(i, j);\n          }\n\n          if (!selectedCell) {\n            continue;\n          }\n\n          cellIndexes.push(j);\n\n          _this.updateCellSelection(selectedCell);\n\n          _this.addAttribute(selectedCell);\n        }\n\n        _this.selectedRowCellIndexes.push({\n          rowIndex: i,\n          cellIndexes: cellIndexes\n        });\n      }\n\n      var cellSelectedArgs;\n      var isHybrid = 'isHybrid';\n\n      if (!isBlazor() || _this.parent.isJsComponent || _this.parent[isHybrid]) {\n        cellSelectedArgs = {\n          data: selectedData,\n          cellIndex: edIndex,\n          currentCell: gObj.getCellFromIndex(edIndex.rowIndex, edIndex.cellIndex),\n          selectedRowCellIndex: _this.selectedRowCellIndexes,\n          previousRowCell: _this.prevECIdxs ? _this.getCellIndex(_this.prevECIdxs.rowIndex, _this.prevECIdxs.cellIndex) : undefined\n        };\n        var previousRowCellIndex = 'previousRowCellIndex';\n        cellSelectedArgs[previousRowCellIndex] = _this.prevECIdxs;\n      } else {\n        cellSelectedArgs = {\n          data: selectedData,\n          cellIndex: edIndex,\n          selectedRowCellIndex: _this.selectedRowCellIndexes\n        };\n      }\n\n      if (!_this.isDragged) {\n        _this.onActionComplete(cellSelectedArgs, events.cellSelected);\n\n        _this.cellselected = true;\n      }\n\n      _this.updateCellProps(stIndex, edIndex);\n    });\n  };\n  /**\n   * Selects a collection of cells by row and column indexes.\n   *\n   * @param  {ISelectedCell[]} rowCellIndexes - Specifies the row and column indexes.\n   * @returns {void}\n   */\n\n\n  Selection.prototype.selectCells = function (rowCellIndexes) {\n    if (!this.isCellType()) {\n      return;\n    }\n\n    var gObj = this.parent;\n    var selectedCell = this.getSelectedMovableCell(rowCellIndexes[0]);\n    var frzCols = gObj.getFrozenColumns();\n\n    if (!selectedCell) {\n      selectedCell = gObj.getCellFromIndex(rowCellIndexes[0].rowIndex, rowCellIndexes[0].cellIndexes[0]);\n    }\n\n    this.currentIndex = rowCellIndexes[0].rowIndex;\n    var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n\n    if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n      return;\n    }\n\n    var cellSelectArgs;\n    var isHybrid = 'isHybrid';\n\n    if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n      cellSelectArgs = {\n        data: selectedData,\n        cellIndex: rowCellIndexes[0].cellIndexes[0],\n        currentCell: selectedCell,\n        isCtrlPressed: this.isMultiCtrlRequest,\n        isShiftPressed: this.isMultiShiftRequest,\n        previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n      };\n      var previousRowCellIndex = 'previousRowCellIndex';\n      cellSelectArgs[previousRowCellIndex] = this.prevECIdxs;\n    } else {\n      cellSelectArgs = {\n        data: selectedData,\n        cellIndex: rowCellIndexes[0].cellIndexes[0],\n        isCtrlPressed: this.isMultiCtrlRequest,\n        isShiftPressed: this.isMultiShiftRequest\n      };\n    }\n\n    this.onActionBegin(cellSelectArgs, events.cellSelecting);\n\n    for (var i = 0, len = rowCellIndexes.length; i < len; i++) {\n      for (var j = 0, cellLen = rowCellIndexes[i].cellIndexes.length; j < cellLen; j++) {\n        if (frzCols) {\n          if (rowCellIndexes[i].cellIndexes[j] < frzCols) {\n            selectedCell = gObj.getCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);\n          } else {\n            selectedCell = gObj.getMovableCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);\n          }\n        } else {\n          selectedCell = gObj.getCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);\n        }\n\n        if (!selectedCell) {\n          continue;\n        }\n\n        this.updateCellSelection(selectedCell);\n        this.addAttribute(selectedCell);\n        this.addRowCellIndex({\n          rowIndex: rowCellIndexes[i].rowIndex,\n          cellIndex: rowCellIndexes[i].cellIndexes[j]\n        });\n      }\n    }\n\n    this.updateCellProps({\n      rowIndex: rowCellIndexes[0].rowIndex,\n      cellIndex: rowCellIndexes[0].cellIndexes[0]\n    }, {\n      rowIndex: rowCellIndexes[0].rowIndex,\n      cellIndex: rowCellIndexes[0].cellIndexes[0]\n    });\n    var cellSelectedArgs;\n\n    if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n      cellSelectedArgs = {\n        data: selectedData,\n        cellIndex: rowCellIndexes[0].cellIndexes[0],\n        currentCell: selectedCell,\n        selectedRowCellIndex: this.selectedRowCellIndexes,\n        previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n      };\n      var previousRowCellIndex = 'previousRowCellIndex';\n      cellSelectedArgs[previousRowCellIndex] = this.prevECIdxs;\n    } else {\n      cellSelectedArgs = {\n        data: selectedData,\n        cellIndex: rowCellIndexes[0].cellIndexes[0],\n        selectedRowCellIndex: this.selectedRowCellIndexes\n      };\n    }\n\n    this.onActionComplete(cellSelectedArgs, events.cellSelected);\n  };\n  /**\n   * Select cells with existing cell selection by passing row and column index.\n   *\n   * @param {IIndex} cellIndexes - Defines the collection of row and column index.\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.addCellsToSelection = function (cellIndexes) {\n    if (!this.isCellType()) {\n      return;\n    }\n\n    var gObj = this.parent;\n    var selectedCell;\n    var index;\n    this.currentIndex = cellIndexes[0].rowIndex;\n    var cncl = 'cancel';\n    var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n    var isHybrid = 'isHybrid';\n    var left = gObj.getFrozenLeftCount();\n    var movable = gObj.getMovableColumnsCount();\n\n    if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n      return;\n    }\n\n    this.hideAutoFill();\n    var col = gObj.getColumnByIndex(cellIndexes[0].cellIndex);\n    var rowObj;\n    gridActionHandler(this.parent, function (tableName, rows) {\n      rowObj = rows[cellIndexes[0].rowIndex];\n    }, [!col.getFreezeTableName() || col.getFreezeTableName() === literals.frozenLeft ? gObj.getRowsObject() : [], col.getFreezeTableName() === 'movable' ? gObj.getMovableRowsObject() : [], col.getFreezeTableName() === literals.frozenRight ? gObj.getFrozenRightRowsObject() : []]);\n    var foreignKeyData = [];\n\n    for (var _i = 0, cellIndexes_1 = cellIndexes; _i < cellIndexes_1.length; _i++) {\n      var cellIndex = cellIndexes_1[_i];\n\n      for (var i = 0, len = this.selectedRowCellIndexes.length; i < len; i++) {\n        if (this.selectedRowCellIndexes[i].rowIndex === cellIndex.rowIndex) {\n          index = i;\n          break;\n        }\n      }\n\n      selectedCell = this.getSelectedMovableCell(cellIndex);\n\n      if (!selectedCell) {\n        selectedCell = gObj.getCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n      }\n\n      var idx = col.getFreezeTableName() === 'movable' ? cellIndex.cellIndex - left : col.getFreezeTableName() === literals.frozenRight ? cellIndex.cellIndex - (left + movable) : cellIndex.cellIndex;\n      foreignKeyData.push(rowObj.cells[idx].foreignKeyData);\n      var args = void 0;\n\n      if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n        args = {\n          cancel: false,\n          data: selectedData,\n          cellIndex: cellIndexes[0],\n          isShiftPressed: this.isMultiShiftRequest,\n          currentCell: selectedCell,\n          isCtrlPressed: this.isMultiCtrlRequest,\n          previousRowCell: this.prevECIdxs ? gObj.getCellFromIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n        };\n        var previousRowCellIndex = 'previousRowCellIndex';\n        args[previousRowCellIndex] = this.prevECIdxs;\n      } else {\n        args = {\n          cancel: false,\n          data: selectedData,\n          cellIndex: cellIndexes[0],\n          isShiftPressed: this.isMultiShiftRequest,\n          isCtrlPressed: this.isMultiCtrlRequest\n        };\n      }\n\n      var isUnSelected = index > -1;\n\n      if (isUnSelected) {\n        var selectedCellIdx = this.selectedRowCellIndexes[index].cellIndexes;\n\n        if (selectedCellIdx.indexOf(cellIndex.cellIndex) > -1) {\n          this.cellDeselect(events.cellDeselecting, [{\n            rowIndex: cellIndex.rowIndex,\n            cellIndexes: [cellIndex.cellIndex]\n          }], selectedData, [selectedCell], foreignKeyData);\n          selectedCellIdx.splice(selectedCellIdx.indexOf(cellIndex.cellIndex), 1);\n\n          if (selectedCellIdx.length === 0) {\n            this.selectedRowCellIndexes.splice(index, 1);\n          }\n\n          selectedCell.classList.remove('e-cellselectionbackground');\n          selectedCell.removeAttribute('aria-selected');\n          this.cellDeselect(events.cellDeselected, [{\n            rowIndex: cellIndex.rowIndex,\n            cellIndexes: [cellIndex.cellIndex]\n          }], selectedData, [selectedCell], foreignKeyData);\n        } else {\n          isUnSelected = false;\n          this.onActionBegin(args, events.cellSelecting);\n          this.addRowCellIndex({\n            rowIndex: cellIndex.rowIndex,\n            cellIndex: cellIndex.cellIndex\n          });\n          this.updateCellSelection(selectedCell);\n          this.addAttribute(selectedCell);\n        }\n      } else {\n        this.onActionBegin(args, events.cellSelecting);\n\n        if (!isNullOrUndefined(args) && args[cncl] === true) {\n          return;\n        }\n\n        this.updateCellSelection(selectedCell, cellIndex.rowIndex, cellIndex.cellIndex);\n      }\n\n      if (!isUnSelected) {\n        var cellSelectedArgs = void 0;\n\n        if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n          cellSelectedArgs = {\n            data: selectedData,\n            cellIndex: cellIndexes[0],\n            currentCell: selectedCell,\n            previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined,\n            selectedRowCellIndex: this.selectedRowCellIndexes\n          };\n          var previousRowCellIndex = 'previousRowCellIndex';\n          cellSelectedArgs[previousRowCellIndex] = this.prevECIdxs;\n        } else {\n          cellSelectedArgs = {\n            data: selectedData,\n            cellIndex: cellIndexes[0],\n            selectedRowCellIndex: this.selectedRowCellIndexes\n          };\n        }\n\n        this.onActionComplete(cellSelectedArgs, events.cellSelected);\n        this.cellselected = true;\n      }\n\n      this.updateCellProps(cellIndex, cellIndex);\n    }\n  };\n\n  Selection.prototype.getColIndex = function (rowIndex, index) {\n    var frzCols = this.parent.isFrozenGrid();\n    var col = this.parent.getColumnByIndex(index);\n    var cells = getCellsByTableName(this.parent, col, rowIndex);\n\n    if (cells) {\n      for (var m = 0; m < cells.length; m++) {\n        var colIndex = parseInt(cells[m].getAttribute(literals.ariaColIndex), 10);\n\n        if (colIndex === index) {\n          if (frzCols) {\n            if (col.getFreezeTableName() === 'movable') {\n              m += this.parent.getFrozenLeftCount();\n            } else if (col.getFreezeTableName() === literals.frozenRight) {\n              m += this.parent.getFrozenLeftColumnsCount() + this.parent.getMovableColumnsCount();\n            }\n          }\n\n          return m;\n        }\n      }\n    }\n\n    return -1;\n  };\n\n  Selection.prototype.getLastColIndex = function (rowIndex) {\n    var cells = this.parent.getFrozenColumns() ? this.parent.getMovableDataRows()[rowIndex].querySelectorAll('td.e-rowcell') : this.parent.getDataRows()[rowIndex].querySelectorAll('td.e-rowcell');\n    return parseInt(cells[cells.length - 1].getAttribute(literals.ariaColIndex), 10);\n  };\n\n  Selection.prototype.clearCell = function () {\n    this.clearCellSelection();\n  };\n\n  Selection.prototype.cellDeselect = function (type, cellIndexes, data, cells, foreignKeyData) {\n    var cancl = 'cancel';\n\n    if (cells[0] && cells[0].classList.contains(literals.gridChkBox)) {\n      this.updateCheckBoxes(closest(cells[0], 'tr'));\n    }\n\n    var args = {\n      cells: cells,\n      data: data,\n      cellIndexes: cellIndexes,\n      foreignKeyData: foreignKeyData,\n      cancel: false\n    };\n    this.parent.trigger(type, args);\n    this.isPreventCellSelect = args[cancl];\n  };\n\n  Selection.prototype.updateCellSelection = function (selectedCell, rowIndex, cellIndex) {\n    if (!isNullOrUndefined(rowIndex)) {\n      this.addRowCellIndex({\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      });\n    }\n\n    selectedCell.classList.add('e-cellselectionbackground');\n\n    if (selectedCell.classList.contains(literals.gridChkBox)) {\n      this.updateCheckBoxes(closest(selectedCell, 'tr'), true);\n    }\n\n    this.addAttribute(selectedCell);\n  };\n\n  Selection.prototype.addAttribute = function (cell) {\n    this.target = cell;\n\n    if (!isNullOrUndefined(cell)) {\n      cell.setAttribute('aria-selected', 'true');\n\n      if (!this.preventFocus) {\n        this.focus.onClick({\n          target: cell\n        }, true);\n      }\n    }\n  };\n\n  Selection.prototype.updateCellProps = function (startIndex, endIndex) {\n    this.prevCIdxs = startIndex;\n    this.prevECIdxs = endIndex;\n    this.isCellSelected = this.selectedRowCellIndexes.length && true;\n  };\n\n  Selection.prototype.addRowCellIndex = function (rowCellIndex) {\n    var isRowAvail;\n    var index;\n\n    for (var i = 0, len = this.selectedRowCellIndexes.length; i < len; i++) {\n      if (this.selectedRowCellIndexes[i].rowIndex === rowCellIndex.rowIndex) {\n        isRowAvail = true;\n        index = i;\n        break;\n      }\n    }\n\n    if (isRowAvail) {\n      if (this.selectedRowCellIndexes[index].cellIndexes.indexOf(rowCellIndex.cellIndex) < 0) {\n        this.selectedRowCellIndexes[index].cellIndexes.push(rowCellIndex.cellIndex);\n      }\n    } else {\n      this.selectedRowCellIndexes.push({\n        rowIndex: rowCellIndex.rowIndex,\n        cellIndexes: [rowCellIndex.cellIndex]\n      });\n    }\n  };\n  /**\n   * Deselects the currently selected cells.\n   *\n   * @returns {void}\n   */\n\n\n  Selection.prototype.clearCellSelection = function () {\n    if (this.isCellSelected) {\n      var gObj = this.parent;\n      var selectedCells = this.getSelectedCellsElement();\n      var rowCell = this.selectedRowCellIndexes;\n      var data = [];\n      var cells = [];\n      var foreignKeyData = [];\n      var currentViewData = this.getCurrentBatchRecordChanges();\n      var frzCols = gObj.isFrozenGrid();\n      this.hideAutoFill();\n\n      for (var i = 0, len = rowCell.length; i < len; i++) {\n        data.push(currentViewData[rowCell[i].rowIndex]);\n        var rowObj = this.getRowObj(rowCell[i].rowIndex);\n\n        for (var j = 0, cLen = rowCell[i].cellIndexes.length; j < cLen; j++) {\n          if (frzCols) {\n            var col = gObj.getColumnByIndex(rowCell[i].cellIndexes[j]);\n            cells.push(getCellByColAndRowIndex(this.parent, col, rowCell[i].rowIndex, rowCell[i].cellIndexes[j]));\n          } else {\n            if (rowObj.cells) {\n              foreignKeyData.push(rowObj.cells[rowCell[i].cellIndexes[j]].foreignKeyData);\n            }\n\n            cells.push(gObj.getCellFromIndex(rowCell[i].rowIndex, rowCell[i].cellIndexes[j]));\n          }\n        }\n      }\n\n      this.cellDeselect(events.cellDeselecting, rowCell, data, cells, foreignKeyData);\n\n      if (this.isPreventCellSelect === true) {\n        return;\n      }\n\n      for (var i = 0, len = selectedCells.length; i < len; i++) {\n        selectedCells[i].classList.remove('e-cellselectionbackground');\n        selectedCells[i].removeAttribute('aria-selected');\n      }\n\n      if (this.bdrElement) {\n        this.showHideBorders('none');\n      }\n\n      this.selectedRowCellIndexes = [];\n      this.isCellSelected = false;\n\n      if (!this.isDragged && this.cellselected) {\n        this.cellDeselect(events.cellDeselected, rowCell, data, cells, foreignKeyData);\n      }\n    }\n  };\n\n  Selection.prototype.getSelectedCellsElement = function () {\n    var gObj = this.parent;\n    var rows = gObj.getDataRows();\n    var mRows;\n\n    if (gObj.isFrozenGrid()) {\n      mRows = gObj.getMovableDataRows();\n      rows = gObj.addMovableRows(rows, mRows);\n\n      if (gObj.getFrozenMode() === literals.leftRight) {\n        rows = gObj.addMovableRows(rows, gObj.getFrozenRightDataRows());\n      }\n    }\n\n    var cells = [];\n\n    for (var i = 0, len = rows.length; i < len; i++) {\n      cells = cells.concat([].slice.call(rows[i].getElementsByClassName('e-cellselectionbackground')));\n    }\n\n    return cells;\n  };\n\n  Selection.prototype.mouseMoveHandler = function (e) {\n    e.preventDefault();\n    var gBRect = this.parent.element.getBoundingClientRect();\n    var x1 = this.x;\n    var y1 = this.y;\n    var position = getPosition(e);\n    var x2 = position.x - gBRect.left;\n    var y2 = position.y - gBRect.top;\n    var tmp;\n    var target = closest(e.target, 'tr');\n    this.isDragged = true;\n\n    if (!this.isCellDrag) {\n      if (!target) {\n        target = closest(document.elementFromPoint(this.parent.element.offsetLeft + 2, e.clientY), 'tr');\n      }\n\n      if (x1 > x2) {\n        tmp = x2;\n        x2 = x1;\n        x1 = tmp;\n      }\n\n      if (y1 > y2) {\n        tmp = y2;\n        y2 = y1;\n        y1 = tmp;\n      }\n\n      this.element.style.left = x1 + 'px';\n      this.element.style.top = y1 + 'px';\n      this.element.style.width = x2 - x1 + 'px';\n      this.element.style.height = y2 - y1 + 'px';\n    }\n\n    if (target && !e.ctrlKey && !e.shiftKey) {\n      var rowIndex = parseInt(target.getAttribute(literals.ariaRowIndex), 10);\n\n      if (!this.isCellDrag) {\n        this.hideAutoFill();\n        this.selectRowsByRange(this.startDIndex, rowIndex);\n      } else {\n        var td = parentsUntil(e.target, literals.rowCell);\n\n        if (td) {\n          this.startAFCell = this.startCell;\n          this.endAFCell = parentsUntil(e.target, literals.rowCell);\n          this.selectLikeExcel(e, rowIndex, parseInt(td.getAttribute(literals.ariaColIndex), 10));\n        }\n      }\n    }\n  };\n\n  Selection.prototype.selectLikeExcel = function (e, rowIndex, cellIndex) {\n    if (!this.isAutoFillSel) {\n      this.clearCellSelection();\n      this.selectCellsByRange({\n        rowIndex: this.startDIndex,\n        cellIndex: this.startDCellIndex\n      }, {\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      });\n      this.drawBorders();\n    } else {\n      //Autofill\n      this.showAFBorders();\n      this.selectLikeAutoFill(e);\n    }\n  };\n\n  Selection.prototype.drawBorders = function () {\n    if (this.selectionSettings.cellSelectionMode === 'BoxWithBorder' && this.selectedRowCellIndexes.length && !this.parent.isEdit) {\n      this.parent.element.classList.add('e-enabledboxbdr');\n\n      if (!this.bdrElement) {\n        this.createBorders();\n      }\n\n      this.positionBorders();\n    } else {\n      this.showHideBorders('none');\n    }\n  };\n\n  Selection.prototype.isLastCell = function (cell) {\n    var cells = [].slice.call(cell.parentElement.querySelectorAll('.e-rowcell:not(.e-hide)'));\n    return cells[cells.length - 1] === cell;\n  };\n\n  Selection.prototype.isLastRow = function (cell) {\n    var rows = [].slice.call(closest(cell, literals.tbody).querySelectorAll('.e-row:not(.e-hiddenrow)'));\n    return cell.parentElement === rows[rows.length - 1];\n  };\n\n  Selection.prototype.isFirstRow = function (cell) {\n    var rows = [].slice.call(closest(cell, literals.tbody).querySelectorAll('.e-row:not(.e-hiddenrow)'));\n    return cell.parentElement === rows[0];\n  };\n\n  Selection.prototype.isFirstCell = function (cell) {\n    var cells = [].slice.call(cell.parentElement.querySelectorAll('.e-rowcell:not(.e-hide)'));\n    return cells[0] === cell;\n  };\n\n  Selection.prototype.setBorders = function (parentEle, border, bdrStr) {\n    var cells = [].slice.call(parentEle.getElementsByClassName('e-cellselectionbackground')).filter(function (ele) {\n      return ele.style.display === '';\n    });\n\n    if (cells.length) {\n      var isFrozen = this.parent.isFrozenGrid();\n      var start = cells[0];\n      var end = cells[cells.length - 1];\n      var stOff = start.getBoundingClientRect();\n      var endOff = end.getBoundingClientRect();\n      var parentOff = start.offsetParent.getBoundingClientRect();\n      var rowHeight = this.isLastRow(end) && (bdrStr === '1' || bdrStr === '2' || bdrStr === '5') ? 2 : 0;\n      var topOffSet = this.parent.frozenRows && (bdrStr === '1' || bdrStr === '2') && this.isFirstRow(start) ? 1.5 : 0;\n      var leftOffset = isFrozen && (bdrStr === '2' || bdrStr === '4') && this.isFirstCell(start) ? 1 : 0;\n      var rightOffset = (this.parent.getFrozenMode() === 'Right' && (bdrStr === '1' || bdrStr === '3') || this.parent.getFrozenMode() === literals.leftRight && (bdrStr === '5' || bdrStr === '6')) && this.isFirstCell(start) ? 1 : 0;\n\n      if (this.parent.enableRtl) {\n        border.style.right = parentOff.right - stOff.right - leftOffset + 'px';\n        border.style.width = stOff.right - endOff.left + leftOffset + 1 + 'px';\n      } else {\n        border.style.left = stOff.left - parentOff.left - leftOffset - rightOffset + 'px';\n        border.style.width = endOff.right - stOff.left + leftOffset - rightOffset + 1 + 'px';\n      }\n\n      border.style.top = stOff.top - parentOff.top - topOffSet + 'px';\n      border.style.height = endOff.top - stOff.top > 0 ? endOff.top - parentOff.top + endOff.height + 1 - (stOff.top - parentOff.top) - rowHeight + topOffSet + 'px' : endOff.height + topOffSet - rowHeight + 1 + 'px';\n      this.selectDirection += bdrStr;\n    } else {\n      border.style.display = 'none';\n    }\n  };\n\n  Selection.prototype.positionBorders = function () {\n    this.updateStartEndCells();\n\n    if (!this.startCell || !this.bdrElement || !this.selectedRowCellIndexes.length) {\n      return;\n    }\n\n    this.selectDirection = '';\n    this.showHideBorders('');\n    this.setBorders(this.parent.getContentTable(), this.bdrElement, '1');\n\n    if (this.parent.isFrozenGrid()) {\n      this.setBorders(this.parent.contentModule.getMovableContent(), this.mcBdrElement, '2');\n\n      if (this.parent.getFrozenMode() === literals.leftRight) {\n        this.setBorders(this.parent.contentModule.getFrozenRightContent(), this.frcBdrElement, '5');\n      }\n    }\n\n    if (this.parent.frozenRows) {\n      this.setBorders(this.parent.getHeaderTable(), this.fhBdrElement, '3');\n\n      if (this.parent.isFrozenGrid()) {\n        this.setBorders(this.parent.headerModule.getMovableHeader(), this.mhBdrElement, '4');\n\n        if (this.parent.getFrozenMode() === literals.leftRight) {\n          this.setBorders(this.parent.headerModule.getFrozenRightHeader(), this.frhBdrElement, '6');\n        }\n      }\n    }\n\n    this.applyBorders(this.selectDirection);\n  };\n  /* eslint-enable */\n\n\n  Selection.prototype.applyBothFrozenBorders = function (str) {\n    var rtl = this.parent.enableRtl;\n\n    switch (str.length) {\n      case 6:\n        {\n          this.bdrElement.style.borderWidth = rtl ? this.right_bottom : this.bottom_left;\n          this.mcBdrElement.style.borderWidth = this.bottom;\n          this.fhBdrElement.style.borderWidth = rtl ? this.top_right : this.top_left;\n          this.mhBdrElement.style.borderWidth = this.top;\n          this.frcBdrElement.style.borderWidth = rtl ? this.bottom_left : this.right_bottom;\n          this.frhBdrElement.style.borderWidth = rtl ? this.top_left : this.top_right;\n        }\n        break;\n\n      case 4:\n        {\n          if (str.includes('1') && str.includes('2') && str.includes('3') && str.includes('4')) {\n            this.fhBdrElement.style.borderWidth = rtl ? this.top_right : this.top_left;\n            this.mhBdrElement.style.borderWidth = rtl ? this.top_left : this.top_right;\n            this.bdrElement.style.borderWidth = rtl ? this.right_bottom : this.bottom_left;\n            this.mcBdrElement.style.borderWidth = rtl ? this.bottom_left : this.right_bottom;\n          }\n\n          if (str.includes('2') && str.includes('4') && str.includes('5') && str.includes('6')) {\n            this.mcBdrElement.style.borderWidth = rtl ? this.right_bottom : this.bottom_left;\n            this.mhBdrElement.style.borderWidth = rtl ? this.top_right : this.top_left;\n            this.frcBdrElement.style.borderWidth = rtl ? this.bottom_left : this.right_bottom;\n            this.frhBdrElement.style.borderWidth = rtl ? this.top_left : this.top_right;\n          }\n        }\n        break;\n\n      case 3:\n        {\n          this.bdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n          this.mcBdrElement.style.borderWidth = this.top_bottom;\n          this.frcBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n\n          if (this.parent.frozenRows) {\n            this.fhBdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n            this.mhBdrElement.style.borderWidth = this.top_bottom;\n            this.frcBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n          }\n        }\n        break;\n\n      case 2:\n        {\n          if (str.includes('1')) {\n            this.mcBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n\n            if (this.parent.frozenRows) {\n              this.fhBdrElement.style.borderWidth = this.top_right_left;\n            }\n          }\n\n          if (str.includes('2')) {\n            this.bdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n            this.frcBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n\n            if (this.parent.frozenRows) {\n              this.mhBdrElement.style.borderWidth = this.top_right_left;\n            }\n          }\n\n          if (str.includes('3')) {\n            this.mhBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n            this.bdrElement.style.borderWidth = this.right_bottom_left;\n          }\n\n          if (str.includes('4')) {\n            this.fhBdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n            this.frhBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n            this.mcBdrElement.style.borderWidth = this.right_bottom_left;\n          }\n\n          if (str.includes('5')) {\n            this.mcBdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n\n            if (this.parent.frozenRows) {\n              this.frhBdrElement.style.borderWidth = this.top_right_left;\n            }\n          }\n\n          if (str.includes('6')) {\n            this.mhBdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n            this.frcBdrElement.style.borderWidth = this.right_bottom_left;\n          }\n        }\n        break;\n\n      default:\n        this.bdrElement.style.borderWidth = this.all_border;\n        this.mcBdrElement.style.borderWidth = this.all_border;\n        this.frcBdrElement.style.borderWidth = this.all_border;\n\n        if (this.parent.frozenRows) {\n          this.fhBdrElement.style.borderWidth = this.all_border;\n          this.mhBdrElement.style.borderWidth = this.all_border;\n          this.frhBdrElement.style.borderWidth = this.all_border;\n        }\n\n        break;\n    }\n  };\n\n  Selection.prototype.applyBorders = function (str) {\n    var rtl = this.parent.enableRtl;\n\n    if (this.parent.getFrozenMode() === literals.leftRight) {\n      this.applyBothFrozenBorders(str);\n    } else {\n      switch (str.length) {\n        case 4:\n          {\n            if (this.parent.getFrozenMode() === 'Right') {\n              this.bdrElement.style.borderWidth = rtl ? this.bottom_left : this.right_bottom;\n              this.mcBdrElement.style.borderWidth = rtl ? this.right_bottom : this.bottom_left;\n              this.fhBdrElement.style.borderWidth = rtl ? this.top_left : this.top_right;\n              this.mhBdrElement.style.borderWidth = rtl ? this.top_right : this.top_left;\n            } else {\n              this.bdrElement.style.borderWidth = rtl ? this.right_bottom : this.bottom_left;\n              this.mcBdrElement.style.borderWidth = rtl ? this.bottom_left : this.right_bottom;\n              this.fhBdrElement.style.borderWidth = rtl ? this.top_right : this.top_left;\n              this.mhBdrElement.style.borderWidth = rtl ? this.top_left : this.top_right;\n            }\n          }\n          break;\n\n        case 2:\n          {\n            if (this.parent.getFrozenMode() === 'Right') {\n              this.bdrElement.style.borderWidth = str.includes('2') ? rtl ? this.top_bottom_left : this.top_right_bottom : this.right_bottom_left;\n              this.mcBdrElement.style.borderWidth = str.includes('1') ? rtl ? this.top_right_bottom : this.top_bottom_left : this.right_bottom_left;\n\n              if (this.parent.frozenRows) {\n                this.fhBdrElement.style.borderWidth = str.includes('1') ? this.top_right_left : rtl ? this.top_bottom_left : this.top_right_bottom;\n                this.mhBdrElement.style.borderWidth = str.includes('2') ? this.top_right_left : rtl ? this.top_right_bottom : this.top_bottom_left;\n              }\n            } else {\n              this.bdrElement.style.borderWidth = str.includes('2') ? rtl ? this.top_right_bottom : this.top_bottom_left : this.right_bottom_left;\n\n              if (this.parent.isFrozenGrid()) {\n                this.mcBdrElement.style.borderWidth = str.includes('1') ? rtl ? this.top_bottom_left : this.top_right_bottom : this.right_bottom_left;\n              }\n\n              if (this.parent.frozenRows) {\n                this.fhBdrElement.style.borderWidth = str.includes('1') ? this.top_right_left : rtl ? this.top_right_bottom : this.top_bottom_left;\n\n                if (this.parent.isFrozenGrid()) {\n                  this.mhBdrElement.style.borderWidth = str.includes('2') ? this.top_right_left : rtl ? this.top_bottom_left : this.top_right_bottom;\n                }\n              }\n            }\n          }\n          break;\n\n        default:\n          this.bdrElement.style.borderWidth = this.all_border;\n\n          if (this.parent.isFrozenGrid()) {\n            this.mcBdrElement.style.borderWidth = this.all_border;\n          }\n\n          if (this.parent.frozenRows) {\n            this.fhBdrElement.style.borderWidth = this.all_border;\n\n            if (this.parent.isFrozenGrid()) {\n              this.mhBdrElement.style.borderWidth = this.all_border;\n            }\n          }\n\n          break;\n      }\n    }\n  };\n\n  Selection.prototype.createBorders = function () {\n    if (!this.bdrElement) {\n      this.bdrElement = this.parent.getContentTable().parentElement.appendChild(createElement('div', {\n        className: 'e-xlsel',\n        id: this.parent.element.id + '_bdr',\n        styles: 'width: 2px; border-width: 0;'\n      }));\n\n      if (this.parent.isFrozenGrid()) {\n        this.mcBdrElement = this.parent.contentModule.getMovableContent().appendChild(createElement('div', {\n          className: 'e-xlsel',\n          id: this.parent.element.id + '_mcbdr',\n          styles: 'height: 2px; border-width: 0;'\n        }));\n\n        if (this.parent.getFrozenMode() === literals.leftRight) {\n          this.frcBdrElement = this.parent.contentModule.getFrozenRightContent().appendChild(createElement('div', {\n            className: 'e-xlsel',\n            id: this.parent.element.id + '_frcbdr',\n            styles: 'height: 2px; border-width: 0;'\n          }));\n        }\n      }\n\n      if (this.parent.frozenRows) {\n        this.fhBdrElement = this.parent.getHeaderTable().parentElement.appendChild(createElement('div', {\n          className: 'e-xlsel',\n          id: this.parent.element.id + '_fhbdr',\n          styles: 'height: 2px;'\n        }));\n      }\n\n      if (this.parent.frozenRows && this.parent.isFrozenGrid()) {\n        this.mhBdrElement = this.parent.headerModule.getMovableHeader().appendChild(createElement('div', {\n          className: 'e-xlsel',\n          id: this.parent.element.id + '_mhbdr',\n          styles: 'height: 2px;'\n        }));\n\n        if (this.parent.getFrozenMode() === literals.leftRight) {\n          this.frhBdrElement = this.parent.headerModule.getFrozenRightHeader().appendChild(createElement('div', {\n            className: 'e-xlsel',\n            id: this.parent.element.id + '_frhbdr',\n            styles: 'height: 2px;'\n          }));\n        }\n      }\n    }\n  };\n\n  Selection.prototype.showHideBorders = function (display) {\n    if (this.bdrElement) {\n      this.bdrElement.style.display = display;\n\n      if (this.parent.isFrozenGrid()) {\n        this.mcBdrElement.style.display = display;\n\n        if (this.parent.getFrozenMode() === literals.leftRight) {\n          this.frcBdrElement.style.display = display;\n        }\n      }\n\n      if (this.parent.frozenRows) {\n        this.fhBdrElement.style.display = display;\n      }\n\n      if (this.parent.frozenRows && this.parent.isFrozenGrid()) {\n        this.mhBdrElement.style.display = display;\n\n        if (this.parent.getFrozenMode() === literals.leftRight) {\n          this.frhBdrElement.style.display = display;\n        }\n      }\n    }\n  };\n\n  Selection.prototype.drawAFBorders = function () {\n    if (!this.bdrAFBottom) {\n      this.createAFBorders();\n    }\n\n    this.positionAFBorders();\n  };\n\n  Selection.prototype.positionAFBorders = function () {\n    if (!this.startCell || !this.bdrAFLeft) {\n      return;\n    }\n\n    var stOff = this.startAFCell.getBoundingClientRect();\n    var endOff = this.endAFCell.getBoundingClientRect();\n    var top = endOff.top - stOff.top > 0 ? 1 : 0;\n    var firstCellTop = endOff.top - stOff.top >= 0 && (parentsUntil(this.startAFCell, literals.movableContent) || parentsUntil(this.startAFCell, 'e-frozencontent')) && this.isFirstRow(this.startAFCell) ? 1.5 : 0;\n    var firstCellLeft = (parentsUntil(this.startAFCell, literals.movableContent) || parentsUntil(this.startAFCell, literals.movableHeader)) && this.isFirstCell(this.startAFCell) ? 1 : 0;\n    var rowHeight = this.isLastRow(this.endAFCell) && (parentsUntil(this.endAFCell, literals.movableContent) || parentsUntil(this.endAFCell, 'e-frozencontent')) ? 2 : 0;\n    var parentOff = this.startAFCell.offsetParent.getBoundingClientRect();\n    var parentRect = this.parent.element.getBoundingClientRect();\n    var sTop = this.startAFCell.offsetParent.parentElement.scrollTop;\n    var sLeft = this.startAFCell.offsetParent.parentElement.scrollLeft;\n    var scrollTop = sTop - this.startAFCell.offsetTop;\n    var scrollLeft = sLeft - this.startAFCell.offsetLeft;\n    var totalHeight = this.parent.element.clientHeight;\n    var totalWidth = this.parent.element.clientWidth;\n    scrollTop = scrollTop > 0 ? Math.floor(scrollTop) - 1 : 0;\n    scrollLeft = scrollLeft > 0 ? scrollLeft : 0;\n    var left = stOff.left - parentRect.left;\n\n    if (!this.parent.enableRtl) {\n      this.bdrAFLeft.style.left = left - firstCellLeft + scrollLeft - 1 + 'px';\n      this.bdrAFRight.style.left = endOff.left - parentRect.left - 2 + endOff.width + 'px';\n      this.bdrAFRight.style.width = totalWidth <= parseInt(this.bdrAFRight.style.left, 10) ? '0px' : '2px';\n      this.bdrAFTop.style.left = left + scrollLeft - 0.5 + 'px';\n      this.bdrAFTop.style.width = parseInt(this.bdrAFRight.style.left, 10) - parseInt(this.bdrAFLeft.style.left, 10) - firstCellLeft + 1 + 'px';\n\n      if (totalWidth <= parseInt(this.bdrAFTop.style.width, 10) + parseInt(this.bdrAFTop.style.left, 10)) {\n        var leftRemove = parseInt(this.bdrAFTop.style.width, 10) + parseInt(this.bdrAFTop.style.left, 10) - totalWidth;\n        this.bdrAFTop.style.width = parseInt(this.bdrAFTop.style.width, 10) - leftRemove + 'px';\n      }\n    } else {\n      var scrolloffSet = parentsUntil(this.startAFCell, literals.movableContent) || parentsUntil(this.startAFCell, literals.movableHeader) ? stOff.right - this.startAFCell.offsetParent.parentElement.getBoundingClientRect().width - parentRect.left : 0;\n      this.bdrAFLeft.style.right = parentRect.right - endOff.right - 2 + endOff.width + 'px';\n      this.bdrAFLeft.style.width = totalWidth <= parseInt(this.bdrAFLeft.style.right, 10) ? '0px' : '2px';\n      this.bdrAFRight.style.right = parentRect.right - stOff.right - firstCellLeft + scrolloffSet - 1 + 'px';\n      this.bdrAFTop.style.left = endOff.left - parentRect.left - 0.5 + 'px';\n      this.bdrAFTop.style.width = parseInt(this.bdrAFLeft.style.right, 10) - parseInt(this.bdrAFRight.style.right, 10) - firstCellLeft + 1 + 'px';\n\n      if (parseInt(this.bdrAFTop.style.left, 10) < 0) {\n        this.bdrAFTop.style.width = parseInt(this.bdrAFTop.style.width, 10) + parseInt(this.bdrAFTop.style.left, 10) + 'px';\n        this.bdrAFTop.style.left = '0px';\n      }\n    }\n\n    this.bdrAFLeft.style.top = stOff.top - parentRect.top - firstCellTop + scrollTop + 'px';\n    this.bdrAFLeft.style.height = endOff.top - stOff.top > 0 ? endOff.top - parentOff.top + endOff.height + 1 - (stOff.top - parentOff.top) + firstCellTop - rowHeight - scrollTop + 'px' : endOff.height + firstCellTop - rowHeight - scrollTop + 'px';\n    this.bdrAFRight.style.top = this.bdrAFLeft.style.top;\n    this.bdrAFRight.style.height = parseInt(this.bdrAFLeft.style.height, 10) + 'px';\n    this.bdrAFTop.style.top = this.bdrAFRight.style.top;\n    this.bdrAFBottom.style.left = this.bdrAFTop.style.left;\n    this.bdrAFBottom.style.top = parseFloat(this.bdrAFLeft.style.top) + parseFloat(this.bdrAFLeft.style.height) - top - 1 + 'px';\n    this.bdrAFBottom.style.width = totalHeight <= parseFloat(this.bdrAFBottom.style.top) ? '0px' : this.bdrAFTop.style.width;\n\n    if (totalHeight <= parseInt(this.bdrAFLeft.style.height, 10) + parseInt(this.bdrAFLeft.style.top, 10)) {\n      var topRemove = parseInt(this.bdrAFLeft.style.height, 10) + parseInt(this.bdrAFLeft.style.top, 10) - totalHeight;\n      this.bdrAFLeft.style.height = parseInt(this.bdrAFLeft.style.height, 10) - topRemove + 'px';\n      this.bdrAFRight.style.height = parseInt(this.bdrAFLeft.style.height, 10) + 'px';\n    }\n  };\n\n  Selection.prototype.createAFBorders = function () {\n    if (!this.bdrAFLeft) {\n      this.bdrAFLeft = this.parent.element.appendChild(createElement('div', {\n        className: 'e-xlselaf',\n        id: this.parent.element.id + '_bdrafleft',\n        styles: 'width: 2px;'\n      }));\n      this.bdrAFRight = this.parent.element.appendChild(createElement('div', {\n        className: 'e-xlselaf',\n        id: this.parent.element.id + '_bdrafright',\n        styles: 'width: 2px;'\n      }));\n      this.bdrAFBottom = this.parent.element.appendChild(createElement('div', {\n        className: 'e-xlselaf',\n        id: this.parent.element.id + '_bdrafbottom',\n        styles: 'height: 2px;'\n      }));\n      this.bdrAFTop = this.parent.element.appendChild(createElement('div', {\n        className: 'e-xlselaf',\n        id: this.parent.element.id + '_bdraftop',\n        styles: 'height: 2px;'\n      }));\n    }\n  };\n\n  Selection.prototype.showAFBorders = function () {\n    if (this.bdrAFLeft) {\n      this.bdrAFLeft.style.display = '';\n      this.bdrAFRight.style.display = '';\n      this.bdrAFBottom.style.display = '';\n      this.bdrAFTop.style.display = '';\n    }\n  };\n\n  Selection.prototype.hideAFBorders = function () {\n    if (this.bdrAFLeft) {\n      this.bdrAFLeft.style.display = 'none';\n      this.bdrAFRight.style.display = 'none';\n      this.bdrAFBottom.style.display = 'none';\n      this.bdrAFTop.style.display = 'none';\n    }\n  };\n\n  Selection.prototype.updateValue = function (rIdx, cIdx, cell) {\n    var args = this.createBeforeAutoFill(rIdx, cIdx, cell);\n\n    if (!args.cancel) {\n      var col = this.parent.getColumnByIndex(cIdx);\n\n      if (this.parent.editModule && cell) {\n        if (col.type === 'number') {\n          this.parent.editModule.updateCell(rIdx, col.field, parseInt(args.value, 10));\n        } else {\n          this.parent.editModule.updateCell(rIdx, col.field, args.value);\n        }\n      }\n    }\n  };\n\n  Selection.prototype.createBeforeAutoFill = function (rowIndex, colIndex, cell) {\n    var col = this.parent.getColumnByIndex(colIndex);\n    var args = {\n      column: col,\n      value: cell.innerText\n    };\n    this.parent.trigger(events.beforeAutoFill, args);\n    return args;\n  }; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  Selection.prototype.getAutoFillCells = function (rowIndex, startCellIdx) {\n    var cls = '.e-cellselectionbackground';\n    var cells = [].slice.call(this.parent.getDataRows()[rowIndex].querySelectorAll(cls));\n\n    if (this.parent.isFrozenGrid()) {\n      cells = cells.concat([].slice.call(this.parent.getMovableDataRows()[rowIndex].querySelectorAll(cls)));\n\n      if (this.parent.getFrozenMode() === literals.leftRight) {\n        cells = cells.concat([].slice.call(this.parent.getFrozenRightDataRows()[rowIndex].querySelectorAll(cls)));\n      }\n    }\n\n    return cells;\n  };\n\n  Selection.prototype.selectLikeAutoFill = function (e, isApply) {\n    var startrowIdx = parseInt(parentsUntil(this.startAFCell, literals.row).getAttribute(literals.ariaRowIndex), 10);\n    var startCellIdx = parseInt(this.startAFCell.getAttribute(literals.ariaColIndex), 10);\n    var endrowIdx = parseInt(parentsUntil(this.endAFCell, literals.row).getAttribute(literals.ariaRowIndex), 10);\n    var endCellIdx = parseInt(this.endAFCell.getAttribute(literals.ariaColIndex), 10);\n    var rowLen = this.selectedRowCellIndexes.length - 1;\n    var colLen = this.selectedRowCellIndexes[0].cellIndexes.length - 1;\n\n    switch (true) {\n      //direction\n      case !isApply && this.endAFCell.classList.contains('e-cellselectionbackground') && !!parentsUntil(e.target, literals.rowCell):\n        this.startAFCell = this.parent.getCellFromIndex(startrowIdx, startCellIdx);\n        this.endAFCell = this.parent.getCellFromIndex(startrowIdx + rowLen, startCellIdx + colLen);\n        this.drawAFBorders();\n        break;\n\n      case this.autoFillRLselection && startCellIdx + colLen < endCellIdx && //right\n      endCellIdx - startCellIdx - colLen + 1 > endrowIdx - startrowIdx - rowLen // right bottom\n      && endCellIdx - startCellIdx - colLen + 1 > startrowIdx - endrowIdx:\n        //right top\n        this.endAFCell = this.parent.getCellFromIndex(startrowIdx + rowLen, endCellIdx);\n        endrowIdx = parseInt(parentsUntil(this.endAFCell, literals.row).getAttribute(literals.ariaRowIndex), 10);\n        endCellIdx = parseInt(this.endAFCell.getAttribute(literals.ariaColIndex), 10);\n\n        if (!isApply) {\n          this.drawAFBorders();\n        } else {\n          var cellIdx = parseInt(this.endCell.getAttribute(literals.ariaColIndex), 10);\n\n          for (var i = startrowIdx; i <= endrowIdx; i++) {\n            var cells = this.getAutoFillCells(i, startCellIdx);\n            var c = 0;\n\n            for (var j = cellIdx + 1; j <= endCellIdx; j++) {\n              if (c > colLen) {\n                c = 0;\n              }\n\n              this.updateValue(i, j, cells[c]);\n              c++;\n            }\n          }\n\n          this.selectCellsByRange({\n            rowIndex: startrowIdx,\n            cellIndex: this.startCellIndex\n          }, {\n            rowIndex: endrowIdx,\n            cellIndex: endCellIdx\n          });\n        }\n\n        break;\n\n      case this.autoFillRLselection && startCellIdx > endCellIdx && // left\n      startCellIdx - endCellIdx + 1 > endrowIdx - startrowIdx - rowLen && //left top\n      startCellIdx - endCellIdx + 1 > startrowIdx - endrowIdx:\n        // left bottom\n        this.startAFCell = this.parent.getCellFromIndex(startrowIdx, endCellIdx);\n        this.endAFCell = this.endCell;\n\n        if (!isApply) {\n          this.drawAFBorders();\n        } else {\n          for (var i = startrowIdx; i <= startrowIdx + rowLen; i++) {\n            var cells = this.getAutoFillCells(i, startCellIdx);\n            cells.reverse();\n            var c = 0;\n\n            for (var j = this.startCellIndex - 1; j >= endCellIdx; j--) {\n              if (c > colLen) {\n                c = 0;\n              }\n\n              this.updateValue(i, j, cells[c]);\n              c++;\n            }\n          }\n\n          this.selectCellsByRange({\n            rowIndex: startrowIdx,\n            cellIndex: endCellIdx\n          }, {\n            rowIndex: startrowIdx + rowLen,\n            cellIndex: this.startCellIndex + colLen\n          });\n        }\n\n        break;\n\n      case startrowIdx > endrowIdx:\n        //up\n        this.startAFCell = this.parent.getCellFromIndex(endrowIdx, startCellIdx);\n        this.endAFCell = this.endCell;\n\n        if (!isApply) {\n          this.drawAFBorders();\n        } else {\n          var trIdx = parseInt(this.endCell.parentElement.getAttribute(literals.ariaRowIndex), 10);\n          var r = trIdx;\n\n          for (var i = startrowIdx - 1; i >= endrowIdx; i--) {\n            if (r === this.startIndex - 1) {\n              r = trIdx;\n            }\n\n            var cells = this.getAutoFillCells(r, startCellIdx);\n            var c = 0;\n            r--;\n\n            for (var j = this.startCellIndex; j <= this.startCellIndex + colLen; j++) {\n              this.updateValue(i, j, cells[c]);\n              c++;\n            }\n          }\n\n          this.selectCellsByRange({\n            rowIndex: endrowIdx,\n            cellIndex: startCellIdx + colLen\n          }, {\n            rowIndex: startrowIdx + rowLen,\n            cellIndex: startCellIdx\n          });\n        }\n\n        break;\n\n      default:\n        //down\n        this.endAFCell = this.parent.getCellFromIndex(endrowIdx, startCellIdx + colLen);\n\n        if (!isApply) {\n          this.drawAFBorders();\n        } else {\n          var trIdx = parseInt(this.endCell.parentElement.getAttribute(literals.ariaRowIndex), 10);\n          var r = this.startIndex;\n\n          for (var i = trIdx + 1; i <= endrowIdx; i++) {\n            if (r === trIdx + 1) {\n              r = this.startIndex;\n            }\n\n            var cells = this.getAutoFillCells(r, startCellIdx);\n            r++;\n            var c = 0;\n\n            for (var m = this.startCellIndex; m <= this.startCellIndex + colLen; m++) {\n              this.updateValue(i, m, cells[c]);\n              c++;\n            }\n          }\n\n          this.selectCellsByRange({\n            rowIndex: trIdx - rowLen,\n            cellIndex: startCellIdx\n          }, {\n            rowIndex: endrowIdx,\n            cellIndex: startCellIdx + colLen\n          });\n        }\n\n        break;\n    }\n  };\n\n  Selection.prototype.mouseUpHandler = function (e) {\n    document.body.classList.remove('e-disableuserselect');\n\n    if (this.element) {\n      remove(this.element);\n    }\n\n    if (this.isDragged && this.selectedRowCellIndexes.length === 1 && this.selectedRowCellIndexes[0].cellIndexes.length === 1) {\n      this.mUPTarget = parentsUntil(e.target, literals.rowCell);\n    } else {\n      this.mUPTarget = null;\n    }\n\n    if (this.isDragged && !this.isAutoFillSel && this.selectionSettings.mode === 'Cell') {\n      var target = e.target;\n      var rowIndex = parseInt(target.parentElement.getAttribute(literals.ariaRowIndex), 10);\n      var cellIndex = parseInt(target.getAttribute(literals.ariaColIndex), 10);\n      this.isDragged = false;\n      this.clearCellSelection();\n      this.selectCellsByRange({\n        rowIndex: this.startDIndex,\n        cellIndex: this.startDCellIndex\n      }, {\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      });\n    }\n\n    this.isDragged = false;\n    this.updateAutoFillPosition();\n\n    if (this.isAutoFillSel) {\n      var lastCell = parentsUntil(e.target, literals.rowCell);\n      this.endAFCell = lastCell ? lastCell : this.endCell === this.endAFCell ? this.startAFCell : this.endAFCell;\n      this.startAFCell = this.startCell;\n      this.updateStartCellsIndex();\n      this.selectLikeAutoFill(e, true);\n      this.updateAutoFillPosition();\n      this.hideAFBorders();\n      this.positionBorders();\n      this.isAutoFillSel = false;\n    }\n\n    EventHandler.remove(this.parent.getContent(), 'mousemove', this.mouseMoveHandler);\n\n    if (this.parent.frozenRows) {\n      EventHandler.remove(this.parent.getHeaderContent(), 'mousemove', this.mouseMoveHandler);\n    }\n\n    EventHandler.remove(document, 'mouseup', this.mouseUpHandler);\n  };\n\n  Selection.prototype.hideAutoFill = function () {\n    if (this.autofill) {\n      this.autofill.style.display = 'none';\n    }\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.updateAutoFillPosition = function () {\n    if (this.parent.enableAutoFill && !this.parent.isEdit && this.selectionSettings.cellSelectionMode.indexOf('Box') > -1 && !this.isRowType() && !this.isSingleSel() && this.selectedRowCellIndexes.length) {\n      var index = parseInt(this.target.getAttribute(literals.ariaColIndex), 10);\n      var rindex = parseInt(this.target.getAttribute('index'), 10);\n      var rowIndex = this.selectedRowCellIndexes[this.selectedRowCellIndexes.length - 1].rowIndex;\n      var cells = this.getAutoFillCells(rowIndex, index).filter(function (ele) {\n        return ele.style.display === '';\n      });\n      var col = this.parent.getColumnByIndex(index);\n      var isFrozenCol = col.getFreezeTableName() === 'movable';\n      var isFrozenRow = rindex < this.parent.frozenRows;\n      var isFrozenRight = this.parent.getFrozenMode() === literals.leftRight && col.getFreezeTableName() === literals.frozenRight;\n\n      if (!select('#' + this.parent.element.id + '_autofill', parentsUntil(this.target, literals.table))) {\n        if (select('#' + this.parent.element.id + '_autofill', this.parent.element)) {\n          select('#' + this.parent.element.id + '_autofill', this.parent.element).remove();\n        }\n\n        this.autofill = createElement('div', {\n          className: 'e-autofill',\n          id: this.parent.element.id + '_autofill'\n        });\n        this.autofill.style.display = 'none';\n\n        if (!isFrozenRow) {\n          if (!isFrozenCol) {\n            this.parent.getContentTable().parentElement.appendChild(this.autofill);\n          } else {\n            this.parent.contentModule.getMovableContent().appendChild(this.autofill);\n          }\n        } else {\n          if (!isFrozenCol) {\n            this.parent.getHeaderTable().parentElement.appendChild(this.autofill);\n          } else {\n            this.parent.headerModule.getMovableHeader().appendChild(this.autofill);\n          }\n        }\n\n        if (isFrozenRight) {\n          if (isFrozenRow) {\n            this.parent.getFrozenRightHeader().appendChild(this.autofill);\n          } else {\n            this.parent.getFrozenRightContent().appendChild(this.autofill);\n          }\n        }\n      }\n\n      var cell = cells[cells.length - 1];\n\n      if (cell && cell.offsetParent) {\n        var clientRect = cell.getBoundingClientRect();\n        var parentOff = cell.offsetParent.getBoundingClientRect();\n        var colWidth = this.isLastCell(cell) ? 4 : 0;\n        var rowHeight = this.isLastRow(cell) ? 3 : 0;\n\n        if (!this.parent.enableRtl) {\n          this.autofill.style.left = clientRect.left - parentOff.left + clientRect.width - 4 - colWidth + 'px';\n        } else {\n          this.autofill.style.right = parentOff.right - clientRect.right + clientRect.width - 4 - colWidth + 'px';\n        }\n\n        this.autofill.style.top = clientRect.top - parentOff.top + clientRect.height - 5 - rowHeight + 'px';\n      }\n\n      this.autofill.style.display = '';\n    } else {\n      this.hideAutoFill();\n    }\n  };\n\n  Selection.prototype.mouseDownHandler = function (e) {\n    this.mouseButton = e.button;\n    var target = e.target;\n    var gObj = this.parent;\n    var isDrag;\n    var gridElement = parentsUntil(target, 'e-grid');\n\n    if (gridElement && gridElement.id !== gObj.element.id || parentsUntil(target, literals.headerContent) && !this.parent.frozenRows || parentsUntil(target, 'e-editedbatchcell') || parentsUntil(target, literals.editedRow)) {\n      return;\n    }\n\n    if (e.shiftKey || e.ctrlKey) {\n      e.preventDefault();\n    }\n\n    if (parentsUntil(target, literals.rowCell) && !e.shiftKey && !e.ctrlKey) {\n      if (gObj.selectionSettings.cellSelectionMode.indexOf('Box') > -1 && !this.isRowType() && !this.isSingleSel()) {\n        this.isCellDrag = true;\n        isDrag = true;\n      } else if (gObj.allowRowDragAndDrop && !gObj.isEdit && !this.parent.selectionSettings.checkboxOnly) {\n        if (!this.isRowType() || this.isSingleSel() || closest(target, 'td').classList.contains('e-selectionbackground')) {\n          this.isDragged = false;\n          return;\n        }\n\n        isDrag = true;\n        this.element = this.parent.createElement('div', {\n          className: 'e-griddragarea'\n        });\n        gObj.getContent().appendChild(this.element);\n      }\n\n      if (isDrag) {\n        this.enableDrag(e, true);\n      }\n    }\n\n    this.updateStartEndCells();\n\n    if (target.classList.contains('e-autofill') || target.classList.contains('e-xlsel')) {\n      this.isCellDrag = true;\n      this.isAutoFillSel = true;\n      this.enableDrag(e);\n    }\n  };\n\n  Selection.prototype.updateStartEndCells = function () {\n    var cells = [].slice.call(this.parent.element.getElementsByClassName('e-cellselectionbackground'));\n    this.startCell = cells[0];\n    this.endCell = cells[cells.length - 1];\n\n    if (this.startCell) {\n      this.startIndex = parseInt(this.startCell.parentElement.getAttribute(literals.ariaRowIndex), 10);\n      this.startCellIndex = parseInt(parentsUntil(this.startCell, literals.rowCell).getAttribute(literals.ariaColIndex), 10);\n    }\n  };\n\n  Selection.prototype.updateStartCellsIndex = function () {\n    if (this.startCell) {\n      this.startIndex = parseInt(this.startCell.parentElement.getAttribute(literals.ariaRowIndex), 10);\n      this.startCellIndex = parseInt(parentsUntil(this.startCell, literals.rowCell).getAttribute(literals.ariaColIndex), 10);\n    }\n  };\n\n  Selection.prototype.enableDrag = function (e, isUpdate) {\n    var gObj = this.parent;\n\n    if (isUpdate) {\n      var tr = closest(e.target, 'tr');\n      this.startDIndex = parseInt(tr.getAttribute(literals.ariaRowIndex), 10);\n      this.startDCellIndex = parseInt(parentsUntil(e.target, literals.rowCell).getAttribute(literals.ariaColIndex), 10);\n    }\n\n    document.body.classList.add('e-disableuserselect');\n    var gBRect = gObj.element.getBoundingClientRect();\n    var postion = getPosition(e);\n    this.x = postion.x - gBRect.left;\n    this.y = postion.y - gBRect.top;\n    EventHandler.add(gObj.getContent(), 'mousemove', this.mouseMoveHandler, this);\n\n    if (this.parent.frozenRows) {\n      EventHandler.add(gObj.getHeaderContent(), 'mousemove', this.mouseMoveHandler, this);\n    }\n\n    EventHandler.add(document, 'mouseup', this.mouseUpHandler, this);\n  };\n\n  Selection.prototype.clearSelAfterRefresh = function (e) {\n    var isInfiniteScroll = this.parent.enableInfiniteScrolling && e.requestType === 'infiniteScroll';\n\n    if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection && !isInfiniteScroll) {\n      this.clearSelection();\n    }\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.addEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.evtHandlers = [{\n      event: events.uiUpdate,\n      handler: this.enableAfterRender\n    }, {\n      event: events.initialEnd,\n      handler: this.initializeSelection\n    }, {\n      event: events.rowSelectionComplete,\n      handler: this.onActionComplete\n    }, {\n      event: events.cellSelectionComplete,\n      handler: this.onActionComplete\n    }, {\n      event: events.inBoundModelChanged,\n      handler: this.onPropertyChanged\n    }, {\n      event: events.cellFocused,\n      handler: this.onCellFocused\n    }, {\n      event: events.beforeFragAppend,\n      handler: this.clearSelAfterRefresh\n    }, {\n      event: events.columnPositionChanged,\n      handler: this.columnPositionChanged\n    }, {\n      event: events.contentReady,\n      handler: this.initialEnd\n    }, {\n      event: events.rowsRemoved,\n      handler: this.rowsRemoved\n    }, {\n      event: events.headerRefreshed,\n      handler: this.refreshHeader\n    }];\n    addRemoveEventListener(this.parent, this.evtHandlers, true, this);\n    this.actionBeginFunction = this.actionBegin.bind(this);\n    this.actionCompleteFunction = this.actionComplete.bind(this);\n    this.parent.addEventListener(events.actionBegin, this.actionBeginFunction);\n    this.parent.addEventListener(events.actionComplete, this.actionCompleteFunction);\n    this.addEventListener_checkbox();\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    addRemoveEventListener(this.parent, this.evtHandlers, false);\n    this.parent.removeEventListener(events.actionBegin, this.actionBeginFunction);\n    this.parent.removeEventListener(events.actionComplete, this.actionCompleteFunction);\n    this.removeEventListener_checkbox();\n  };\n\n  Selection.prototype.wireEvents = function () {\n    this.isMacOS = navigator.userAgent.indexOf('Mac OS') !== -1;\n\n    if (this.isMacOS) {\n      EventHandler.add(this.parent.element, 'keydown', this.keyDownHandler, this);\n      EventHandler.add(this.parent.element, 'keyup', this.keyUpHandler, this);\n    }\n  };\n\n  Selection.prototype.unWireEvents = function () {\n    if (this.isMacOS) {\n      EventHandler.remove(this.parent.element, 'keydown', this.keyDownHandler);\n      EventHandler.remove(this.parent.element, 'keyup', this.keyUpHandler);\n    }\n  };\n\n  Selection.prototype.columnPositionChanged = function () {\n    if (!this.parent.isPersistSelection) {\n      this.clearSelection();\n    }\n  };\n\n  Selection.prototype.refreshHeader = function () {\n    this.setCheckAllState();\n  };\n\n  Selection.prototype.rowsRemoved = function (e) {\n    for (var i = 0; i < e.records.length; i++) {\n      delete this.selectedRowState[e.records[i][this.primaryKey]];\n      --this.totalRecordsCount;\n    }\n\n    this.setCheckAllState();\n  };\n\n  Selection.prototype.beforeFragAppend = function (e) {\n    if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection) {\n      this.clearSelection();\n    }\n  };\n\n  Selection.prototype.getCheckAllBox = function () {\n    return this.parent.getHeaderContent().querySelector('.e-checkselectall');\n  };\n\n  Selection.prototype.enableAfterRender = function (e) {\n    if (e.module === this.getModuleName() && e.enable) {\n      this.render();\n      this.initPerisistSelection();\n    }\n  }; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  Selection.prototype.render = function (e) {\n    EventHandler.add(this.parent.getContent(), 'mousedown', this.mouseDownHandler, this);\n    EventHandler.add(this.parent.getHeaderContent(), 'mousedown', this.mouseDownHandler, this);\n  };\n\n  Selection.prototype.onPropertyChanged = function (e) {\n    if (e.module !== this.getModuleName()) {\n      return;\n    }\n\n    var gObj = this.parent;\n\n    if (!isNullOrUndefined(e.properties.type) && this.selectionSettings.type === 'Single') {\n      if (this.selectedRowCellIndexes.length > 1) {\n        this.clearCellSelection();\n        this.prevCIdxs = undefined;\n      }\n\n      if (this.selectedRowIndexes.length > 1) {\n        this.clearRowSelection();\n        this.prevRowIndex = undefined;\n      }\n\n      if (this.selectedColumnsIndexes.length > 1) {\n        this.clearColumnSelection();\n        this.prevColIndex = undefined;\n      }\n\n      this.enableSelectMultiTouch = false;\n      this.hidePopUp();\n    }\n\n    if (!isNullOrUndefined(e.properties.mode) || !isNullOrUndefined(e.properties.cellSelectionMode)) {\n      this.clearSelection();\n      this.prevRowIndex = undefined;\n      this.prevCIdxs = undefined;\n      this.prevColIndex = undefined;\n    }\n\n    this.isPersisted = true;\n    this.checkBoxSelectionChanged();\n    this.isPersisted = false;\n    this.initPerisistSelection();\n    var checkboxColumn = this.parent.getColumns().filter(function (col) {\n      return col.type === 'checkbox';\n    });\n\n    if (checkboxColumn.length) {\n      gObj.isCheckBoxSelection = !(this.selectionSettings.checkboxMode === 'ResetOnRowClick');\n    }\n\n    this.drawBorders();\n  };\n\n  Selection.prototype.hidePopUp = function () {\n    if (this.parent.element.querySelector('.e-gridpopup').getElementsByClassName('e-rowselect').length) {\n      this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n    }\n  };\n\n  Selection.prototype.initialEnd = function (e) {\n    var isFrozen = this.parent.isFrozenGrid();\n    var isLeftRightFrozen = this.parent.getFrozenMode() === literals.leftRight;\n\n    if (!isFrozen || isFrozen && !isLeftRightFrozen && !e.args.isFrozen || isLeftRightFrozen && e.args.renderFrozenRightContent) {\n      this.parent.off(events.contentReady, this.initialEnd);\n      this.selectRow(this.parent.selectedRowIndex);\n    }\n  };\n\n  Selection.prototype.checkBoxSelectionChanged = function () {\n    var gobj = this.parent;\n    gobj.off(events.contentReady, this.checkBoxSelectionChanged);\n    var checkboxColumn = gobj.getColumns().filter(function (col) {\n      return col.type === 'checkbox';\n    });\n\n    if (checkboxColumn.length > 0) {\n      gobj.isCheckBoxSelection = true;\n      this.chkField = checkboxColumn[0].field;\n      this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n\n      if (isNullOrUndefined(this.totalRecordsCount)) {\n        this.totalRecordsCount = this.getCurrentBatchRecordChanges().length;\n      }\n\n      if (this.isSingleSel()) {\n        gobj.selectionSettings.type = 'Multiple';\n        gobj.dataBind();\n      } else {\n        this.initPerisistSelection();\n      }\n    }\n\n    if (!gobj.isCheckBoxSelection && !this.isPersisted) {\n      this.chkField = null;\n      this.initPerisistSelection();\n    }\n  };\n\n  Selection.prototype.initPerisistSelection = function () {\n    var gobj = this.parent;\n\n    if (this.parent.selectionSettings.persistSelection && this.parent.getPrimaryKeyFieldNames().length > 0) {\n      gobj.isPersistSelection = true;\n      this.ensureCheckboxFieldSelection();\n    } else if (this.parent.getPrimaryKeyFieldNames().length > 0) {\n      gobj.isPersistSelection = false;\n      this.ensureCheckboxFieldSelection();\n    } else {\n      gobj.isPersistSelection = false;\n      this.selectedRowState = {};\n    }\n  };\n\n  Selection.prototype.ensureCheckboxFieldSelection = function () {\n    var gobj = this.parent;\n    this.primaryKey = this.parent.getPrimaryKeyFieldNames()[0];\n\n    if (!gobj.enableVirtualization && this.chkField && (gobj.isPersistSelection && Object.keys(this.selectedRowState).length === 0 || !gobj.isPersistSelection)) {\n      var data = this.parent.getDataModule();\n      var query = new Query().where(this.chkField, 'equal', true);\n\n      if (!query.params) {\n        query.params = this.parent.query.params;\n      }\n\n      var dataManager = data.getData({}, query); // eslint-disable-next-line @typescript-eslint/no-this-alias\n\n      var proxy_1 = this;\n      this.parent.showSpinner();\n      dataManager.then(function (e) {\n        proxy_1.dataSuccess(e.result);\n        proxy_1.refreshPersistSelection();\n        proxy_1.parent.hideSpinner();\n      });\n    }\n  };\n\n  Selection.prototype.dataSuccess = function (res) {\n    for (var i = 0; i < res.length; i++) {\n      if (isNullOrUndefined(this.selectedRowState[res[i][this.primaryKey]]) && res[i][this.chkField]) {\n        this.selectedRowState[res[i][this.primaryKey]] = res[i][this.chkField];\n      }\n    }\n\n    this.persistSelectedData = res;\n  };\n\n  Selection.prototype.setRowSelection = function (state) {\n    if (!this.parent.getDataModule().isRemote() && !isBlazor()) {\n      if (state) {\n        if (this.parent.groupSettings.columns.length) {\n          for (var _i = 0, _a = this.getData().records; _i < _a.length; _i++) {\n            var data = _a[_i];\n            this.selectedRowState[data[this.primaryKey]] = true;\n          }\n        } else {\n          for (var _b = 0, _c = this.getData(); _b < _c.length; _b++) {\n            var data = _c[_b];\n            this.selectedRowState[data[this.primaryKey]] = true;\n          }\n        }\n      } else {\n        this.selectedRowState = {};\n      } // (this.getData()).forEach(function (data) {\n      //     this.selectedRowState[data[this.primaryKey]] = true;\n      // })\n\n    }\n  };\n\n  Selection.prototype.getData = function () {\n    return this.parent.getDataModule().dataManager.executeLocal(this.parent.getDataModule().generateQuery(true));\n  };\n\n  Selection.prototype.refreshPersistSelection = function () {\n    var rows = this.parent.getRows();\n\n    if (this.parent.isCheckBoxSelection && this.parent.isFrozenGrid()) {\n      var mtbody = this.parent.getMovableContentTbody();\n\n      if (mtbody.querySelector('.e-checkselect')) {\n        rows = this.parent.getMovableRows();\n      }\n\n      if (this.parent.getFrozenMode() === literals.leftRight) {\n        var frtbody = this.parent.getFrozenRightContentTbody();\n\n        if (frtbody.querySelector('.e-checkselect')) {\n          rows = this.parent.getFrozenRightRows();\n        }\n      }\n    }\n\n    this.totalRecordsCount = this.parent.getCurrentViewRecords().length;\n\n    if (this.parent.allowPaging) {\n      this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n    }\n\n    if (rows !== null && rows.length > 0 && (this.parent.isPersistSelection || this.chkField)) {\n      var indexes = [];\n\n      for (var j = 0; j < rows.length; j++) {\n        var rowObj = this.getRowObj(rows[j]);\n        var pKey = rowObj ? rowObj.data ? rowObj.data[this.primaryKey] : null : null;\n\n        if (pKey === null) {\n          return;\n        }\n\n        var checkState = void 0;\n        var chkBox = rows[j].querySelector('.e-checkselect');\n\n        if (this.selectedRowState[pKey] || this.parent.checkAllRows === 'Check' && this.totalRecordsCount === Object.keys(this.selectedRowState).length && this.chkAllCollec.indexOf(pKey) < 0 || this.parent.checkAllRows === 'Uncheck' && this.chkAllCollec.indexOf(pKey) > 0 || this.parent.checkAllRows === 'Intermediate' && !isNullOrUndefined(this.chkField) && rowObj.data[this.chkField]) {\n          indexes.push(parseInt(rows[j].getAttribute(literals.ariaRowIndex), 10));\n          checkState = true;\n        } else {\n          checkState = false;\n\n          if (this.checkedTarget !== chkBox && this.parent.isCheckBoxSelection) {\n            removeAddCboxClasses(chkBox.nextElementSibling, checkState);\n          }\n        }\n\n        this.updatePersistCollection(rows[j], checkState);\n      }\n\n      if (this.isSingleSel() && indexes.length > 0) {\n        this.selectRow(indexes[0], true);\n      } else {\n        this.selectRows(indexes);\n      }\n    }\n\n    if (this.parent.isCheckBoxSelection && this.getCurrentBatchRecordChanges().length > 0) {\n      this.setCheckAllState();\n    }\n  };\n\n  Selection.prototype.actionBegin = function (e) {\n    if (e.requestType === 'save' && this.parent.isPersistSelection) {\n      var editChkBox = this.parent.element.querySelector('.e-edit-checkselect');\n\n      if (!isNullOrUndefined(editChkBox)) {\n        var row = closest(editChkBox, '.' + literals.editedRow);\n\n        if (row) {\n          if (this.parent.editSettings.mode === 'Dialog') {\n            row = this.parent.element.querySelector('.e-dlgeditrow');\n          }\n\n          var rowObj = this.getRowObj(row);\n\n          if (!rowObj) {\n            return;\n          }\n\n          this.selectedRowState[rowObj.data[this.primaryKey]] = rowObj.isSelected = editChkBox.checked;\n        } else {\n          this.isCheckedOnAdd = editChkBox.checked;\n        }\n      }\n    }\n  };\n\n  Selection.prototype.actionComplete = function (e) {\n    if (e.requestType === 'save' && this.parent.isPersistSelection) {\n      if (e.action === 'add' && this.isCheckedOnAdd) {\n        var rowObj = this.parent.getRowObjectFromUID(this.parent.getRows()[e.selectedRow].getAttribute('data-uid'));\n        this.selectedRowState[rowObj.data[this.primaryKey]] = rowObj.isSelected = this.isCheckedOnAdd;\n      }\n\n      this.refreshPersistSelection();\n    }\n\n    if (e.requestType === 'delete' && this.parent.isPersistSelection) {\n      var records = e.data;\n      var data = records.slice();\n\n      for (var i = 0; i < data.length; i++) {\n        if (!isNullOrUndefined(data[i][this.primaryKey])) {\n          this.updatePersistDelete(data[i][this.primaryKey]);\n        }\n      }\n\n      this.setCheckAllState();\n      this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n    }\n\n    if (e.requestType === 'paging') {\n      this.prevRowIndex = undefined;\n      this.prevCIdxs = undefined;\n      this.prevECIdxs = undefined;\n    }\n  };\n\n  Selection.prototype.onDataBound = function () {\n    if (!this.parent.enableVirtualization && this.parent.isPersistSelection) {\n      if (this.selectedRecords.length) {\n        this.isPrevRowSelection = true;\n      }\n\n      this.refreshPersistSelection();\n    }\n\n    if (this.parent.enableVirtualization) {\n      this.setCheckAllState();\n    }\n\n    this.initialRowSelection = this.isRowType() && this.parent.element.querySelectorAll('.e-selectionbackground') && this.parent.getSelectedRows().length ? true : false;\n\n    if (this.parent.isCheckBoxSelection && !this.initialRowSelection) {\n      var totalRecords = this.parent.getRowsObject();\n      var indexes = [];\n\n      for (var i = 0; i < totalRecords.length; i++) {\n        if (totalRecords[i].isSelected) {\n          indexes.push(i);\n        }\n      }\n\n      if (indexes.length) {\n        this.selectRows(indexes);\n      }\n\n      this.initialRowSelection = true;\n    }\n  };\n\n  Selection.prototype.updatePersistSelectedData = function (checkState) {\n    if (this.parent.isPersistSelection) {\n      var rows = this.parent.getRows();\n\n      for (var i = 0; i < rows.length; i++) {\n        this.updatePersistCollection(rows[i], checkState);\n      }\n\n      if (this.parent.checkAllRows === 'Uncheck') {\n        this.setRowSelection(false);\n        this.persistSelectedData = this.parent.getDataModule().isRemote() ? this.persistSelectedData : [];\n      } else if (this.parent.checkAllRows === 'Check') {\n        this.setRowSelection(true);\n        this.persistSelectedData = !this.parent.getDataModule().isRemote() && !isBlazor() ? this.parent.groupSettings.columns.length ? this.getData().records.slice() : this.getData().slice() : this.persistSelectedData;\n      }\n    }\n  };\n\n  Selection.prototype.checkSelectAllAction = function (checkState) {\n    var cRenderer = this.getRenderer();\n    var editForm = this.parent.element.querySelector('.e-gridform');\n    this.checkedTarget = this.getCheckAllBox();\n\n    if (checkState && this.getCurrentBatchRecordChanges().length) {\n      this.parent.checkAllRows = 'Check';\n      this.updatePersistSelectedData(checkState);\n      this.selectRowsByRange(cRenderer.getVirtualRowIndex(0), cRenderer.getVirtualRowIndex(this.getCurrentBatchRecordChanges().length - 1));\n    } else {\n      this.parent.checkAllRows = 'Uncheck';\n      this.updatePersistSelectedData(checkState);\n      this.clearSelection();\n    }\n\n    this.chkAllCollec = [];\n\n    if (!isNullOrUndefined(editForm)) {\n      var editChkBox = editForm.querySelector('.e-edit-checkselect');\n\n      if (!isNullOrUndefined(editChkBox)) {\n        removeAddCboxClasses(editChkBox.nextElementSibling, checkState);\n      }\n    }\n  };\n\n  Selection.prototype.checkSelectAll = function (checkBox) {\n    var _this = this;\n\n    var stateStr = this.getCheckAllStatus(checkBox);\n    var state = stateStr === 'Check';\n    this.isHeaderCheckboxClicked = true;\n\n    if (stateStr === 'Intermediate') {\n      state = this.getCurrentBatchRecordChanges().some(function (data) {\n        return data[_this.primaryKey] in _this.selectedRowState;\n      });\n    }\n\n    if (this.parent.isPersistSelection && this.parent.allowPaging) {\n      this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n    }\n\n    this.checkSelectAllAction(!state);\n    this.target = null;\n\n    if (this.getCurrentBatchRecordChanges().length > 0) {\n      this.setCheckAllState();\n    }\n\n    this.triggerChkChangeEvent(checkBox, !state);\n  };\n\n  Selection.prototype.getCheckAllStatus = function (ele) {\n    var classes = ele ? ele.nextElementSibling.classList : this.getCheckAllBox().nextElementSibling.classList;\n    var status;\n\n    if (classes.contains('e-check')) {\n      status = 'Check';\n    } else if (classes.contains('e-uncheck')) {\n      status = 'Uncheck';\n    } else if (classes.contains('e-stop')) {\n      status = 'Intermediate';\n    } else {\n      status = 'None';\n    }\n\n    return status;\n  };\n\n  Selection.prototype.checkSelect = function (checkBox) {\n    var target = closest(this.checkedTarget, '.' + literals.rowCell);\n    var gObj = this.parent;\n    this.isMultiCtrlRequest = true;\n    var rIndex = 0;\n    this.isHeaderCheckboxClicked = false;\n\n    if (isGroupAdaptive(gObj)) {\n      var uid = target.parentElement.getAttribute('data-uid');\n      rIndex = gObj.getRows().map(function (m) {\n        return m.getAttribute('data-uid');\n      }).indexOf(uid);\n    } else {\n      rIndex = parseInt(target.parentElement.getAttribute(literals.ariaRowIndex), 10);\n    }\n\n    if (this.parent.isPersistSelection && this.parent.element.getElementsByClassName(literals.addedRow).length > 0 && this.parent.editSettings.newRowPosition === 'Top') {\n      ++rIndex;\n    }\n\n    this.rowCellSelectionHandler(rIndex, parseInt(target.getAttribute(literals.ariaColIndex), 10));\n    this.moveIntoUncheckCollection(closest(target, '.' + literals.row));\n    this.setCheckAllState();\n    this.isMultiCtrlRequest = false;\n    this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'));\n  };\n\n  Selection.prototype.moveIntoUncheckCollection = function (row) {\n    if (this.parent.checkAllRows === 'Check' || this.parent.checkAllRows === 'Uncheck') {\n      var rowObj = this.getRowObj(row);\n      var pKey = rowObj && rowObj.data ? rowObj.data[this.primaryKey] : null;\n\n      if (!pKey) {\n        return;\n      }\n\n      if (this.chkAllCollec.indexOf(pKey) < 0) {\n        this.chkAllCollec.push(pKey);\n      } else {\n        this.chkAllCollec.splice(this.chkAllCollec.indexOf(pKey), 1);\n      }\n    }\n  };\n\n  Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState) {\n    this.parent.trigger(events.checkBoxChange, {\n      checked: checkState,\n      selectedRowIndexes: this.parent.getSelectedRowIndexes(),\n      target: checkBox\n    });\n\n    if (!this.parent.isEdit) {\n      this.checkedTarget = null;\n    }\n  };\n\n  Selection.prototype.updateSelectedRowIndex = function (index) {\n    if (this.parent.isCheckBoxSelection && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && !this.parent.getDataModule().isRemote() && !(isBlazor() && this.parent.isServerRendered)) {\n      if (this.parent.checkAllRows === 'Check') {\n        this.selectedRowIndexes = [];\n        var dataLength = this.getData().length;\n\n        for (var data = 0; data < dataLength; data++) {\n          this.selectedRowIndexes.push(data);\n        }\n      } else if (this.parent.checkAllRows === 'Uncheck') {\n        this.selectedRowIndexes = [];\n      } else {\n        var row = this.parent.getRowByIndex(index);\n\n        if (index && row && row.getAttribute('aria-selected') === 'false') {\n          var selectedVal = this.selectedRowIndexes.indexOf(index);\n          this.selectedRowIndexes.splice(selectedVal, 1);\n        }\n      }\n    }\n  };\n\n  Selection.prototype.setCheckAllState = function (index, isInteraction) {\n    if (this.parent.isCheckBoxSelection || this.parent.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n      var checkToSelectAll = void 0;\n      var checkedLen = Object.keys(this.selectedRowState).length;\n\n      if (!this.parent.isPersistSelection) {\n        checkedLen = this.selectedRowIndexes.length;\n        this.totalRecordsCount = this.getCurrentBatchRecordChanges().length;\n      }\n\n      var input = this.getCheckAllBox();\n\n      if (input) {\n        var spanEle = input.nextElementSibling;\n        removeClass([spanEle], ['e-check', 'e-stop', 'e-uncheck']);\n        setChecked(input, false);\n        input.indeterminate = false;\n\n        if (checkToSelectAll || checkedLen === this.totalRecordsCount && this.totalRecordsCount || (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && !this.parent.allowPaging && !this.parent.getDataModule().isRemote() && !(isBlazor() && this.parent.isServerRendered) && this.getData().length && checkedLen === this.getData().length) {\n          addClass([spanEle], ['e-check']);\n          setChecked(input, true);\n\n          if (isInteraction) {\n            this.getRenderer().setSelection(null, true, true);\n          }\n\n          this.parent.checkAllRows = 'Check';\n        } else if (!this.selectedRowIndexes.length || checkedLen === 0 && this.getCurrentBatchRecordChanges().length === 0) {\n          addClass([spanEle], ['e-uncheck']);\n\n          if (isInteraction) {\n            this.getRenderer().setSelection(null, false, true);\n          }\n\n          this.parent.checkAllRows = 'Uncheck';\n\n          if (checkedLen === 0 && this.getCurrentBatchRecordChanges().length === 0) {\n            addClass([spanEle.parentElement], ['e-checkbox-disabled']);\n          } else {\n            removeClass([spanEle.parentElement], ['e-checkbox-disabled']);\n          }\n        } else {\n          addClass([spanEle], ['e-stop']);\n          this.parent.checkAllRows = 'Intermediate';\n          input.indeterminate = true;\n        }\n\n        if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && !this.parent.allowPaging && !this.parent.getDataModule().isRemote()) {\n          this.updateSelectedRowIndex(index);\n        }\n      }\n    }\n  };\n\n  Selection.prototype.keyDownHandler = function (e) {\n    // Below are keyCode for command key in MAC OS. Safari/Chrome(91-Left command, 93-Right Command), Opera(17), FireFox(224)\n    if ((Browser.info.name === 'chrome' || Browser.info.name === 'safari') && (e.keyCode === 91 || e.keyCode === 93) || Browser.info.name === 'opera' && e.keyCode === 17 || Browser.info.name === 'mozilla' && e.keyCode === 224) {\n      this.cmdKeyPressed = true;\n    }\n  };\n\n  Selection.prototype.keyUpHandler = function (e) {\n    if ((Browser.info.name === 'chrome' || Browser.info.name === 'safari') && (e.keyCode === 91 || e.keyCode === 93) || Browser.info.name === 'opera' && e.keyCode === 17 || Browser.info.name === 'mozilla' && e.keyCode === 224) {\n      this.cmdKeyPressed = false;\n    }\n  };\n\n  Selection.prototype.clickHandler = function (e) {\n    var target = e.target;\n    this.actualTarget = target;\n\n    if (this.selectionSettings.persistSelection) {\n      this.deSelectedData = iterateExtend(this.persistSelectedData);\n    }\n\n    if (parentsUntil(target, literals.row) || parentsUntil(target, 'e-headerchkcelldiv') || this.selectionSettings.allowColumnSelection && target.classList.contains('e-headercell')) {\n      this.isInteracted = true;\n    }\n\n    this.isMultiCtrlRequest = e.ctrlKey || this.enableSelectMultiTouch || this.isMacOS && this.cmdKeyPressed;\n    this.isMultiShiftRequest = e.shiftKey;\n    this.popUpClickHandler(e);\n    var chkSelect = false;\n    this.preventFocus = true;\n    var checkBox;\n    var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n    this.checkSelectAllClicked = checkWrap && checkWrap.getElementsByClassName('e-checkselectall') || this.selectionSettings.persistSelection && parentsUntil(target, literals.row) ? true : false;\n\n    if (checkWrap && checkWrap.querySelectorAll('.e-checkselect,.e-checkselectall').length > 0) {\n      checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n      chkSelect = true;\n    }\n\n    this.drawBorders();\n    this.updateAutoFillPosition();\n    target = parentsUntil(target, literals.rowCell);\n\n    if (target && target.parentElement.classList.contains(literals.row) && !this.parent.selectionSettings.checkboxOnly || chkSelect) {\n      if (this.parent.isCheckBoxSelection) {\n        this.isMultiCtrlRequest = true;\n      }\n\n      this.target = target;\n\n      if (!isNullOrUndefined(checkBox)) {\n        this.checkedTarget = checkBox;\n\n        if (checkBox.classList.contains('e-checkselectall')) {\n          this.checkSelectAll(checkBox);\n        } else {\n          this.checkSelect(checkBox);\n        }\n      } else {\n        var gObj = this.parent;\n        var rIndex = 0;\n\n        if (isGroupAdaptive(gObj)) {\n          var uid = target.parentElement.getAttribute('data-uid');\n          rIndex = gObj.getRows().map(function (m) {\n            return m.getAttribute('data-uid');\n          }).indexOf(uid);\n        } else {\n          rIndex = parseInt(target.parentElement.getAttribute(literals.ariaRowIndex), 10);\n        }\n\n        if (this.parent.isPersistSelection && this.parent.element.getElementsByClassName(literals.addedRow).length > 0) {\n          ++rIndex;\n        }\n\n        if (!this.mUPTarget || !this.mUPTarget.isEqualNode(target)) {\n          this.rowCellSelectionHandler(rIndex, parseInt(target.getAttribute(literals.ariaColIndex), 10));\n        }\n\n        this.parent.hoverFrozenRows(e);\n\n        if (this.parent.isCheckBoxSelection) {\n          this.moveIntoUncheckCollection(closest(target, '.' + literals.row));\n          this.setCheckAllState();\n        }\n      }\n\n      if (!this.parent.isCheckBoxSelection && Browser.isDevice && !this.isSingleSel()) {\n        this.showPopup(e);\n      }\n    } else if (e.target.classList.contains('e-headercell') && !e.target.classList.contains('e-stackedheadercell')) {\n      var uid = e.target.querySelector('.e-headercelldiv').getAttribute('e-mappinguid');\n      this.headerSelectionHandler(this.parent.getColumnIndexByUid(uid));\n    }\n\n    this.isMultiCtrlRequest = false;\n    this.isMultiShiftRequest = false;\n\n    if (isNullOrUndefined(closest(e.target, '.e-unboundcell'))) {\n      this.preventFocus = false;\n    }\n  };\n\n  Selection.prototype.popUpClickHandler = function (e) {\n    var target = e.target;\n\n    if (closest(target, '.e-headercell') || e.target.classList.contains(literals.rowCell) || closest(target, '.e-gridpopup')) {\n      if (target.classList.contains('e-rowselect')) {\n        if (!target.classList.contains('e-spanclicked')) {\n          target.classList.add('e-spanclicked');\n          this.enableSelectMultiTouch = true;\n        } else {\n          target.classList.remove('e-spanclicked');\n          this.enableSelectMultiTouch = false;\n          this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n        }\n      }\n    } else {\n      this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n    }\n  };\n\n  Selection.prototype.showPopup = function (e) {\n    if (!this.selectionSettings.enableSimpleMultiRowSelection) {\n      setCssInGridPopUp(this.parent.element.querySelector('.e-gridpopup'), e, 'e-rowselect e-icons e-icon-rowselect' + (!this.isSingleSel() && (this.selectedRecords.length > (this.parent.getFrozenColumns() ? 2 : 1) || this.selectedRowCellIndexes.length > 1) ? ' e-spanclicked' : ''));\n    }\n  };\n\n  Selection.prototype.rowCellSelectionHandler = function (rowIndex, cellIndex) {\n    if (!this.isMultiCtrlRequest && !this.isMultiShiftRequest || this.isSingleSel()) {\n      if (!this.isDragged) {\n        this.selectRow(rowIndex, this.selectionSettings.enableToggle);\n      }\n\n      this.selectCell({\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      }, this.selectionSettings.enableToggle);\n\n      if (this.selectedRowCellIndexes.length) {\n        this.updateAutoFillPosition();\n      }\n\n      this.drawBorders();\n    } else if (this.isMultiShiftRequest) {\n      if (this.parent.isCheckBoxSelection || !this.parent.isCheckBoxSelection && !closest(this.target, '.' + literals.rowCell).classList.contains(literals.gridChkBox)) {\n        this.selectRowsByRange(isUndefined(this.prevRowIndex) ? rowIndex : this.prevRowIndex, rowIndex);\n      } else {\n        this.addRowsToSelection([rowIndex]);\n      }\n\n      this.selectCellsByRange(isUndefined(this.prevCIdxs) ? {\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      } : this.prevCIdxs, {\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      });\n      this.updateAutoFillPosition();\n      this.drawBorders();\n    } else {\n      this.addRowsToSelection([rowIndex]);\n      this.addCellsToSelection([{\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      }]);\n      this.showHideBorders('none');\n    }\n\n    this.isDragged = false;\n  };\n\n  Selection.prototype.onCellFocused = function (e) {\n    if (this.parent.frozenRows && e.container.isHeader && e.byKey) {\n      if (e.keyArgs.action === 'upArrow') {\n        if (this.parent.allowFiltering) {\n          e.isJump = e.element.tagName === 'INPUT' ? true : false;\n        } else {\n          e.isJump = e.element.tagName === 'TH' ? true : false;\n        }\n      } else {\n        if (e.keyArgs.action === 'downArrow') {\n          var rIdx = Number(e.element.parentElement.getAttribute(literals.ariaRowIndex));\n          e.isJump = rIdx === 0 ? true : false;\n        } else {\n          if (e.keyArgs.action === 'ctrlHome') {\n            e.isJump = true;\n          }\n        }\n      }\n    }\n\n    var clear = this.parent.isFrozenGrid() ? (e.container.isHeader && e.element.tagName !== 'TD' && e.isJump && !this.selectionSettings.allowColumnSelection || (e.container.isContent || e.element.tagName === 'TD') && !(e.container.isSelectable || e.element.tagName === 'TD')) && !(e.byKey && e.keyArgs.action === 'space') : (e.container.isHeader && e.isJump || e.container.isContent && !e.container.isSelectable) && !(e.byKey && e.keyArgs.action === 'space') && !(e.element.classList.contains('e-detailrowexpand') || e.element.classList.contains('e-detailrowcollapse'));\n    var headerAction = e.container.isHeader && e.element.tagName !== 'TD' && !closest(e.element, '.' + literals.rowCell) && !(e.byKey && e.keyArgs.action === 'space');\n\n    if (!e.byKey || clear) {\n      if (clear && !this.parent.isCheckBoxSelection) {\n        this.clearSelection();\n      }\n\n      return;\n    }\n\n    var _a = e.container.isContent ? e.container.indexes : e.indexes,\n        rowIndex = _a[0],\n        cellIndex = _a[1];\n\n    var prev = this.focus.getPrevIndexes();\n\n    if (this.parent.frozenRows) {\n      if (e.container.isHeader && (e.element.tagName === 'TD' || closest(e.element, '.' + literals.rowCell))) {\n        var thLen = this.parent.getHeaderTable().querySelector('thead').childElementCount;\n        rowIndex -= thLen;\n        prev.rowIndex = !isNullOrUndefined(prev.rowIndex) ? prev.rowIndex - thLen : null;\n      } else {\n        rowIndex += this.parent.frozenRows;\n        prev.rowIndex = prev.rowIndex === 0 || !isNullOrUndefined(prev.rowIndex) ? prev.rowIndex + this.parent.frozenRows : null;\n      }\n    }\n\n    if (this.parent.isFrozenGrid()) {\n      var cIdx = Number(e.element.getAttribute(literals.ariaColIndex));\n      var selectedIndexes = this.parent.getSelectedRowCellIndexes();\n\n      if (selectedIndexes.length && prev.cellIndex === 0) {\n        prev.cellIndex = selectedIndexes[selectedIndexes.length - 1].cellIndexes[0];\n      }\n\n      prev.cellIndex = !isNullOrUndefined(prev.cellIndex) ? prev.cellIndex === cellIndex ? cIdx : cIdx - 1 : null;\n      cellIndex = cIdx;\n    }\n\n    if ((headerAction || ['ctrlPlusA', 'escape'].indexOf(e.keyArgs.action) === -1 && e.keyArgs.action !== 'space' && rowIndex === prev.rowIndex && cellIndex === prev.cellIndex) && !this.selectionSettings.allowColumnSelection) {\n      return;\n    }\n\n    this.preventFocus = true;\n    var columnIndex = this.getKeyColIndex(e);\n\n    if (this.needColumnSelection) {\n      cellIndex = columnIndex;\n    }\n\n    switch (e.keyArgs.action) {\n      case 'downArrow':\n      case 'upArrow':\n      case 'enter':\n      case 'shiftEnter':\n        this.target = e.element;\n        this.applyDownUpKey(rowIndex, cellIndex);\n        break;\n\n      case 'rightArrow':\n      case 'leftArrow':\n        this.applyRightLeftKey(rowIndex, cellIndex);\n        break;\n\n      case 'shiftDown':\n      case 'shiftUp':\n        this.shiftDownKey(rowIndex, cellIndex);\n        break;\n\n      case 'shiftLeft':\n      case 'shiftRight':\n        this.applyShiftLeftRightKey(rowIndex, cellIndex);\n        break;\n\n      case 'home':\n      case 'end':\n        cellIndex = e.keyArgs.action === 'end' ? this.getLastColIndex(rowIndex) : 0;\n        this.applyHomeEndKey(rowIndex, cellIndex);\n        break;\n\n      case 'ctrlHome':\n      case 'ctrlEnd':\n        this.applyCtrlHomeEndKey(rowIndex, cellIndex);\n        break;\n\n      case 'escape':\n        this.clearSelection();\n        break;\n\n      case 'ctrlPlusA':\n        this.ctrlPlusA();\n        break;\n\n      case 'space':\n        this.applySpaceSelection(e.element);\n        break;\n\n      case 'tab':\n        if (this.parent.editSettings.allowNextRowEdit) {\n          this.selectRow(rowIndex);\n        }\n\n        break;\n    }\n\n    this.needColumnSelection = false;\n    this.preventFocus = false;\n    this.positionBorders();\n    this.updateAutoFillPosition();\n  };\n\n  Selection.prototype.getKeyColIndex = function (e) {\n    var uid;\n    var index = null;\n    var stackedHeader = e.element.querySelector('.e-stackedheadercelldiv');\n\n    if (this.selectionSettings.allowColumnSelection && parentsUntil(e.element, 'e-columnheader')) {\n      this.needColumnSelection = e.container.isHeader ? true : false;\n\n      if (stackedHeader) {\n        if (e.keyArgs.action === 'rightArrow' || e.keyArgs.action === 'leftArrow') {\n          return index;\n        }\n\n        uid = stackedHeader.getAttribute('e-mappinguid');\n        var innerColumn = this.getstackedColumns(this.parent.getColumnByUid(uid).columns);\n        var lastIndex = this.parent.getColumnIndexByUid(innerColumn[innerColumn.length - 1].uid);\n        var firstIndex = this.parent.getColumnIndexByUid(innerColumn[0].uid);\n        index = this.prevColIndex >= lastIndex ? firstIndex : lastIndex;\n      } else {\n        index = this.parent.getColumnIndexByUid(e.element.querySelector('.e-headercelldiv').getAttribute('e-mappinguid'));\n      }\n    }\n\n    return index;\n  };\n  /**\n   * Apply ctrl + A key selection\n   *\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.ctrlPlusA = function () {\n    if (this.isRowType() && !this.isSingleSel()) {\n      this.selectRowsByRange(0, this.getCurrentBatchRecordChanges().length - 1);\n    }\n\n    if (this.isCellType() && !this.isSingleSel()) {\n      this.selectCellsByRange({\n        rowIndex: 0,\n        cellIndex: 0\n      }, {\n        rowIndex: this.parent.getRows().length - 1,\n        cellIndex: this.parent.getColumns().length - 1\n      });\n    }\n  };\n\n  Selection.prototype.applySpaceSelection = function (target) {\n    if (target.classList.contains('e-checkselectall')) {\n      this.checkedTarget = target;\n      this.checkSelectAll(this.checkedTarget);\n    } else {\n      if (target.classList.contains('e-checkselect')) {\n        this.checkedTarget = target;\n        this.checkSelect(this.checkedTarget);\n      }\n    }\n  };\n\n  Selection.prototype.applyDownUpKey = function (rowIndex, cellIndex) {\n    var gObj = this.parent;\n\n    if (this.parent.isCheckBoxSelection && this.parent.checkAllRows === 'Check' && !this.selectionSettings.persistSelection) {\n      this.checkSelectAllAction(false);\n      this.checkedTarget = null;\n    }\n\n    if (this.isRowType()) {\n      if (this.parent.frozenRows) {\n        this.selectRow(rowIndex, true);\n        this.applyUpDown(gObj.selectedRowIndex);\n      } else {\n        this.selectRow(rowIndex, true);\n        this.applyUpDown(gObj.selectedRowIndex);\n      }\n    }\n\n    if (this.isCellType()) {\n      this.selectCell({\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      }, true);\n    }\n\n    if (this.selectionSettings.allowColumnSelection && this.needColumnSelection) {\n      this.selectColumn(cellIndex);\n    }\n  };\n\n  Selection.prototype.applyUpDown = function (rowIndex) {\n    if (rowIndex < 0) {\n      return;\n    }\n\n    if (!this.target) {\n      this.target = this.parent.getRows()[0].children[this.parent.groupSettings.columns.length || 0];\n    }\n\n    var cIndex = parseInt(this.target.getAttribute(literals.ariaColIndex), 10);\n    var frzCols = this.parent.getFrozenColumns();\n\n    if (frzCols) {\n      if (cIndex >= frzCols) {\n        this.target = this.contentRenderer.getMovableRowByIndex(rowIndex).getElementsByClassName(literals.rowCell)[cIndex - frzCols];\n      } else {\n        this.target = this.contentRenderer.getRowByIndex(rowIndex).getElementsByClassName(literals.rowCell)[cIndex];\n      }\n    } else {\n      this.target = this.contentRenderer.getRowByIndex(rowIndex).getElementsByClassName(literals.rowCell)[cIndex];\n    }\n\n    this.addAttribute(this.target);\n  };\n\n  Selection.prototype.applyRightLeftKey = function (rowIndex, cellIndex) {\n    if (this.selectionSettings.allowColumnSelection && this.needColumnSelection) {\n      this.selectColumn(cellIndex);\n    } else if (this.isCellType()) {\n      this.selectCell({\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      }, true);\n      this.addAttribute(this.target);\n    }\n  };\n\n  Selection.prototype.applyHomeEndKey = function (rowIndex, cellIndex) {\n    if (this.isCellType()) {\n      this.selectCell({\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      }, true);\n    } else {\n      this.addAttribute(this.parent.getCellFromIndex(rowIndex, cellIndex));\n    }\n  };\n  /**\n   * Apply shift+down key selection\n   *\n   * @param {number} rowIndex - specfies the rowIndex\n   * @param {number} cellIndex - specifies the CellIndex\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.shiftDownKey = function (rowIndex, cellIndex) {\n    this.isMultiShiftRequest = true;\n\n    if (this.isRowType() && !this.isSingleSel()) {\n      if (!isUndefined(this.prevRowIndex)) {\n        this.selectRowsByRange(this.prevRowIndex, rowIndex);\n        this.applyUpDown(rowIndex);\n      } else {\n        this.selectRow(0, true);\n      }\n    }\n\n    if (this.isCellType() && !this.isSingleSel()) {\n      this.selectCellsByRange(this.prevCIdxs || {\n        rowIndex: 0,\n        cellIndex: 0\n      }, {\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      });\n    }\n\n    this.isMultiShiftRequest = false;\n  };\n\n  Selection.prototype.applyShiftLeftRightKey = function (rowIndex, cellIndex) {\n    this.isMultiShiftRequest = true;\n\n    if (this.selectionSettings.allowColumnSelection && this.needColumnSelection) {\n      this.selectColumnsByRange(this.prevColIndex, cellIndex);\n    } else {\n      this.selectCellsByRange(this.prevCIdxs, {\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      });\n    }\n\n    this.isMultiShiftRequest = false;\n  };\n\n  Selection.prototype.getstackedColumns = function (column) {\n    var innerColumnIndexes = [];\n\n    for (var i = 0, len = column.length; i < len; i++) {\n      if (column[i].columns) {\n        this.getstackedColumns(column[i].columns);\n      } else {\n        innerColumnIndexes.push(column[i]);\n      }\n    }\n\n    return innerColumnIndexes;\n  };\n\n  Selection.prototype.applyCtrlHomeEndKey = function (rowIndex, cellIndex) {\n    if (this.isRowType()) {\n      this.selectRow(rowIndex, true);\n      this.addAttribute(this.parent.getCellFromIndex(rowIndex, cellIndex));\n    }\n\n    if (this.isCellType()) {\n      this.selectCell({\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      }, true);\n    }\n  };\n\n  Selection.prototype.addRemoveClassesForRow = function (row, isAdd, clearAll) {\n    var args = [];\n\n    for (var _i = 3; _i < arguments.length; _i++) {\n      args[_i - 3] = arguments[_i];\n    }\n\n    if (row) {\n      var cells = [].slice.call(row.getElementsByClassName(literals.rowCell));\n      var detailIndentCell = row.querySelector('.e-detailrowcollapse') || row.querySelector('.e-detailrowexpand');\n      var dragdropIndentCell = row.querySelector('.e-rowdragdrop');\n\n      if (detailIndentCell) {\n        cells.push(detailIndentCell);\n      }\n\n      if (dragdropIndentCell) {\n        cells.push(dragdropIndentCell);\n      }\n\n      addRemoveActiveClasses.apply(void 0, [cells, isAdd].concat(args));\n    }\n\n    this.getRenderer().setSelection(row ? row.getAttribute('data-uid') : null, isAdd, clearAll);\n  };\n\n  Selection.prototype.isRowType = function () {\n    return this.selectionSettings.mode === 'Row' || this.selectionSettings.mode === 'Both';\n  };\n\n  Selection.prototype.isCellType = function () {\n    return this.selectionSettings.mode === 'Cell' || this.selectionSettings.mode === 'Both';\n  };\n\n  Selection.prototype.isSingleSel = function () {\n    return this.selectionSettings.type === 'Single';\n  };\n\n  Selection.prototype.getRenderer = function () {\n    if (isNullOrUndefined(this.contentRenderer)) {\n      this.contentRenderer = this.factory.getRenderer(RenderType.Content);\n    }\n\n    return this.contentRenderer;\n  };\n  /**\n   * Gets the collection of selected records.\n   *\n   * @returns {Object[]} returns the Object\n   */\n\n\n  Selection.prototype.getSelectedRecords = function () {\n    var selectedData = [];\n\n    if (!this.selectionSettings.persistSelection) {\n      selectedData = this.parent.getRowsObject().filter(function (row) {\n        return row.isSelected;\n      }).map(function (m) {\n        return m.data;\n      });\n    } else {\n      selectedData = this.persistSelectedData;\n    }\n\n    return selectedData;\n  };\n  /**\n   * Select the column by passing start column index\n   *\n   * @param {number} index - specifies the index\n   * @returns {void}\n   */\n\n\n  Selection.prototype.selectColumn = function (index) {\n    var gObj = this.parent;\n\n    if (isNullOrUndefined(gObj.getColumns()[index])) {\n      return;\n    }\n\n    var column = gObj.getColumnByIndex(index);\n    var selectedCol = gObj.getColumnHeaderByUid(column.uid);\n    var isColSelected = selectedCol.classList.contains('e-columnselection');\n\n    if (!gObj.selectionSettings.allowColumnSelection) {\n      return;\n    }\n\n    var isMultiColumns = this.selectedColumnsIndexes.length > 1 && this.selectedColumnsIndexes.indexOf(index) > -1;\n    this.clearColDependency();\n\n    if (!isColSelected || !this.selectionSettings.enableToggle || isMultiColumns) {\n      var args = {\n        columnIndex: index,\n        headerCell: selectedCol,\n        column: column,\n        cancel: false,\n        target: this.actualTarget,\n        isInteracted: this.isInteracted,\n        previousColumnIndex: this.prevColIndex,\n        isCtrlPressed: this.isMultiCtrlRequest,\n        isShiftPressed: this.isMultiShiftRequest\n      };\n      this.onActionBegin(args, events.columnSelecting);\n\n      if (args.cancel) {\n        this.disableInteracted();\n        return;\n      }\n\n      if (!(gObj.selectionSettings.enableToggle && index === this.prevColIndex && isColSelected) || isMultiColumns) {\n        this.updateColSelection(selectedCol, index);\n      }\n\n      var selectedArgs = {\n        columnIndex: index,\n        headerCell: selectedCol,\n        column: column,\n        target: this.actualTarget,\n        isInteracted: this.isInteracted,\n        previousColumnIndex: this.prevColIndex\n      };\n      this.onActionComplete(selectedArgs, events.columnSelected);\n    }\n\n    this.updateColProps(index);\n  };\n  /**\n   * Select the columns by passing start and end column index\n   *\n   * @param  {number} startIndex - specifies the start index\n   * @param  {number} endIndex - specifies the end index\n   * @returns {void}\n   */\n\n\n  Selection.prototype.selectColumnsByRange = function (startIndex, endIndex) {\n    var gObj = this.parent;\n\n    if (isNullOrUndefined(gObj.getColumns()[startIndex])) {\n      return;\n    }\n\n    var indexes = [];\n\n    if (gObj.selectionSettings.type === 'Single' || isNullOrUndefined(endIndex)) {\n      indexes[0] = startIndex;\n    } else {\n      var min = startIndex < endIndex;\n\n      for (var i = startIndex; min ? i <= endIndex : i >= endIndex; min ? i++ : i--) {\n        indexes.push(i);\n      }\n    }\n\n    this.selectColumns(indexes);\n  };\n  /**\n   * Select the columns by passing column indexes\n   *\n   * @param  {number[]} columnIndexes - specifies the columnIndexes\n   * @returns {void}\n   */\n\n\n  Selection.prototype.selectColumns = function (columnIndexes) {\n    var gObj = this.parent;\n    var selectedCol = this.getselectedCols();\n\n    if (gObj.selectionSettings.type === 'Single') {\n      columnIndexes = [columnIndexes[0]];\n    }\n\n    if (!gObj.selectionSettings.allowColumnSelection) {\n      return;\n    }\n\n    this.clearColDependency();\n    var selectingArgs = {\n      columnIndex: columnIndexes[0],\n      headerCell: selectedCol,\n      columnIndexes: columnIndexes,\n      column: gObj.getColumnByIndex(columnIndexes[0]),\n      cancel: false,\n      target: this.actualTarget,\n      isInteracted: this.isInteracted,\n      previousColumnIndex: this.prevColIndex,\n      isCtrlPressed: this.isMultiCtrlRequest,\n      isShiftPressed: this.isMultiShiftRequest\n    };\n    this.onActionBegin(selectingArgs, events.columnSelecting);\n\n    if (selectingArgs.cancel) {\n      this.disableInteracted();\n      return;\n    }\n\n    for (var i = 0, len = columnIndexes.length; i < len; i++) {\n      this.updateColSelection(gObj.getColumnHeaderByUid(gObj.getColumnByIndex(columnIndexes[i]).uid), columnIndexes[i]);\n    }\n\n    selectedCol = this.getselectedCols();\n    var selectedArgs = {\n      columnIndex: columnIndexes[0],\n      headerCell: selectedCol,\n      columnIndexes: columnIndexes,\n      column: gObj.getColumnByIndex(columnIndexes[0]),\n      target: this.actualTarget,\n      isInteracted: this.isInteracted,\n      previousColumnIndex: this.prevColIndex\n    };\n    this.onActionComplete(selectedArgs, events.columnSelected);\n    this.updateColProps(columnIndexes[0]);\n  };\n  /**\n   * Select the column with existing column by passing column index\n   *\n   * @param  {number} startIndex - specifies the start index\n   * @returns {void}\n   */\n\n\n  Selection.prototype.selectColumnWithExisting = function (startIndex) {\n    var gObj = this.parent;\n\n    if (isNullOrUndefined(gObj.getColumns()[startIndex])) {\n      return;\n    }\n\n    var newCol = gObj.getColumnHeaderByUid(gObj.getColumnByIndex(startIndex).uid);\n    var selectedCol = this.getselectedCols();\n\n    if (gObj.selectionSettings.type === 'Single') {\n      this.clearColDependency();\n    }\n\n    if (!gObj.selectionSettings.allowColumnSelection) {\n      return;\n    }\n\n    if (this.selectedColumnsIndexes.indexOf(startIndex) > -1) {\n      this.clearColumnSelection(startIndex);\n    } else {\n      var selectingArgs = {\n        columnIndex: startIndex,\n        headerCell: selectedCol,\n        columnIndexes: this.selectedColumnsIndexes,\n        column: gObj.getColumnByIndex(startIndex),\n        cancel: false,\n        target: this.actualTarget,\n        isInteracted: this.isInteracted,\n        previousColumnIndex: this.prevColIndex,\n        isCtrlPressed: this.isMultiCtrlRequest,\n        isShiftPressed: this.isMultiShiftRequest\n      };\n      this.onActionBegin(selectingArgs, events.columnSelecting);\n\n      if (selectingArgs.cancel) {\n        this.disableInteracted();\n        return;\n      }\n\n      this.updateColSelection(newCol, startIndex);\n      selectedCol = this.getselectedCols();\n      var selectedArgs = {\n        columnIndex: startIndex,\n        headerCell: selectedCol,\n        column: gObj.getColumnByIndex(startIndex),\n        columnIndexes: this.selectedColumnsIndexes,\n        target: this.actualTarget,\n        isInteracted: this.isInteracted,\n        previousColumnIndex: this.prevColIndex\n      };\n      this.onActionComplete(selectedArgs, events.columnSelected);\n    }\n\n    this.updateColProps(startIndex);\n  };\n  /**\n   * Clear the column selection\n   *\n   * @param {number} clearIndex - specifies the clearIndex\n   * @returns {void}\n   */\n\n\n  Selection.prototype.clearColumnSelection = function (clearIndex) {\n    if (this.isColumnSelected) {\n      var gObj = this.parent;\n\n      if (!isNullOrUndefined(clearIndex) && this.selectedColumnsIndexes.indexOf(clearIndex) === -1) {\n        return;\n      }\n\n      var index = !isNullOrUndefined(clearIndex) ? clearIndex : this.selectedColumnsIndexes[this.selectedColumnsIndexes.length - 1];\n      var col = gObj.getColumnByIndex(index);\n      var selectedCol = void 0;\n      var column = gObj.getColumnByIndex(index);\n\n      if (col.getFreezeTableName() === literals.frozenRight) {\n        selectedCol = gObj.getFrozenRightColumnHeaderByIndex(index);\n      } else if (col.getFreezeTableName() === 'movable') {\n        selectedCol = gObj.getMovableColumnHeaderByIndex(index);\n      } else {\n        selectedCol = gObj.getColumnHeaderByUid(column.uid);\n      }\n\n      var deselectedArgs = {\n        columnIndex: index,\n        headerCell: selectedCol,\n        columnIndexes: this.selectedColumnsIndexes,\n        column: column,\n        cancel: false,\n        target: this.actualTarget,\n        isInteracted: this.isInteracted\n      };\n      var isCanceled = this.columnDeselect(deselectedArgs, events.columnDeselecting);\n\n      if (isCanceled) {\n        this.disableInteracted();\n        return;\n      }\n\n      var selectedHeader = !isNullOrUndefined(clearIndex) ? [selectedCol] : [].slice.call(gObj.getHeaderContent().getElementsByClassName('e-columnselection'));\n      var selectedCells = this.getSelectedColumnCells(clearIndex);\n\n      for (var i = 0, len = selectedHeader.length; i < len; i++) {\n        addRemoveActiveClasses([selectedHeader[i]], false, 'e-columnselection');\n      }\n\n      for (var i = 0, len = selectedCells.length; i < len; i++) {\n        addRemoveActiveClasses([selectedCells[i]], false, 'e-columnselection');\n      }\n\n      if (!isNullOrUndefined(clearIndex)) {\n        this.selectedColumnsIndexes.splice(this.selectedColumnsIndexes.indexOf(clearIndex), 1);\n        this.parent.getColumns()[clearIndex].isSelected = false;\n      } else {\n        this.columnDeselect(deselectedArgs, events.columnDeselected);\n        this.selectedColumnsIndexes = [];\n        this.isColumnSelected = false;\n        this.parent.getColumns().filter(function (col) {\n          return col.isSelected = false;\n        });\n      }\n    }\n  };\n\n  Selection.prototype.getselectedCols = function () {\n    var gObj = this.parent;\n    var selectedCol;\n\n    if (this.selectedColumnsIndexes.length > 1) {\n      selectedCol = [];\n\n      for (var i = 0; i < this.selectedColumnsIndexes.length; i++) {\n        selectedCol.push(gObj.getColumnHeaderByUid(gObj.getColumnByIndex(this.selectedColumnsIndexes[i]).uid));\n      }\n    } else {\n      selectedCol = gObj.getColumnHeaderByUid(gObj.getColumnByIndex(this.selectedColumnsIndexes[0]).uid);\n    }\n\n    return selectedCol;\n  };\n\n  Selection.prototype.getSelectedColumnCells = function (clearIndex) {\n    var gObj = this.parent;\n    var isRowTemplate = !isNullOrUndefined(this.parent.rowTemplate);\n    var rows = isRowTemplate ? gObj.getRows() : gObj.getDataRows();\n    var movableRows;\n    var frRows;\n\n    if (gObj.isFrozenGrid() && gObj.getContent().querySelector('.' + literals.movableContent)) {\n      movableRows = isRowTemplate ? gObj.getMovableRows() : gObj.getMovableDataRows();\n      rows = gObj.addMovableRows(rows, movableRows);\n\n      if (gObj.getFrozenMode() === literals.leftRight) {\n        frRows = isRowTemplate ? gObj.getFrozenRightRows() : gObj.getFrozenRightDataRows();\n        rows = gObj.addMovableRows(rows, frRows);\n      }\n    }\n\n    var seletedcells = [];\n    var selectionString = !isNullOrUndefined(clearIndex) ? '[aria-colindex=\"' + clearIndex + '\"]' : '.e-columnselection';\n\n    for (var i = 0, len = rows.length; i < len; i++) {\n      seletedcells = seletedcells.concat([].slice.call(rows[i].querySelectorAll(selectionString)));\n    }\n\n    return seletedcells;\n  };\n\n  Selection.prototype.columnDeselect = function (args, event) {\n    if (event === 'columnDeselected') {\n      delete args.cancel;\n    }\n\n    this.onActionComplete(args, event);\n    return args.cancel;\n  };\n\n  Selection.prototype.updateColProps = function (startIndex) {\n    this.prevColIndex = startIndex;\n    this.isColumnSelected = this.selectedColumnsIndexes.length && true;\n  };\n\n  Selection.prototype.clearColDependency = function () {\n    this.clearColumnSelection();\n    this.selectedColumnsIndexes = [];\n  };\n\n  Selection.prototype.updateColSelection = function (selectedCol, startIndex) {\n    if (isNullOrUndefined(this.parent.getColumns()[startIndex])) {\n      return;\n    }\n\n    var left = this.parent.getFrozenLeftCount();\n    var movable = this.parent.getMovableColumnsCount();\n    var col = this.parent.getColumnByIndex(startIndex);\n    var isRowTemplate = !isNullOrUndefined(this.parent.rowTemplate);\n    var rows;\n    this.selectedColumnsIndexes.push(startIndex);\n    this.parent.getColumns()[startIndex].isSelected = true;\n\n    if (col.getFreezeTableName() === literals.frozenRight) {\n      startIndex = startIndex - (left + movable);\n      rows = isRowTemplate ? this.parent.getFrozenRightRows() : this.parent.getFrozenRightDataRows();\n    } else if (col.getFreezeTableName() === 'movable') {\n      startIndex = startIndex - left;\n      rows = isRowTemplate ? this.parent.getMovableRows() : this.parent.getMovableDataRows();\n    } else {\n      startIndex = startIndex + this.parent.getIndentCount();\n      rows = isRowTemplate ? this.parent.getRows() : this.parent.getDataRows();\n    }\n\n    addRemoveActiveClasses([selectedCol], true, 'e-columnselection');\n\n    for (var j = 0, len = rows.length; j < len; j++) {\n      if (rows[j].classList.contains(literals.row)) {\n        if ((rows[j].classList.contains(literals.editedRow) || rows[j].classList.contains(literals.addedRow)) && this.parent.editSettings.mode === 'Normal' && !isNullOrUndefined(rows[j].querySelector('tr').childNodes[startIndex])) {\n          addRemoveActiveClasses([rows[j].querySelector('tr').childNodes[startIndex]], true, 'e-columnselection');\n        } else if (!isNullOrUndefined(rows[j].childNodes[startIndex])) {\n          addRemoveActiveClasses([rows[j].childNodes[startIndex]], true, 'e-columnselection');\n        }\n      }\n    }\n  };\n\n  Selection.prototype.headerSelectionHandler = function (colIndex) {\n    if (!this.isMultiCtrlRequest && !this.isMultiShiftRequest || this.isSingleSel()) {\n      this.selectColumn(colIndex);\n    } else if (this.isMultiShiftRequest) {\n      this.selectColumnsByRange(isUndefined(this.prevColIndex) ? colIndex : this.prevColIndex, colIndex);\n    } else {\n      this.selectColumnWithExisting(colIndex);\n    }\n  }; // eslint-disable-next-line camelcase\n\n\n  Selection.prototype.addEventListener_checkbox = function () {\n    var _this = this;\n\n    this.parent.on(events.dataReady, this.dataReady, this);\n    this.onDataBoundFunction = this.onDataBound.bind(this);\n    this.parent.addEventListener(events.dataBound, this.onDataBoundFunction);\n    this.parent.on(events.contentReady, this.checkBoxSelectionChanged, this);\n    this.parent.on(events.beforeRefreshOnDataChange, this.initPerisistSelection, this);\n    this.parent.on(events.onEmpty, this.setCheckAllForEmptyGrid, this);\n    this.actionCompleteFunc = this.actionCompleteHandler.bind(this);\n    this.parent.addEventListener(events.actionComplete, this.actionCompleteFunc);\n    this.parent.on(events.click, this.clickHandler, this);\n\n    this.resizeEndFn = function () {\n      _this.updateAutoFillPosition();\n\n      _this.drawBorders();\n    };\n\n    this.resizeEndFn.bind(this);\n    this.parent.addEventListener(events.resizeStop, this.resizeEndFn);\n  }; // eslint-disable-next-line camelcase\n\n\n  Selection.prototype.removeEventListener_checkbox = function () {\n    this.parent.off(events.dataReady, this.dataReady);\n    this.parent.removeEventListener(events.dataBound, this.onDataBoundFunction);\n    this.parent.removeEventListener(events.actionComplete, this.actionCompleteFunc);\n    this.parent.off(events.onEmpty, this.setCheckAllForEmptyGrid);\n    this.parent.off(events.click, this.clickHandler);\n    this.parent.off(events.beforeRefreshOnDataChange, this.initPerisistSelection);\n  };\n\n  Selection.prototype.setCheckAllForEmptyGrid = function () {\n    var checkAllBox = this.getCheckAllBox();\n\n    if (checkAllBox) {\n      this.parent.isCheckBoxSelection = true;\n      var spanEle = checkAllBox.nextElementSibling;\n      removeClass([spanEle], ['e-check', 'e-stop', 'e-uncheck']);\n    }\n  };\n\n  Selection.prototype.dataReady = function (e) {\n    this.isHeaderCheckboxClicked = false;\n    var isInfinitecroll = this.parent.enableInfiniteScrolling && e.requestType === 'infiniteScroll';\n\n    if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection && !isInfinitecroll) {\n      this.disableUI = !this.parent.enableImmutableMode;\n      this.clearSelection();\n      this.setCheckAllState();\n      this.disableUI = false;\n    }\n  };\n\n  Selection.prototype.actionCompleteHandler = function (e) {\n    if (e.requestType === 'save' && this.parent.isPersistSelection) {\n      this.refreshPersistSelection();\n    }\n  };\n\n  Selection.prototype.selectRowIndex = function (index) {\n    this.parent.isSelectedRowIndexUpdating = true;\n    this.parent.selectedRowIndex = index;\n  };\n\n  Selection.prototype.disableInteracted = function () {\n    this.isInteracted = false;\n  };\n\n  Selection.prototype.activeTarget = function () {\n    this.actualTarget = this.isInteracted ? this.actualTarget : null;\n  };\n\n  return Selection;\n}();\n\nexport { Selection };","map":{"version":3,"sources":["/Users/zhouzhou/Desktop/lightfront/node_modules/@syncfusion/ej2-grids/src/grid/actions/selection.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","Browser","EventHandler","createElement","isBlazor","isNullOrUndefined","isUndefined","addClass","removeClass","remove","closest","select","Query","setCssInGridPopUp","getPosition","isGroupAdaptive","addRemoveActiveClasses","removeAddCboxClasses","getCellsByTableName","getCellByColAndRowIndex","parentsUntil","gridActionHandler","events","RenderType","iterateExtend","setChecked","addRemoveEventListener","literals","Selection","parent","selectionSettings","locator","selectedRowIndexes","selectedRowCellIndexes","selectedRecords","preventFocus","selectedColumnsIndexes","checkBoxState","isMultiShiftRequest","isMultiCtrlRequest","enableSelectMultiTouch","clearRowCheck","selectRowCheck","selectedRowState","totalRecordsCount","chkAllCollec","isCheckedOnAdd","persistSelectedData","deSelectedData","needColumnSelection","isCancelDeSelect","isPreventCellSelect","disableUI","isPersisted","cmdKeyPressed","cellselected","isMultiSelection","isAddRowsToSelection","initialRowSelection","isPrevRowSelection","autoFillRLselection","bottom","top","right_bottom","bottom_left","top_right","top_left","top_bottom","top_right_bottom","top_bottom_left","top_right_left","right_bottom_left","all_border","factory","getService","focus","addEventListener","wireEvents","initializeSelection","log","render","onActionBegin","args","type","trigger","fDataUpdate","cellIndex","rowIndex","rowObj","getRowObj","currentIndex","foreignKeyData","onActionComplete","getModuleName","destroy","gridElement","element","querySelector","gridHeader","gridContent","hidePopUp","clearSelection","removeEventListener","unWireEvents","getContent","mouseDownHandler","getHeaderContent","isEditing","editSettings","mode","editModule","formObj","validate","isEdit","isPersistSelection","getSelectedMovableRow","index","gObj","isFrozenGrid","movableContent","getMovableRowByIndex","getSelectedFrozenRightRow","getFrozenMode","leftRight","getFrozenRightContent","getFrozenRightRowByIndex","getCurrentBatchRecordChanges","currentRecords","getCurrentViewRecords","newRowPosition","concat","getBatchChanges","addedRecords","deletedRecords","primaryKey","getPrimaryKeyFieldNames","j","splice","selectRow","isToggle","enableSimpleMultiRowSelection","addRowsToSelection","selectedRow","getRowByIndex","selectedMovableRow","selectedFrozenRightRow","selectData","isRemoved","enableVirtualization","e","selectedIndex","isAvailable","notify","selectVirtualRow","frozenData","contentModule","getRowObjectByIndex","getRowObjectFromUID","getAttribute","data","persistSelection","prevSelectedData","getSelectedRecords","clearRowSelection","isRowType","isRowSelected","hasAttribute","activeTarget","can","isCtrlPressed","isShiftPressed","row","previousRow","prevRowIndex","previousRowIndex","target","actualTarget","cancel","isInteracted","isHeaderCheckboxClicked","addMovableArgs","rowSelecting","rowSelectingCallBack","_this","disableInteracted","toggle","removed","checkboxMode","clearSelectedRow","selectRowCallBack","isCheckBoxSelection","clearRow","indexOf","updateRowSelection","selectMovableRow","selectRowIndex","isHeaderCheckBoxClicked","rowSelected","updateRowProps","targetObj","mRow","frRow","mObj","previousMovRow","getMovableRows","frozenRightRow","previousFrozenRightRow","getFrozenRightDataRows","selectRowsByRange","startIndex","endIndex","selectRows","getCollectionFromIndexes","rowIndexes","isSingleSel","selectedRows","selectedData","len","currentRow","getDataRows","push","isHybrid","isJsComponent","prevRow","getRows","slice","selectRowFn","rightEle","undefined","_i","rowIndexes_1","rowIdx","indexes","getSelectedRowIndexes","checkboxOnly","checkboxColumn","getColumns","filter","col","rowIndexes_2","isUnSelected","enableToggle","rowDeselect","rowDeselecting","removeAttribute","addRemoveClassesForRow","rowDeselected","_a","max","reverse","clearRowCallBack","checkAllRows","selectedEle","updatePersistCollection","updateCheckBoxes","chkState","ensureCheckboxFieldSelection","pKey_1","isSelected","some","updatePersistDelete","pKey","isPresent","chkBox","nextElementSibling","checkedTarget","classList","contains","setCheckAllState","pop","setAttribute","getPrevIndexes","cells","contextMenuModule","mouseButton","cell","onClick","span","clearCellSelection","clearColumnSelection","rows_1","data_1","row_1","mRow_1","fRightRow_1","rowIndex_1","foreignKeyData_1","target_1","getFrozenRightRows","isRowClicked","checkSelectAllClicked","getCheckAllStatus","updatePersistSelectedData","record","movableRow","rowDeselectCallBack","cancl_1","isSingleDeSel","rowDeselectObj","rowInString","target_2","rowidx","rowidxex","data_2","foreignKey","isHeaderCheckBxClick","rowIndex_2","data_3","getSelectedMovableCell","getColumnByIndex","frzCols","getFreezeTableName","getMovableCellFromIndex","getColIndex","selectCell","isCellType","selectedCell","getCellFromIndex","isCellSelected","prevCIdxs","previousRowCell","prevECIdxs","getCellIndex","currentCell","previousRowCellIndex","cellSelecting","successCallBack","cellSelectingArgs","cncl","clearCell","updateCellSelection","selectedRowCellIndex","updateCellProps","cellSelected","rIdx","cIdx","getFrozenColumns","selectCellsByRange","min","stIndex","edIndex","cellIndexes","temp","cellSelectionMode","getLastColIndex","addAttribute","cellSelectedArgs","isDragged","selectCells","rowCellIndexes","cellSelectArgs","cellLen","addRowCellIndex","addCellsToSelection","left","getFrozenLeftCount","movable","getMovableColumnsCount","hideAutoFill","tableName","rows","frozenLeft","getRowsObject","getMovableRowsObject","frozenRight","getFrozenRightRowsObject","cellIndexes_1","idx","selectedCellIdx","cellDeselect","cellDeselecting","cellDeselected","m","colIndex","parseInt","ariaColIndex","getFrozenLeftColumnsCount","getMovableDataRows","querySelectorAll","cancl","gridChkBox","add","rowCellIndex","isRowAvail","selectedCells","getSelectedCellsElement","rowCell","currentViewData","cLen","bdrElement","showHideBorders","mRows","addMovableRows","getElementsByClassName","mouseMoveHandler","preventDefault","gBRect","getBoundingClientRect","x1","x","y1","y","position","x2","y2","tmp","isCellDrag","document","elementFromPoint","offsetLeft","clientY","style","width","height","ctrlKey","shiftKey","ariaRowIndex","startDIndex","td","startAFCell","startCell","endAFCell","selectLikeExcel","isAutoFillSel","startDCellIndex","drawBorders","showAFBorders","selectLikeAutoFill","createBorders","positionBorders","isLastCell","parentElement","isLastRow","tbody","isFirstRow","isFirstCell","setBorders","parentEle","border","bdrStr","ele","display","isFrozen","start","end","stOff","endOff","parentOff","offsetParent","rowHeight","topOffSet","frozenRows","leftOffset","rightOffset","enableRtl","right","selectDirection","updateStartEndCells","getContentTable","getMovableContent","mcBdrElement","frcBdrElement","getHeaderTable","fhBdrElement","headerModule","getMovableHeader","mhBdrElement","getFrozenRightHeader","frhBdrElement","applyBorders","applyBothFrozenBorders","str","rtl","borderWidth","includes","appendChild","className","id","styles","drawAFBorders","bdrAFBottom","createAFBorders","positionAFBorders","bdrAFLeft","firstCellTop","firstCellLeft","movableHeader","parentRect","sTop","scrollTop","sLeft","scrollLeft","offsetTop","totalHeight","clientHeight","totalWidth","clientWidth","Math","floor","bdrAFRight","bdrAFTop","leftRemove","scrolloffSet","parseFloat","topRemove","hideAFBorders","updateValue","createBeforeAutoFill","updateCell","field","value","column","innerText","beforeAutoFill","getAutoFillCells","startCellIdx","cls","isApply","startrowIdx","endrowIdx","endCellIdx","rowLen","colLen","cellIdx","endCell","c","startCellIndex","trIdx","r","mouseUpHandler","body","mUPTarget","updateAutoFillPosition","lastCell","updateStartCellsIndex","autofill","enableAutoFill","rindex","isFrozenCol","isFrozenRow","isFrozenRight","table","clientRect","colWidth","button","isDrag","headerContent","editedRow","allowRowDragAndDrop","enableDrag","isUpdate","tr","postion","clearSelAfterRefresh","isInfiniteScroll","enableInfiniteScrolling","requestType","isDestroyed","evtHandlers","event","uiUpdate","handler","enableAfterRender","initialEnd","rowSelectionComplete","cellSelectionComplete","inBoundModelChanged","onPropertyChanged","cellFocused","onCellFocused","beforeFragAppend","columnPositionChanged","contentReady","rowsRemoved","headerRefreshed","refreshHeader","actionBeginFunction","actionBegin","bind","actionCompleteFunction","actionComplete","addEventListener_checkbox","removeEventListener_checkbox","isMacOS","navigator","userAgent","keyDownHandler","keyUpHandler","records","getCheckAllBox","module","enable","initPerisistSelection","properties","prevColIndex","checkBoxSelectionChanged","isLeftRightFrozen","renderFrozenRightContent","off","selectedRowIndex","gobj","chkField","pageSettings","dataBind","keys","getDataModule","query","where","params","dataManager","getData","proxy_1","showSpinner","then","dataSuccess","result","refreshPersistSelection","hideSpinner","res","setRowSelection","state","isRemote","groupSettings","columns","_b","_c","executeLocal","generateQuery","mtbody","getMovableContentTbody","frtbody","getFrozenRightContentTbody","allowPaging","checkState","editChkBox","checked","action","onDataBound","getSelectedRows","totalRecords","checkSelectAllAction","cRenderer","getRenderer","editForm","getVirtualRowIndex","checkSelectAll","checkBox","stateStr","triggerChkChangeEvent","classes","status","checkSelect","rIndex","uid","map","addedRow","rowCellSelectionHandler","moveIntoUncheckCollection","checkBoxChange","updateSelectedRowIndex","isServerRendered","dataLength","selectedVal","isInteraction","checkToSelectAll","checkedLen","input","spanEle","indeterminate","setSelection","info","name","keyCode","clickHandler","allowColumnSelection","popUpClickHandler","chkSelect","checkWrap","isEqualNode","hoverFrozenRows","isDevice","showPopup","headerSelectionHandler","getColumnIndexByUid","container","isHeader","byKey","keyArgs","allowFiltering","isJump","tagName","Number","clear","isContent","isSelectable","headerAction","prev","thLen","childElementCount","selectedIndexes","getSelectedRowCellIndexes","columnIndex","getKeyColIndex","applyDownUpKey","applyRightLeftKey","shiftDownKey","applyShiftLeftRightKey","applyHomeEndKey","applyCtrlHomeEndKey","ctrlPlusA","applySpaceSelection","allowNextRowEdit","stackedHeader","innerColumn","getstackedColumns","getColumnByUid","lastIndex","firstIndex","applyUpDown","selectColumn","children","cIndex","contentRenderer","selectColumnsByRange","innerColumnIndexes","isAdd","clearAll","detailIndentCell","dragdropIndentCell","Content","selectedCol","getColumnHeaderByUid","isColSelected","isMultiColumns","clearColDependency","headerCell","previousColumnIndex","columnSelecting","updateColSelection","selectedArgs","columnSelected","updateColProps","selectColumns","columnIndexes","getselectedCols","selectingArgs","selectColumnWithExisting","newCol","clearIndex","isColumnSelected","getFrozenRightColumnHeaderByIndex","getMovableColumnHeaderByIndex","deselectedArgs","isCanceled","columnDeselect","columnDeselecting","selectedHeader","getSelectedColumnCells","columnDeselected","isRowTemplate","rowTemplate","movableRows","frRows","seletedcells","selectionString","getIndentCount","childNodes","on","dataReady","onDataBoundFunction","dataBound","beforeRefreshOnDataChange","onEmpty","setCheckAllForEmptyGrid","actionCompleteFunc","actionCompleteHandler","click","resizeEndFn","resizeStop","checkAllBox","isInfinitecroll","enableImmutableMode","isSelectedRowIndexUpdating"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { Browser, EventHandler, createElement, isBlazor } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, isUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { remove, closest, select } from '@syncfusion/ej2-base';\nimport { Query } from '@syncfusion/ej2-data';\nimport { setCssInGridPopUp, getPosition, isGroupAdaptive, addRemoveActiveClasses, removeAddCboxClasses } from '../base/util';\nimport { getCellsByTableName, getCellByColAndRowIndex, parentsUntil, gridActionHandler } from '../base/util';\nimport * as events from '../base/constant';\nimport { RenderType } from '../base/enum';\nimport { iterateExtend, setChecked } from '../base/util';\nimport { addRemoveEventListener } from '../base/util';\nimport * as literals from '../base/string-literals';\n/**\n * The `Selection` module is used to handle cell and row selection.\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for the Grid selection module\n     *\n     * @param {IGrid} parent - specifies the IGrid\n     * @param {SelectionSettings} selectionSettings - specifies the selectionsettings\n     * @param {ServiceLocator} locator - specifies the ServiceLocator\n     * @hidden\n     */\n    function Selection(parent, selectionSettings, locator) {\n        //Internal letiables\n        /**\n         * @hidden\n         */\n        this.selectedRowIndexes = [];\n        /**\n         * @hidden\n         */\n        this.selectedRowCellIndexes = [];\n        /**\n         * @hidden\n         */\n        this.selectedRecords = [];\n        /**\n         * @hidden\n         */\n        this.preventFocus = false;\n        /**\n         *  @hidden\n         */\n        this.selectedColumnsIndexes = [];\n        this.checkBoxState = false;\n        this.isMultiShiftRequest = false;\n        this.isMultiCtrlRequest = false;\n        this.enableSelectMultiTouch = false;\n        this.clearRowCheck = false;\n        this.selectRowCheck = false;\n        this.selectedRowState = {};\n        this.totalRecordsCount = 0;\n        this.chkAllCollec = [];\n        this.isCheckedOnAdd = false;\n        this.persistSelectedData = [];\n        this.deSelectedData = [];\n        this.needColumnSelection = false;\n        this.isCancelDeSelect = false;\n        this.isPreventCellSelect = false;\n        this.disableUI = false;\n        this.isPersisted = false;\n        this.cmdKeyPressed = false;\n        this.cellselected = false;\n        this.isMultiSelection = false;\n        this.isAddRowsToSelection = false;\n        this.initialRowSelection = false;\n        this.isPrevRowSelection = false;\n        /**\n         * @hidden\n         */\n        this.autoFillRLselection = true;\n        this.bottom = '0 0 2px 0';\n        this.top = '2px 0 0 0';\n        /* eslint-disable */\n        this.right_bottom = '0 2px 2px 0';\n        this.bottom_left = '0 0 2px 2px';\n        this.top_right = '2px 2px 0 0';\n        this.top_left = '2px 0 0 2px';\n        this.top_bottom = '2px 0 2px 0';\n        this.top_right_bottom = '2px 2px 2px 0';\n        this.top_bottom_left = '2px 0 2px 2px';\n        this.top_right_left = '2px 2px 0 2px';\n        this.right_bottom_left = '0 2px 2px 2px';\n        this.all_border = '2px';\n        this.parent = parent;\n        this.selectionSettings = selectionSettings;\n        this.factory = locator.getService('rendererFactory');\n        this.focus = locator.getService('focus');\n        this.addEventListener();\n        this.wireEvents();\n    }\n    Selection.prototype.initializeSelection = function () {\n        this.parent.log('selection_key_missing');\n        this.render();\n    };\n    /**\n     * The function used to trigger onActionBegin\n     *\n     * @param {Object} args - specifies the args\n     * @param {string} type - specifies the type\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.onActionBegin = function (args, type) {\n        this.parent.trigger(type, this.fDataUpdate(args));\n    };\n    Selection.prototype.fDataUpdate = function (args) {\n        if (!this.isMultiSelection && (!isNullOrUndefined(args.cellIndex) || !isNullOrUndefined(args.rowIndex))) {\n            var rowObj = this.getRowObj(isNullOrUndefined(args.rowIndex) ? isNullOrUndefined(args.cellIndex) ?\n                this.currentIndex : args.cellIndex.rowIndex : args.rowIndex);\n            args.foreignKeyData = rowObj.foreignKeyData;\n        }\n        return args;\n    };\n    /**\n     * The function used to trigger onActionComplete\n     *\n     * @param {Object} args - specifies the args\n     * @param {string} type - specifies the type\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.onActionComplete = function (args, type) {\n        this.parent.trigger(type, this.fDataUpdate(args));\n        this.isMultiSelection = false;\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} returns the module name\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    /**\n     * To destroy the selection\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        var gridElement = this.parent.element;\n        if (!gridElement || (!gridElement.querySelector('.' + literals.gridHeader) && !gridElement.querySelector('.' + literals.gridContent))) {\n            return;\n        }\n        this.hidePopUp();\n        this.clearSelection();\n        this.removeEventListener();\n        this.unWireEvents();\n        EventHandler.remove(this.parent.getContent(), 'mousedown', this.mouseDownHandler);\n        EventHandler.remove(this.parent.getHeaderContent(), 'mousedown', this.mouseDownHandler);\n    };\n    Selection.prototype.isEditing = function () {\n        return (this.parent.editSettings.mode === 'Normal' || (this.parent.editSettings.mode === 'Batch' && this.parent.editModule &&\n            this.parent.editModule.formObj && !this.parent.editModule.formObj.validate())) &&\n            this.parent.isEdit && !this.parent.isPersistSelection;\n    };\n    Selection.prototype.getSelectedMovableRow = function (index) {\n        var gObj = this.parent;\n        if (gObj.isFrozenGrid() && this.parent.getContent().querySelector('.' + literals.movableContent)) {\n            return gObj.getMovableRowByIndex(index);\n        }\n        return null;\n    };\n    Selection.prototype.getSelectedFrozenRightRow = function (index) {\n        var gObj = this.parent;\n        if (gObj.isFrozenGrid() && gObj.getFrozenMode() === literals.leftRight && gObj.getFrozenRightContent()) {\n            return gObj.getFrozenRightRowByIndex(index);\n        }\n        return null;\n    };\n    Selection.prototype.getCurrentBatchRecordChanges = function () {\n        var gObj = this.parent;\n        if (gObj.editSettings.mode === 'Batch' && gObj.editModule) {\n            var currentRecords = iterateExtend(this.parent.getCurrentViewRecords());\n            currentRecords = gObj.editSettings.newRowPosition === 'Bottom' ?\n                currentRecords.concat(this.parent.editModule.getBatchChanges()[literals.addedRecords]) :\n                this.parent.editModule.getBatchChanges()[literals.addedRecords].concat(currentRecords);\n            var deletedRecords = this.parent.editModule.getBatchChanges()[literals.deletedRecords];\n            var primaryKey = this.parent.getPrimaryKeyFieldNames()[0];\n            for (var i = 0; i < (deletedRecords.length); i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (deletedRecords[i][primaryKey] === currentRecords[j][primaryKey]) {\n                        currentRecords.splice(j, 1);\n                        break;\n                    }\n                }\n            }\n            return currentRecords;\n        }\n        else {\n            return gObj.getCurrentViewRecords();\n        }\n    };\n    /**\n     * Selects a row by the given index.\n     *\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    Selection.prototype.selectRow = function (index, isToggle) {\n        if (this.selectedRowIndexes.length && this.selectionSettings.enableSimpleMultiRowSelection) {\n            this.addRowsToSelection([index]);\n            return;\n        }\n        var gObj = this.parent;\n        var selectedRow = gObj.getRowByIndex(index);\n        var selectedMovableRow = this.getSelectedMovableRow(index);\n        var selectedFrozenRightRow = this.getSelectedFrozenRightRow(index);\n        var selectData;\n        var isRemoved = false;\n        if (gObj.enableVirtualization && index > -1) {\n            var e = { selectedIndex: index, isAvailable: true };\n            this.parent.notify(events.selectVirtualRow, e);\n            var frozenData = gObj.isFrozenGrid() ? gObj.contentModule.getRowObjectByIndex(index)\n                : null;\n            if (selectedRow && (gObj.getRowObjectFromUID(selectedRow.getAttribute('data-uid')) || frozenData)) {\n                selectData = frozenData ? frozenData : gObj.getRowObjectFromUID(selectedRow.getAttribute('data-uid')).data;\n            }\n            else {\n                if (e.isAvailable && !gObj.selectionSettings.persistSelection) {\n                    var prevSelectedData = this.parent.getSelectedRecords();\n                    if (prevSelectedData.length > 0) {\n                        this.clearRowSelection();\n                    }\n                }\n                return;\n            }\n        }\n        else {\n            selectData = this.getCurrentBatchRecordChanges()[index];\n        }\n        if (!this.isRowType() || !selectedRow || this.isEditing()) {\n            // if (this.isEditing()) {\n            //     gObj.selectedRowIndex = index;\n            // }\n            return;\n        }\n        var isRowSelected = selectedRow.hasAttribute('aria-selected');\n        this.activeTarget();\n        isToggle = !isToggle ? isToggle :\n            !this.selectedRowIndexes.length ? false :\n                (this.selectedRowIndexes.length === 1 ? (index === this.selectedRowIndexes[0]) : false);\n        var args;\n        var can = 'cancel';\n        if (!isToggle) {\n            args = {\n                data: selectData, rowIndex: index, isCtrlPressed: this.isMultiCtrlRequest,\n                isShiftPressed: this.isMultiShiftRequest, row: selectedRow,\n                previousRow: gObj.getRowByIndex(this.prevRowIndex),\n                previousRowIndex: this.prevRowIndex, target: this.actualTarget, cancel: false, isInteracted: this.isInteracted,\n                isHeaderCheckboxClicked: this.isHeaderCheckboxClicked\n            };\n            args = this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n            this.parent.trigger(events.rowSelecting, this.fDataUpdate(args), this.rowSelectingCallBack(args, isToggle, index, selectData, isRemoved, isRowSelected, can));\n        }\n        else {\n            this.rowSelectingCallBack(args, isToggle, index, selectData, isRemoved, isRowSelected, can)(args);\n        }\n    };\n    Selection.prototype.rowSelectingCallBack = function (args, isToggle, index, selectData, isRemoved, isRowSelected, can) {\n        var _this = this;\n        return function (args) {\n            if (!isNullOrUndefined(args) && args[can] === true) {\n                _this.disableInteracted();\n                return;\n            }\n            _this.index = index;\n            _this.toggle = isToggle;\n            _this.data = selectData;\n            _this.removed = isRemoved;\n            if (isRowSelected && _this.selectionSettings.persistSelection && !(_this.selectionSettings.checkboxMode === 'ResetOnRowClick')) {\n                _this.clearSelectedRow(index);\n                _this.selectRowCallBack();\n            }\n            else if (!isRowSelected && _this.selectionSettings.persistSelection &&\n                _this.selectionSettings.checkboxMode !== 'ResetOnRowClick') {\n                _this.selectRowCallBack();\n            }\n            if (_this.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n                _this.clearSelection();\n            }\n            if (!_this.selectionSettings.persistSelection || _this.selectionSettings.checkboxMode === 'ResetOnRowClick' ||\n                (!_this.parent.isCheckBoxSelection && _this.selectionSettings.persistSelection)) {\n                _this.selectRowCheck = true;\n                _this.clearRow();\n            }\n        };\n    };\n    Selection.prototype.selectRowCallBack = function () {\n        var gObj = this.parent;\n        var args;\n        var index = this.index;\n        var isToggle = this.toggle;\n        var selectData = this.data;\n        var isRemoved = this.removed;\n        var selectedRow = gObj.getRowByIndex(index);\n        var selectedMovableRow = this.getSelectedMovableRow(index);\n        var selectedFrozenRightRow = this.getSelectedFrozenRightRow(index);\n        if (!isToggle && !isRemoved) {\n            if (this.selectedRowIndexes.indexOf(index) <= -1) {\n                this.updateRowSelection(selectedRow, index);\n                this.selectMovableRow(selectedMovableRow, selectedFrozenRightRow, index);\n            }\n            this.selectRowIndex(index);\n        }\n        if (!isToggle) {\n            args = {\n                data: selectData, rowIndex: index,\n                row: selectedRow, previousRow: gObj.getRowByIndex(this.prevRowIndex),\n                previousRowIndex: this.prevRowIndex, target: this.actualTarget, isInteracted: this.isInteracted,\n                isHeaderCheckBoxClicked: this.isHeaderCheckboxClicked\n            };\n            args = this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n            this.onActionComplete(args, events.rowSelected);\n        }\n        this.isInteracted = false;\n        this.updateRowProps(index);\n    };\n    Selection.prototype.selectMovableRow = function (selectedMovableRow, selectedFrozenRightRow, index) {\n        if (this.parent.isFrozenGrid()) {\n            this.updateRowSelection(selectedMovableRow, index);\n            if (this.parent.getFrozenMode() === literals.leftRight && selectedFrozenRightRow) {\n                this.updateRowSelection(selectedFrozenRightRow, index);\n            }\n        }\n    };\n    Selection.prototype.addMovableArgs = function (targetObj, mRow, frRow) {\n        if (this.parent.isFrozenGrid()) {\n            var mObj = { mRow: mRow, previousMovRow: this.parent.getMovableRows()[this.prevRowIndex] };\n            var frozenRightRow = 'frozenRightRow';\n            var previousFrozenRightRow = 'previousFrozenRightRow';\n            if (this.parent.getFrozenMode() === literals.leftRight && frRow) {\n                mObj[frozenRightRow] = frRow;\n                mObj[previousFrozenRightRow] = this.parent.getFrozenRightDataRows()[this.prevRowIndex];\n            }\n            targetObj = __assign({}, targetObj, mObj);\n        }\n        return targetObj;\n    };\n    /**\n     * Selects a range of rows from start and end row indexes.\n     *\n     * @param  {number} startIndex - Specifies the start row index.\n     * @param  {number} endIndex - Specifies the end row index.\n     * @returns {void}\n     */\n    Selection.prototype.selectRowsByRange = function (startIndex, endIndex) {\n        this.selectRows(this.getCollectionFromIndexes(startIndex, endIndex));\n        this.selectRowIndex(endIndex);\n    };\n    /**\n     * Selects a collection of rows by index.\n     *\n     * @param  {number[]} rowIndexes - Specifies an array of row indexes.\n     * @returns {void}\n     */\n    Selection.prototype.selectRows = function (rowIndexes) {\n        var _this = this;\n        var gObj = this.parent;\n        var rowIndex = !this.isSingleSel() ? rowIndexes[0] : rowIndexes[rowIndexes.length - 1];\n        this.isMultiSelection = true;\n        var selectedRows = [];\n        var foreignKeyData = [];\n        var selectedMovableRow = this.getSelectedMovableRow(rowIndex);\n        var selectedFrozenRightRow = this.getSelectedFrozenRightRow(rowIndex);\n        var can = 'cancel';\n        var selectedData = [];\n        if (!this.isRowType() || this.isEditing()) {\n            return;\n        }\n        for (var i = 0, len = rowIndexes.length; i < len; i++) {\n            var currentRow = this.parent.getDataRows()[rowIndexes[i]];\n            var rowObj = this.getRowObj(currentRow);\n            if (rowObj) {\n                selectedData.push(rowObj.data);\n                selectedRows.push(currentRow);\n                foreignKeyData.push(rowObj.foreignKeyData);\n            }\n        }\n        var isHybrid = 'isHybrid';\n        this.activeTarget();\n        var args;\n        if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n            args = {\n                cancel: false,\n                rowIndexes: rowIndexes, row: selectedRows, rowIndex: rowIndex, target: this.actualTarget,\n                prevRow: gObj.getRows()[this.prevRowIndex], previousRowIndex: this.prevRowIndex,\n                isInteracted: this.isInteracted, isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest,\n                data: selectedData, isHeaderCheckboxClicked: this.isHeaderCheckboxClicked, foreignKeyData: foreignKeyData\n            };\n            args = this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n        }\n        else {\n            args = {\n                cancel: false,\n                rowIndexes: rowIndexes, rowIndex: rowIndex, previousRowIndex: this.prevRowIndex,\n                isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest,\n                data: selectedData, isHeaderCheckboxClicked: this.isHeaderCheckboxClicked, foreignKeyData: foreignKeyData\n            };\n        }\n        this.parent.trigger(events.rowSelecting, this.fDataUpdate(args), function (args) {\n            if (!isNullOrUndefined(args) && args[can] === true) {\n                _this.disableInteracted();\n                return;\n            }\n            _this.clearRow();\n            _this.selectRowIndex(rowIndexes.slice(-1)[0]);\n            var selectRowFn = function (index) {\n                _this.updateRowSelection(gObj.getRowByIndex(index), index);\n                if (gObj.isFrozenGrid()) {\n                    var rightEle = _this.parent.getFrozenMode() === literals.leftRight ? gObj.getFrozenRightRowByIndex(index)\n                        : undefined;\n                    _this.selectMovableRow(gObj.getMovableRowByIndex(index), rightEle, index);\n                }\n                _this.updateRowProps(rowIndex);\n            };\n            if (!_this.isSingleSel()) {\n                for (var _i = 0, rowIndexes_1 = rowIndexes; _i < rowIndexes_1.length; _i++) {\n                    var rowIdx = rowIndexes_1[_i];\n                    selectRowFn(rowIdx);\n                }\n            }\n            else {\n                selectRowFn(rowIndex);\n            }\n            var isHybrid = 'isHybrid';\n            if (!isBlazor() || _this.parent.isJsComponent || _this.parent[isHybrid]) {\n                args = {\n                    rowIndexes: rowIndexes, row: selectedRows, rowIndex: rowIndex, target: _this.actualTarget,\n                    prevRow: gObj.getRows()[_this.prevRowIndex], previousRowIndex: _this.prevRowIndex,\n                    data: _this.getSelectedRecords(), isInteracted: _this.isInteracted,\n                    isHeaderCheckboxClicked: _this.isHeaderCheckboxClicked, foreignKeyData: foreignKeyData\n                };\n                args = _this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n            }\n            else {\n                args = {\n                    rowIndexes: rowIndexes, rowIndex: rowIndex, previousRowIndex: _this.prevRowIndex,\n                    row: selectedRows, prevRow: gObj.getRows()[_this.prevRowIndex],\n                    data: _this.getSelectedRecords(), isInteracted: _this.isInteracted,\n                    isHeaderCheckboxClicked: _this.isHeaderCheckboxClicked, foreignKeyData: foreignKeyData\n                };\n            }\n            if (_this.isRowSelected) {\n                _this.onActionComplete(args, events.rowSelected);\n            }\n            _this.isInteracted = false;\n        });\n    };\n    /**\n     * Select rows with existing row selection by passing row indexes.\n     *\n     * @param {number} rowIndexes - Specifies the row indexes.\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.addRowsToSelection = function (rowIndexes) {\n        var gObj = this.parent;\n        var can = 'cancel';\n        var target = this.target;\n        this.isMultiSelection = true;\n        var indexes = gObj.getSelectedRowIndexes().concat(rowIndexes);\n        var selectedRow = !this.isSingleSel() ? gObj.getRowByIndex(rowIndexes[0]) :\n            gObj.getRowByIndex(rowIndexes[rowIndexes.length - 1]);\n        var selectedMovableRow = !this.isSingleSel() ? this.getSelectedMovableRow(rowIndexes[0]) :\n            this.getSelectedMovableRow(rowIndexes[rowIndexes.length - 1]);\n        var selectedFrozenRightRow = !this.isSingleSel() ? this.getSelectedFrozenRightRow(rowIndexes[0]) :\n            this.getSelectedFrozenRightRow(rowIndexes[rowIndexes.length - 1]);\n        if ((!this.isRowType() || this.isEditing()) && !this.selectionSettings.checkboxOnly) {\n            return;\n        }\n        var args;\n        var checkboxColumn = this.parent.getColumns().filter(function (col) { return col.type === 'checkbox'; });\n        for (var _i = 0, rowIndexes_2 = rowIndexes; _i < rowIndexes_2.length; _i++) {\n            var rowIndex = rowIndexes_2[_i];\n            var rowObj = this.getRowObj(rowIndex);\n            var isUnSelected = this.selectedRowIndexes.indexOf(rowIndex) > -1;\n            this.selectRowIndex(rowIndex);\n            if (isUnSelected && ((checkboxColumn.length ? true : this.selectionSettings.enableToggle) || this.isMultiCtrlRequest)) {\n                this.isAddRowsToSelection = true;\n                this.rowDeselect(events.rowDeselecting, [rowIndex], [rowObj.data], [selectedRow], [rowObj.foreignKeyData], target);\n                if (this.isCancelDeSelect) {\n                    return;\n                }\n                this.selectedRowIndexes.splice(this.selectedRowIndexes.indexOf(rowIndex), 1);\n                this.selectedRecords.splice(this.selectedRecords.indexOf(selectedRow), 1);\n                this.selectRowIndex(this.selectedRowIndexes.length ? this.selectedRowIndexes[this.selectedRowIndexes.length - 1] : -1);\n                selectedRow.removeAttribute('aria-selected');\n                this.addRemoveClassesForRow(selectedRow, false, null, 'e-selectionbackground', 'e-active');\n                if (selectedMovableRow) {\n                    this.selectedRecords.splice(this.selectedRecords.indexOf(selectedMovableRow), 1);\n                    selectedMovableRow.removeAttribute('aria-selected');\n                    this.addRemoveClassesForRow(selectedMovableRow, false, null, 'e-selectionbackground', 'e-active');\n                }\n                if (selectedFrozenRightRow) {\n                    this.selectedRecords.splice(this.selectedRecords.indexOf(selectedFrozenRightRow), 1);\n                    selectedFrozenRightRow.removeAttribute('aria-selected');\n                    this.addRemoveClassesForRow(selectedFrozenRightRow, false, null, 'e-selectionbackground', 'e-active');\n                }\n                this.rowDeselect(events.rowDeselected, [rowIndex], [rowObj.data], [selectedRow], [rowObj.foreignKeyData], target, [selectedMovableRow], undefined, [selectedFrozenRightRow]);\n                this.isInteracted = false;\n                this.isMultiSelection = false;\n                this.isAddRowsToSelection = false;\n            }\n            else {\n                var isHybrid = 'isHybrid';\n                this.activeTarget();\n                if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n                    args = {\n                        cancel: false,\n                        data: rowObj.data, rowIndex: rowIndex, row: selectedRow, target: this.actualTarget,\n                        prevRow: gObj.getRows()[this.prevRowIndex], previousRowIndex: this.prevRowIndex,\n                        isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest,\n                        foreignKeyData: rowObj.foreignKeyData, isInteracted: this.isInteracted,\n                        isHeaderCheckboxClicked: this.isHeaderCheckboxClicked, rowIndexes: indexes\n                    };\n                    args = this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n                }\n                else {\n                    args = {\n                        cancel: false,\n                        data: rowObj.data, rowIndex: rowIndex, previousRowIndex: this.prevRowIndex,\n                        isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest,\n                        foreignKeyData: rowObj.foreignKeyData, isInteracted: this.isInteracted,\n                        isHeaderCheckboxClicked: this.isHeaderCheckboxClicked, rowIndexes: indexes\n                    };\n                }\n                this.parent.trigger(events.rowSelecting, this.fDataUpdate(args));\n                if (!isNullOrUndefined(args) && args[can] === true) {\n                    this.disableInteracted();\n                    return;\n                }\n                if (this.isSingleSel()) {\n                    this.clearRow();\n                }\n                this.updateRowSelection(selectedRow, rowIndex);\n                this.selectMovableRow(selectedMovableRow, selectedFrozenRightRow, rowIndex);\n            }\n            if (!isUnSelected) {\n                var isHybrid = 'isHybrid';\n                if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n                    args = {\n                        data: rowObj.data, rowIndex: rowIndex, row: selectedRow, target: this.actualTarget,\n                        prevRow: gObj.getRows()[this.prevRowIndex], previousRowIndex: this.prevRowIndex,\n                        foreignKeyData: rowObj.foreignKeyData, isInteracted: this.isInteracted,\n                        isHeaderCheckboxClicked: this.isHeaderCheckboxClicked, rowIndexes: indexes\n                    };\n                    args = this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n                }\n                else {\n                    args = {\n                        data: rowObj.data, rowIndex: rowIndex, previousRowIndex: this.prevRowIndex,\n                        row: selectedRow, prevRow: gObj.getRows()[this.prevRowIndex],\n                        foreignKeyData: rowObj.foreignKeyData, isInteracted: this.isInteracted,\n                        isHeaderCheckboxClicked: this.isHeaderCheckboxClicked, rowIndexes: indexes\n                    };\n                }\n                this.onActionComplete(args, events.rowSelected);\n            }\n            this.isInteracted = false;\n            this.updateRowProps(rowIndex);\n            if (this.isSingleSel()) {\n                break;\n            }\n        }\n    };\n    Selection.prototype.getCollectionFromIndexes = function (startIndex, endIndex) {\n        var indexes = [];\n        // eslint-disable-next-line prefer-const\n        var _a = (startIndex <= endIndex) ?\n            { i: startIndex, max: endIndex } : { i: endIndex, max: startIndex }, i = _a.i, max = _a.max;\n        for (; i <= max; i++) {\n            indexes.push(i);\n        }\n        if (startIndex > endIndex) {\n            indexes.reverse();\n        }\n        return indexes;\n    };\n    Selection.prototype.clearRow = function () {\n        this.clearRowCheck = true;\n        this.clearRowSelection();\n    };\n    Selection.prototype.clearRowCallBack = function () {\n        if (this.isCancelDeSelect && this.parent.checkAllRows !== 'Check') {\n            return;\n        }\n        this.selectedRowIndexes = [];\n        this.selectedRecords = [];\n        this.selectRowIndex(-1);\n        if (this.isSingleSel() && this.parent.isPersistSelection) {\n            this.selectedRowState = {};\n        }\n    };\n    Selection.prototype.clearSelectedRow = function (index) {\n        if (this.toggle) {\n            var selectedEle = this.parent.getRowByIndex(index);\n            if (!this.disableUI) {\n                selectedEle.removeAttribute('aria-selected');\n                this.addRemoveClassesForRow(selectedEle, false, true, 'e-selectionbackground', 'e-active');\n            }\n            this.removed = true;\n            this.updatePersistCollection(selectedEle, false);\n            this.updateCheckBoxes(selectedEle);\n            this.selectedRowIndexes.splice(this.selectedRowIndexes.indexOf(index), 1);\n            this.selectedRecords.splice(this.selectedRecords.indexOf(this.parent.getRowByIndex(index)), 1);\n        }\n    };\n    Selection.prototype.updateRowProps = function (startIndex) {\n        this.prevRowIndex = startIndex;\n        this.isRowSelected = this.selectedRowIndexes.length && true;\n    };\n    Selection.prototype.updatePersistCollection = function (selectedRow, chkState) {\n        var _this = this;\n        if ((this.parent.isPersistSelection || this.parent.selectionSettings.persistSelection &&\n            this.parent.getPrimaryKeyFieldNames().length > 0) && !isNullOrUndefined(selectedRow)) {\n            if (!this.parent.isPersistSelection) {\n                this.ensureCheckboxFieldSelection();\n            }\n            var rowObj = this.getRowObj(selectedRow);\n            var pKey_1 = rowObj.data ? rowObj.data[this.primaryKey] : null;\n            if (pKey_1 === null) {\n                return;\n            }\n            rowObj.isSelected = chkState;\n            if (chkState) {\n                this.selectedRowState[pKey_1] = chkState;\n                if (!this.persistSelectedData.some(function (data) { return data[_this.primaryKey] === pKey_1; })) {\n                    this.persistSelectedData.push(rowObj.data);\n                }\n            }\n            else {\n                this.updatePersistDelete(pKey_1);\n            }\n        }\n    };\n    Selection.prototype.updatePersistDelete = function (pKey) {\n        var _this = this;\n        delete (this.selectedRowState[pKey]);\n        var index;\n        var isPresent = this.persistSelectedData.some(function (data, i) {\n            index = i;\n            return data[_this.primaryKey] === pKey;\n        });\n        if (isPresent) {\n            this.persistSelectedData.splice(index, 1);\n        }\n    };\n    Selection.prototype.updateCheckBoxes = function (row, chkState, rowIndex) {\n        if (!isNullOrUndefined(row)) {\n            var chkBox = row.querySelector('.e-checkselect');\n            if (!isNullOrUndefined(chkBox)) {\n                removeAddCboxClasses(chkBox.nextElementSibling, chkState);\n                setChecked(chkBox, chkState);\n                if (isNullOrUndefined(this.checkedTarget) || (!isNullOrUndefined(this.checkedTarget)\n                    && !this.checkedTarget.classList.contains('e-checkselectall'))) {\n                    this.setCheckAllState(rowIndex);\n                }\n            }\n        }\n    };\n    Selection.prototype.updateRowSelection = function (selectedRow, startIndex) {\n        if (!selectedRow) {\n            return;\n        }\n        this.selectedRowIndexes.push(startIndex);\n        var len = this.selectedRowIndexes.length;\n        if (this.parent.isFrozenGrid() && len > 1) {\n            if ((this.selectedRowIndexes[len - 2] === this.selectedRowIndexes[len - 1])) {\n                this.selectedRowIndexes.pop();\n            }\n        }\n        this.selectedRecords.push(selectedRow);\n        selectedRow.setAttribute('aria-selected', 'true');\n        this.updatePersistCollection(selectedRow, true);\n        this.updateCheckBoxes(selectedRow, true);\n        this.addRemoveClassesForRow(selectedRow, true, null, 'e-selectionbackground', 'e-active');\n        if (!this.preventFocus) {\n            var target = this.focus.getPrevIndexes().cellIndex ?\n                selectedRow.cells[this.focus.getPrevIndexes().cellIndex] :\n                selectedRow.querySelector('.e-selectionbackground:not(.e-hide):not(.e-detailrowcollapse):not(.e-detailrowexpand)');\n            if (this.parent.contextMenuModule && this.mouseButton === 2) {\n                target = this.parent.contextMenuModule.cell;\n            }\n            if (!target) {\n                return;\n            }\n            this.focus.onClick({ target: target }, true);\n        }\n    };\n    /**\n     * Deselects the currently selected rows and cells.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.clearSelection = function () {\n        if (this.selectionSettings.persistSelection && this.persistSelectedData.length) {\n            this.deSelectedData = iterateExtend(this.persistSelectedData);\n        }\n        if (!this.parent.isPersistSelection || (this.parent.isPersistSelection && !this.parent.isEdit) ||\n            (!isNullOrUndefined(this.checkedTarget) && this.checkedTarget.classList.contains('e-checkselectall'))) {\n            var span = this.parent.element.querySelector('.e-gridpopup').querySelector('span');\n            if (span.classList.contains('e-rowselect')) {\n                span.classList.remove('e-spanclicked');\n            }\n            if (this.parent.isPersistSelection) {\n                this.persistSelectedData = [];\n                this.selectedRowState = {};\n            }\n            this.clearRowSelection();\n            this.clearCellSelection();\n            this.clearColumnSelection();\n            this.prevRowIndex = undefined;\n            this.enableSelectMultiTouch = false;\n            this.isInteracted = false;\n        }\n    };\n    /**\n     * Deselects the currently selected rows.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.clearRowSelection = function () {\n        var _this = this;\n        if (this.isRowSelected) {\n            var gObj = this.parent;\n            var rows_1 = this.parent.getDataRows();\n            var data_1 = [];\n            var row_1 = [];\n            var mRow_1 = [];\n            var fRightRow_1 = [];\n            var rowIndex_1 = [];\n            var foreignKeyData_1 = [];\n            var target_1 = this.target;\n            for (var i = 0, len = this.selectedRowIndexes.length; i < len; i++) {\n                var currentRow = this.parent.editSettings.mode === 'Batch' ?\n                    this.parent.getRows()[this.selectedRowIndexes[i]]\n                    : this.parent.getDataRows()[this.selectedRowIndexes[i]];\n                var rowObj = this.getRowObj(currentRow);\n                if (rowObj) {\n                    data_1.push(rowObj.data);\n                    row_1.push(currentRow);\n                    rowIndex_1.push(this.selectedRowIndexes[i]);\n                    foreignKeyData_1.push(rowObj.foreignKeyData);\n                }\n                if (gObj.isFrozenGrid()) {\n                    mRow_1.push(gObj.getMovableRows()[this.selectedRowIndexes[i]]);\n                    if (gObj.getFrozenMode() === literals.leftRight) {\n                        fRightRow_1.push(gObj.getFrozenRightRows()[this.selectedRowIndexes[i]]);\n                    }\n                }\n            }\n            if (this.selectionSettings.persistSelection && this.selectionSettings.checkboxMode !== 'ResetOnRowClick') {\n                this.isRowClicked = this.checkSelectAllClicked ? true : false;\n            }\n            this.rowDeselect(events.rowDeselecting, rowIndex_1, data_1, row_1, foreignKeyData_1, target_1, mRow_1, function () {\n                if (_this.isCancelDeSelect && (_this.isRowClicked || _this.checkSelectAllClicked || (_this.isInteracted &&\n                    !_this.parent.isPersistSelection))) {\n                    if (_this.parent.isPersistSelection) {\n                        if (_this.getCheckAllStatus(_this.parent.element.querySelector('.e-checkselectall')) === 'Intermediate') {\n                            for (var i = 0; i < _this.selectedRecords.length; i++) {\n                                _this.updatePersistCollection(_this.selectedRecords[i], true);\n                            }\n                        }\n                        else {\n                            _this.parent.checkAllRows = 'Check';\n                            _this.updatePersistSelectedData(true);\n                        }\n                    }\n                    if (_this.clearRowCheck) {\n                        _this.clearRowCallBack();\n                        _this.clearRowCheck = false;\n                        if (_this.selectRowCheck) {\n                            _this.selectRowCallBack();\n                            _this.selectRowCheck = false;\n                        }\n                    }\n                    return;\n                }\n                var element = [].slice.call(rows_1.filter(function (record) { return record.hasAttribute('aria-selected'); }));\n                for (var j = 0; j < element.length; j++) {\n                    if (!_this.disableUI || isBlazor()) {\n                        element[j].removeAttribute('aria-selected');\n                        _this.addRemoveClassesForRow(element[j], false, true, 'e-selectionbackground', 'e-active');\n                    }\n                    // tslint:disable-next-line:align\n                    if (!_this.isPrevRowSelection) {\n                        _this.updatePersistCollection(element[j], false);\n                    }\n                    _this.updateCheckBoxes(element[j]);\n                }\n                for (var i = 0, len = _this.selectedRowIndexes.length; i < len; i++) {\n                    var movableRow = _this.getSelectedMovableRow(_this.selectedRowIndexes[i]);\n                    if (movableRow) {\n                        if (!_this.disableUI || isBlazor()) {\n                            movableRow.removeAttribute('aria-selected');\n                            _this.addRemoveClassesForRow(movableRow, false, true, 'e-selectionbackground', 'e-active');\n                        }\n                        _this.updateCheckBoxes(movableRow);\n                        if (!_this.isPrevRowSelection) {\n                            _this.updatePersistCollection(movableRow, false);\n                        }\n                    }\n                    var frRow = _this.getSelectedFrozenRightRow(_this.selectedRowIndexes[i]);\n                    if (frRow) {\n                        if (!_this.disableUI) {\n                            frRow.removeAttribute('aria-selected');\n                            _this.addRemoveClassesForRow(frRow, false, true, 'e-selectionbackground', 'e-active');\n                        }\n                        _this.updateCheckBoxes(frRow);\n                        if (!_this.isPrevRowSelection) {\n                            _this.updatePersistCollection(frRow, false);\n                        }\n                    }\n                }\n                _this.selectedRowIndexes = [];\n                _this.selectedRecords = [];\n                _this.isRowSelected = false;\n                _this.selectRowIndex(-1);\n                _this.isPrevRowSelection = false;\n                _this.rowDeselect(events.rowDeselected, rowIndex_1, data_1, row_1, foreignKeyData_1, target_1, mRow_1, undefined, fRightRow_1);\n                if (_this.clearRowCheck) {\n                    _this.clearRowCallBack();\n                    _this.clearRowCheck = false;\n                    if (_this.selectRowCheck) {\n                        _this.selectRowCallBack();\n                        _this.selectRowCheck = false;\n                    }\n                }\n            }, fRightRow_1);\n        }\n        else {\n            if (this.clearRowCheck) {\n                this.clearRowCallBack();\n                this.clearRowCheck = false;\n                if (this.selectRowCheck) {\n                    this.selectRowCallBack();\n                    this.selectRowCheck = false;\n                }\n            }\n        }\n    };\n    Selection.prototype.rowDeselect = function (type, rowIndex, data, row, foreignKeyData, target, mRow, rowDeselectCallBack, frozenRightRow) {\n        var _this = this;\n        if ((this.selectionSettings.persistSelection && (this.isRowClicked || this.checkSelectAllClicked)) ||\n            !this.selectionSettings.persistSelection) {\n            var cancl_1 = 'cancel';\n            var isSingleDeSel = rowIndex.length === 1 && this.deSelectedData.length === 1;\n            var rowDeselectObj = {\n                rowIndex: rowIndex[0], data: this.selectionSettings.persistSelection && (this.parent.checkAllRows === 'Uncheck' &&\n                    !isSingleDeSel) && this.selectionSettings.checkboxMode !== 'ResetOnRowClick' ? this.deSelectedData : data,\n                foreignKeyData: foreignKeyData, cancel: false, isInteracted: this.isInteracted,\n                isHeaderCheckboxClicked: this.isHeaderCheckboxClicked\n            };\n            if (type === 'rowDeselected') {\n                delete rowDeselectObj.cancel;\n            }\n            var isHybrid = 'isHybrid';\n            if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n                var rowInString = 'row';\n                var target_2 = 'target';\n                var rowidx = 'rowIndex';\n                var rowidxex = 'rowIndexes';\n                var data_2 = 'data';\n                var foreignKey = 'foreignKeyData';\n                rowDeselectObj[rowInString] = row;\n                rowDeselectObj[target_2] = this.actualTarget;\n                var isHeaderCheckBxClick = this.actualTarget && !isNullOrUndefined(closest(this.actualTarget, 'thead'));\n                if (isHeaderCheckBxClick || rowIndex.length > 1) {\n                    rowDeselectObj[rowidx] = rowIndex[0];\n                    rowDeselectObj[rowidxex] = rowIndex;\n                }\n                else if (rowIndex.length === 1) {\n                    rowDeselectObj[data_2] = rowDeselectObj[data_2][0];\n                    rowDeselectObj[rowInString] = rowDeselectObj[rowInString][0];\n                    rowDeselectObj[foreignKey] = rowDeselectObj[foreignKey][0];\n                    if (this.isAddRowsToSelection) {\n                        rowDeselectObj[rowidxex] = rowIndex;\n                    }\n                }\n            }\n            else {\n                var rowIndex_2 = 'rowIndex';\n                var data_3 = 'data';\n                rowDeselectObj[rowIndex_2] = rowDeselectObj[rowIndex_2][rowDeselectObj[rowIndex_2].length - 1];\n                rowDeselectObj[data_3] = rowDeselectObj[data_3][rowDeselectObj[data_3].length - 1];\n            }\n            this.parent.trigger(type, (!isBlazor() || this.parent.isJsComponent) && this.parent.isFrozenGrid() ? __assign({}, rowDeselectObj, { mRow: mRow, frozenRightRow: frozenRightRow }) : rowDeselectObj, function (args) {\n                _this.isCancelDeSelect = args[cancl_1];\n                if (!_this.isCancelDeSelect || (!_this.isRowClicked && !_this.isInteracted && !_this.checkSelectAllClicked)) {\n                    _this.updatePersistCollection(row[0], false);\n                    _this.updateCheckBoxes(row[0], undefined, rowIndex[0]);\n                    if (mRow) {\n                        _this.updateCheckBoxes(mRow[0], undefined, rowIndex[0]);\n                    }\n                    if (frozenRightRow) {\n                        _this.updateCheckBoxes(frozenRightRow[0], undefined, rowIndex[0]);\n                    }\n                }\n                if (rowDeselectCallBack !== undefined) {\n                    rowDeselectCallBack();\n                }\n            });\n        }\n        else if (this.selectionSettings.persistSelection && !this.isInteracted) {\n            if (rowDeselectCallBack !== undefined) {\n                rowDeselectCallBack();\n            }\n        }\n    };\n    Selection.prototype.getRowObj = function (row) {\n        if (row === void 0) { row = this.currentIndex; }\n        if (isNullOrUndefined(row)) {\n            return {};\n        }\n        if (typeof row === 'number') {\n            row = this.parent.getRowByIndex(row);\n        }\n        if (row) {\n            return this.parent.getRowObjectFromUID(row.getAttribute('data-uid')) || {};\n        }\n        return {};\n    };\n    Selection.prototype.getSelectedMovableCell = function (cellIndex) {\n        var gObj = this.parent;\n        var col = gObj.getColumnByIndex(cellIndex.cellIndex);\n        var frzCols = gObj.isFrozenGrid();\n        if (frzCols) {\n            if (col.getFreezeTableName() === 'movable') {\n                return gObj.getMovableCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n            }\n            return null;\n        }\n        return null;\n    };\n    /**\n     * Selects a cell by the given index.\n     *\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    Selection.prototype.selectCell = function (cellIndex, isToggle) {\n        if (!this.isCellType()) {\n            return;\n        }\n        var gObj = this.parent;\n        var selectedCell = this.getSelectedMovableCell(cellIndex);\n        var args;\n        if (!selectedCell) {\n            selectedCell = gObj.getCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n        }\n        this.currentIndex = cellIndex.rowIndex;\n        var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n        if (!this.isCellType() || !selectedCell || this.isEditing()) {\n            return;\n        }\n        var isCellSelected = selectedCell.classList.contains('e-cellselectionbackground');\n        isToggle = !isToggle ? isToggle : (!isUndefined(this.prevCIdxs) &&\n            cellIndex.rowIndex === this.prevCIdxs.rowIndex && cellIndex.cellIndex === this.prevCIdxs.cellIndex &&\n            isCellSelected);\n        if (!isToggle) {\n            args = {\n                data: selectedData, cellIndex: cellIndex,\n                isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest,\n                previousRowCell: this.prevECIdxs ?\n                    this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined,\n                cancel: false\n            };\n            if (!isBlazor() || this.parent.isJsComponent) {\n                var currentCell = 'currentCell';\n                args[currentCell] = selectedCell;\n                var previousRowCellIndex = 'previousRowCellIndex';\n                args[previousRowCellIndex] = this.prevECIdxs;\n            }\n            this.parent.trigger(events.cellSelecting, this.fDataUpdate(args), this.successCallBack(args, isToggle, cellIndex, selectedCell, selectedData));\n            this.cellselected = true;\n        }\n        else {\n            this.successCallBack(args, isToggle, cellIndex, selectedCell, selectedData)(args);\n        }\n    };\n    Selection.prototype.successCallBack = function (cellSelectingArgs, isToggle, cellIndex, selectedCell, selectedData) {\n        var _this = this;\n        return function (cellSelectingArgs) {\n            var cncl = 'cancel';\n            var currentCell = 'currentCell';\n            if (!isNullOrUndefined(cellSelectingArgs) && cellSelectingArgs[cncl] === true) {\n                return;\n            }\n            if (!isToggle) {\n                cellSelectingArgs[currentCell] = cellSelectingArgs[currentCell] ? cellSelectingArgs[currentCell] : selectedCell;\n            }\n            _this.clearCell();\n            if (!isToggle) {\n                _this.updateCellSelection(selectedCell, cellIndex.rowIndex, cellIndex.cellIndex);\n            }\n            if (!isToggle) {\n                var args = void 0;\n                var isHybrid = 'isHybrid';\n                if (!isBlazor() || _this.parent.isJsComponent || _this.parent[isHybrid]) {\n                    args = {\n                        data: selectedData, cellIndex: cellIndex, currentCell: selectedCell,\n                        selectedRowCellIndex: _this.selectedRowCellIndexes,\n                        previousRowCell: _this.prevECIdxs ?\n                            _this.getCellIndex(_this.prevECIdxs.rowIndex, _this.prevECIdxs.cellIndex) : undefined\n                    };\n                    var previousRowCellIndex = 'previousRowCellIndex';\n                    args[previousRowCellIndex] = _this.prevECIdxs;\n                }\n                else {\n                    args = { data: selectedData, cellIndex: cellIndex, selectedRowCellIndex: _this.selectedRowCellIndexes };\n                }\n                _this.updateCellProps(cellIndex, cellIndex);\n                _this.onActionComplete(args, events.cellSelected);\n            }\n        };\n    };\n    Selection.prototype.getCellIndex = function (rIdx, cIdx) {\n        return (this.parent.getFrozenColumns() ? (cIdx >= this.parent.getFrozenColumns() ? this.parent.getMovableCellFromIndex(rIdx, cIdx)\n            : this.parent.getCellFromIndex(rIdx, cIdx)) : this.parent.getCellFromIndex(rIdx, cIdx));\n    };\n    /**\n     * Selects a range of cells from start and end indexes.\n     *\n     * @param  {IIndex} startIndex - Specifies the row and column's start index.\n     * @param  {IIndex} endIndex - Specifies the row and column's end index.\n     * @returns {void}\n     */\n    Selection.prototype.selectCellsByRange = function (startIndex, endIndex) {\n        var _this = this;\n        if (!this.isCellType()) {\n            return;\n        }\n        var gObj = this.parent;\n        var selectedCell = this.getSelectedMovableCell(startIndex);\n        var frzCols = gObj.getFrozenColumns();\n        if (!selectedCell) {\n            selectedCell = gObj.getCellFromIndex(startIndex.rowIndex, startIndex.cellIndex);\n        }\n        var min;\n        var max;\n        var stIndex = startIndex;\n        var edIndex = endIndex = endIndex ? endIndex : startIndex;\n        var cellIndexes;\n        this.currentIndex = startIndex.rowIndex;\n        var cncl = 'cancel';\n        var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n        if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n            return;\n        }\n        var args = {\n            data: selectedData, cellIndex: startIndex, currentCell: selectedCell,\n            isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest,\n            previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n        };\n        if (!isBlazor()) {\n            var previousRowCellIndex = 'previousRowCellIndex';\n            args[previousRowCellIndex] = this.prevECIdxs;\n        }\n        this.parent.trigger(events.cellSelecting, this.fDataUpdate(args), function (cellSelectingArgs) {\n            if (!isNullOrUndefined(cellSelectingArgs) && cellSelectingArgs[cncl] === true) {\n                return;\n            }\n            _this.clearCell();\n            if (startIndex.rowIndex > endIndex.rowIndex) {\n                var temp = startIndex;\n                startIndex = endIndex;\n                endIndex = temp;\n            }\n            for (var i = startIndex.rowIndex; i <= endIndex.rowIndex; i++) {\n                if (_this.selectionSettings.cellSelectionMode.indexOf('Box') < 0) {\n                    min = i === startIndex.rowIndex ? (startIndex.cellIndex) : 0;\n                    max = i === endIndex.rowIndex ? (endIndex.cellIndex) : _this.getLastColIndex(i);\n                }\n                else {\n                    min = startIndex.cellIndex;\n                    max = endIndex.cellIndex;\n                }\n                cellIndexes = [];\n                for (var j = min < max ? min : max, len = min > max ? min : max; j <= len; j++) {\n                    if (frzCols) {\n                        if (j < frzCols) {\n                            selectedCell = gObj.getCellFromIndex(i, j);\n                        }\n                        else {\n                            selectedCell = gObj.getMovableCellFromIndex(i, j);\n                        }\n                    }\n                    else {\n                        selectedCell = gObj.getCellFromIndex(i, j);\n                    }\n                    if (!selectedCell) {\n                        continue;\n                    }\n                    cellIndexes.push(j);\n                    _this.updateCellSelection(selectedCell);\n                    _this.addAttribute(selectedCell);\n                }\n                _this.selectedRowCellIndexes.push({ rowIndex: i, cellIndexes: cellIndexes });\n            }\n            var cellSelectedArgs;\n            var isHybrid = 'isHybrid';\n            if (!isBlazor() || _this.parent.isJsComponent || _this.parent[isHybrid]) {\n                cellSelectedArgs = {\n                    data: selectedData, cellIndex: edIndex, currentCell: gObj.getCellFromIndex(edIndex.rowIndex, edIndex.cellIndex),\n                    selectedRowCellIndex: _this.selectedRowCellIndexes,\n                    previousRowCell: _this.prevECIdxs ? _this.getCellIndex(_this.prevECIdxs.rowIndex, _this.prevECIdxs.cellIndex) : undefined\n                };\n                var previousRowCellIndex = 'previousRowCellIndex';\n                cellSelectedArgs[previousRowCellIndex] = _this.prevECIdxs;\n            }\n            else {\n                cellSelectedArgs = { data: selectedData, cellIndex: edIndex, selectedRowCellIndex: _this.selectedRowCellIndexes };\n            }\n            if (!_this.isDragged) {\n                _this.onActionComplete(cellSelectedArgs, events.cellSelected);\n                _this.cellselected = true;\n            }\n            _this.updateCellProps(stIndex, edIndex);\n        });\n    };\n    /**\n     * Selects a collection of cells by row and column indexes.\n     *\n     * @param  {ISelectedCell[]} rowCellIndexes - Specifies the row and column indexes.\n     * @returns {void}\n     */\n    Selection.prototype.selectCells = function (rowCellIndexes) {\n        if (!this.isCellType()) {\n            return;\n        }\n        var gObj = this.parent;\n        var selectedCell = this.getSelectedMovableCell(rowCellIndexes[0]);\n        var frzCols = gObj.getFrozenColumns();\n        if (!selectedCell) {\n            selectedCell = gObj.getCellFromIndex(rowCellIndexes[0].rowIndex, rowCellIndexes[0].cellIndexes[0]);\n        }\n        this.currentIndex = rowCellIndexes[0].rowIndex;\n        var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n        if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n            return;\n        }\n        var cellSelectArgs;\n        var isHybrid = 'isHybrid';\n        if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n            cellSelectArgs = {\n                data: selectedData, cellIndex: rowCellIndexes[0].cellIndexes[0],\n                currentCell: selectedCell, isCtrlPressed: this.isMultiCtrlRequest,\n                isShiftPressed: this.isMultiShiftRequest,\n                previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n            };\n            var previousRowCellIndex = 'previousRowCellIndex';\n            cellSelectArgs[previousRowCellIndex] = this.prevECIdxs;\n        }\n        else {\n            cellSelectArgs = {\n                data: selectedData, cellIndex: rowCellIndexes[0].cellIndexes[0],\n                isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest\n            };\n        }\n        this.onActionBegin(cellSelectArgs, events.cellSelecting);\n        for (var i = 0, len = rowCellIndexes.length; i < len; i++) {\n            for (var j = 0, cellLen = rowCellIndexes[i].cellIndexes.length; j < cellLen; j++) {\n                if (frzCols) {\n                    if (rowCellIndexes[i].cellIndexes[j] < frzCols) {\n                        selectedCell = gObj.getCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);\n                    }\n                    else {\n                        selectedCell = gObj.getMovableCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);\n                    }\n                }\n                else {\n                    selectedCell = gObj.getCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);\n                }\n                if (!selectedCell) {\n                    continue;\n                }\n                this.updateCellSelection(selectedCell);\n                this.addAttribute(selectedCell);\n                this.addRowCellIndex({ rowIndex: rowCellIndexes[i].rowIndex, cellIndex: rowCellIndexes[i].cellIndexes[j] });\n            }\n        }\n        this.updateCellProps({ rowIndex: rowCellIndexes[0].rowIndex, cellIndex: rowCellIndexes[0].cellIndexes[0] }, { rowIndex: rowCellIndexes[0].rowIndex, cellIndex: rowCellIndexes[0].cellIndexes[0] });\n        var cellSelectedArgs;\n        if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n            cellSelectedArgs = {\n                data: selectedData, cellIndex: rowCellIndexes[0].cellIndexes[0],\n                currentCell: selectedCell, selectedRowCellIndex: this.selectedRowCellIndexes,\n                previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n            };\n            var previousRowCellIndex = 'previousRowCellIndex';\n            cellSelectedArgs[previousRowCellIndex] = this.prevECIdxs;\n        }\n        else {\n            cellSelectedArgs = { data: selectedData, cellIndex: rowCellIndexes[0].cellIndexes[0],\n                selectedRowCellIndex: this.selectedRowCellIndexes };\n        }\n        this.onActionComplete(cellSelectedArgs, events.cellSelected);\n    };\n    /**\n     * Select cells with existing cell selection by passing row and column index.\n     *\n     * @param {IIndex} cellIndexes - Defines the collection of row and column index.\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.addCellsToSelection = function (cellIndexes) {\n        if (!this.isCellType()) {\n            return;\n        }\n        var gObj = this.parent;\n        var selectedCell;\n        var index;\n        this.currentIndex = cellIndexes[0].rowIndex;\n        var cncl = 'cancel';\n        var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n        var isHybrid = 'isHybrid';\n        var left = gObj.getFrozenLeftCount();\n        var movable = gObj.getMovableColumnsCount();\n        if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n            return;\n        }\n        this.hideAutoFill();\n        var col = gObj.getColumnByIndex(cellIndexes[0].cellIndex);\n        var rowObj;\n        gridActionHandler(this.parent, function (tableName, rows) {\n            rowObj = rows[cellIndexes[0].rowIndex];\n        }, [\n            !col.getFreezeTableName() || col.getFreezeTableName() === literals.frozenLeft ? gObj.getRowsObject() : [],\n            col.getFreezeTableName() === 'movable' ? gObj.getMovableRowsObject() : [],\n            col.getFreezeTableName() === literals.frozenRight ? gObj.getFrozenRightRowsObject() : []\n        ]);\n        var foreignKeyData = [];\n        for (var _i = 0, cellIndexes_1 = cellIndexes; _i < cellIndexes_1.length; _i++) {\n            var cellIndex = cellIndexes_1[_i];\n            for (var i = 0, len = this.selectedRowCellIndexes.length; i < len; i++) {\n                if (this.selectedRowCellIndexes[i].rowIndex === cellIndex.rowIndex) {\n                    index = i;\n                    break;\n                }\n            }\n            selectedCell = this.getSelectedMovableCell(cellIndex);\n            if (!selectedCell) {\n                selectedCell = gObj.getCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n            }\n            var idx = col.getFreezeTableName() === 'movable' ? cellIndex.cellIndex - left\n                : col.getFreezeTableName() === literals.frozenRight ? cellIndex.cellIndex - (left + movable) : cellIndex.cellIndex;\n            foreignKeyData.push(rowObj.cells[idx].foreignKeyData);\n            var args = void 0;\n            if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n                args = {\n                    cancel: false, data: selectedData, cellIndex: cellIndexes[0],\n                    isShiftPressed: this.isMultiShiftRequest,\n                    currentCell: selectedCell, isCtrlPressed: this.isMultiCtrlRequest,\n                    previousRowCell: this.prevECIdxs ?\n                        gObj.getCellFromIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n                };\n                var previousRowCellIndex = 'previousRowCellIndex';\n                args[previousRowCellIndex] = this.prevECIdxs;\n            }\n            else {\n                args = {\n                    cancel: false, data: selectedData, cellIndex: cellIndexes[0],\n                    isShiftPressed: this.isMultiShiftRequest, isCtrlPressed: this.isMultiCtrlRequest\n                };\n            }\n            var isUnSelected = index > -1;\n            if (isUnSelected) {\n                var selectedCellIdx = this.selectedRowCellIndexes[index].cellIndexes;\n                if (selectedCellIdx.indexOf(cellIndex.cellIndex) > -1) {\n                    this.cellDeselect(events.cellDeselecting, [{ rowIndex: cellIndex.rowIndex, cellIndexes: [cellIndex.cellIndex] }], selectedData, [selectedCell], foreignKeyData);\n                    selectedCellIdx.splice(selectedCellIdx.indexOf(cellIndex.cellIndex), 1);\n                    if (selectedCellIdx.length === 0) {\n                        this.selectedRowCellIndexes.splice(index, 1);\n                    }\n                    selectedCell.classList.remove('e-cellselectionbackground');\n                    selectedCell.removeAttribute('aria-selected');\n                    this.cellDeselect(events.cellDeselected, [{ rowIndex: cellIndex.rowIndex, cellIndexes: [cellIndex.cellIndex] }], selectedData, [selectedCell], foreignKeyData);\n                }\n                else {\n                    isUnSelected = false;\n                    this.onActionBegin(args, events.cellSelecting);\n                    this.addRowCellIndex({ rowIndex: cellIndex.rowIndex, cellIndex: cellIndex.cellIndex });\n                    this.updateCellSelection(selectedCell);\n                    this.addAttribute(selectedCell);\n                }\n            }\n            else {\n                this.onActionBegin(args, events.cellSelecting);\n                if (!isNullOrUndefined(args) && args[cncl] === true) {\n                    return;\n                }\n                this.updateCellSelection(selectedCell, cellIndex.rowIndex, cellIndex.cellIndex);\n            }\n            if (!isUnSelected) {\n                var cellSelectedArgs = void 0;\n                if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n                    cellSelectedArgs = {\n                        data: selectedData, cellIndex: cellIndexes[0], currentCell: selectedCell,\n                        previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) :\n                            undefined, selectedRowCellIndex: this.selectedRowCellIndexes\n                    };\n                    var previousRowCellIndex = 'previousRowCellIndex';\n                    cellSelectedArgs[previousRowCellIndex] = this.prevECIdxs;\n                }\n                else {\n                    cellSelectedArgs = { data: selectedData, cellIndex: cellIndexes[0], selectedRowCellIndex: this.selectedRowCellIndexes };\n                }\n                this.onActionComplete(cellSelectedArgs, events.cellSelected);\n                this.cellselected = true;\n            }\n            this.updateCellProps(cellIndex, cellIndex);\n        }\n    };\n    Selection.prototype.getColIndex = function (rowIndex, index) {\n        var frzCols = this.parent.isFrozenGrid();\n        var col = this.parent.getColumnByIndex(index);\n        var cells = getCellsByTableName(this.parent, col, rowIndex);\n        if (cells) {\n            for (var m = 0; m < cells.length; m++) {\n                var colIndex = parseInt(cells[m].getAttribute(literals.ariaColIndex), 10);\n                if (colIndex === index) {\n                    if (frzCols) {\n                        if (col.getFreezeTableName() === 'movable') {\n                            m += this.parent.getFrozenLeftCount();\n                        }\n                        else if (col.getFreezeTableName() === literals.frozenRight) {\n                            m += (this.parent.getFrozenLeftColumnsCount() + this.parent.getMovableColumnsCount());\n                        }\n                    }\n                    return m;\n                }\n            }\n        }\n        return -1;\n    };\n    Selection.prototype.getLastColIndex = function (rowIndex) {\n        var cells = this.parent.getFrozenColumns() ? this.parent.getMovableDataRows()[rowIndex].querySelectorAll('td.e-rowcell')\n            : this.parent.getDataRows()[rowIndex].querySelectorAll('td.e-rowcell');\n        return parseInt(cells[cells.length - 1].getAttribute(literals.ariaColIndex), 10);\n    };\n    Selection.prototype.clearCell = function () {\n        this.clearCellSelection();\n    };\n    Selection.prototype.cellDeselect = function (type, cellIndexes, data, cells, foreignKeyData) {\n        var cancl = 'cancel';\n        if (cells[0] && cells[0].classList.contains(literals.gridChkBox)) {\n            this.updateCheckBoxes(closest(cells[0], 'tr'));\n        }\n        var args = {\n            cells: cells, data: data, cellIndexes: cellIndexes, foreignKeyData: foreignKeyData, cancel: false\n        };\n        this.parent.trigger(type, args);\n        this.isPreventCellSelect = args[cancl];\n    };\n    Selection.prototype.updateCellSelection = function (selectedCell, rowIndex, cellIndex) {\n        if (!isNullOrUndefined(rowIndex)) {\n            this.addRowCellIndex({ rowIndex: rowIndex, cellIndex: cellIndex });\n        }\n        selectedCell.classList.add('e-cellselectionbackground');\n        if (selectedCell.classList.contains(literals.gridChkBox)) {\n            this.updateCheckBoxes(closest(selectedCell, 'tr'), true);\n        }\n        this.addAttribute(selectedCell);\n    };\n    Selection.prototype.addAttribute = function (cell) {\n        this.target = cell;\n        if (!isNullOrUndefined(cell)) {\n            cell.setAttribute('aria-selected', 'true');\n            if (!this.preventFocus) {\n                this.focus.onClick({ target: cell }, true);\n            }\n        }\n    };\n    Selection.prototype.updateCellProps = function (startIndex, endIndex) {\n        this.prevCIdxs = startIndex;\n        this.prevECIdxs = endIndex;\n        this.isCellSelected = this.selectedRowCellIndexes.length && true;\n    };\n    Selection.prototype.addRowCellIndex = function (rowCellIndex) {\n        var isRowAvail;\n        var index;\n        for (var i = 0, len = this.selectedRowCellIndexes.length; i < len; i++) {\n            if (this.selectedRowCellIndexes[i].rowIndex === rowCellIndex.rowIndex) {\n                isRowAvail = true;\n                index = i;\n                break;\n            }\n        }\n        if (isRowAvail) {\n            if (this.selectedRowCellIndexes[index].cellIndexes.indexOf(rowCellIndex.cellIndex) < 0) {\n                this.selectedRowCellIndexes[index].cellIndexes.push(rowCellIndex.cellIndex);\n            }\n        }\n        else {\n            this.selectedRowCellIndexes.push({ rowIndex: rowCellIndex.rowIndex, cellIndexes: [rowCellIndex.cellIndex] });\n        }\n    };\n    /**\n     * Deselects the currently selected cells.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.clearCellSelection = function () {\n        if (this.isCellSelected) {\n            var gObj = this.parent;\n            var selectedCells = this.getSelectedCellsElement();\n            var rowCell = this.selectedRowCellIndexes;\n            var data = [];\n            var cells = [];\n            var foreignKeyData = [];\n            var currentViewData = this.getCurrentBatchRecordChanges();\n            var frzCols = gObj.isFrozenGrid();\n            this.hideAutoFill();\n            for (var i = 0, len = rowCell.length; i < len; i++) {\n                data.push(currentViewData[rowCell[i].rowIndex]);\n                var rowObj = this.getRowObj(rowCell[i].rowIndex);\n                for (var j = 0, cLen = rowCell[i].cellIndexes.length; j < cLen; j++) {\n                    if (frzCols) {\n                        var col = gObj.getColumnByIndex(rowCell[i].cellIndexes[j]);\n                        cells.push(getCellByColAndRowIndex(this.parent, col, rowCell[i].rowIndex, rowCell[i].cellIndexes[j]));\n                    }\n                    else {\n                        if (rowObj.cells) {\n                            foreignKeyData.push(rowObj.cells[rowCell[i].cellIndexes[j]].foreignKeyData);\n                        }\n                        cells.push(gObj.getCellFromIndex(rowCell[i].rowIndex, rowCell[i].cellIndexes[j]));\n                    }\n                }\n            }\n            this.cellDeselect(events.cellDeselecting, rowCell, data, cells, foreignKeyData);\n            if (this.isPreventCellSelect === true) {\n                return;\n            }\n            for (var i = 0, len = selectedCells.length; i < len; i++) {\n                selectedCells[i].classList.remove('e-cellselectionbackground');\n                selectedCells[i].removeAttribute('aria-selected');\n            }\n            if (this.bdrElement) {\n                this.showHideBorders('none');\n            }\n            this.selectedRowCellIndexes = [];\n            this.isCellSelected = false;\n            if (!this.isDragged && this.cellselected) {\n                this.cellDeselect(events.cellDeselected, rowCell, data, cells, foreignKeyData);\n            }\n        }\n    };\n    Selection.prototype.getSelectedCellsElement = function () {\n        var gObj = this.parent;\n        var rows = gObj.getDataRows();\n        var mRows;\n        if (gObj.isFrozenGrid()) {\n            mRows = gObj.getMovableDataRows();\n            rows = gObj.addMovableRows(rows, mRows);\n            if (gObj.getFrozenMode() === literals.leftRight) {\n                rows = gObj.addMovableRows(rows, gObj.getFrozenRightDataRows());\n            }\n        }\n        var cells = [];\n        for (var i = 0, len = rows.length; i < len; i++) {\n            cells = cells.concat([].slice.call(rows[i].getElementsByClassName('e-cellselectionbackground')));\n        }\n        return cells;\n    };\n    Selection.prototype.mouseMoveHandler = function (e) {\n        e.preventDefault();\n        var gBRect = this.parent.element.getBoundingClientRect();\n        var x1 = this.x;\n        var y1 = this.y;\n        var position = getPosition(e);\n        var x2 = position.x - gBRect.left;\n        var y2 = position.y - gBRect.top;\n        var tmp;\n        var target = closest(e.target, 'tr');\n        this.isDragged = true;\n        if (!this.isCellDrag) {\n            if (!target) {\n                target = closest(document.elementFromPoint(this.parent.element.offsetLeft + 2, e.clientY), 'tr');\n            }\n            if (x1 > x2) {\n                tmp = x2;\n                x2 = x1;\n                x1 = tmp;\n            }\n            if (y1 > y2) {\n                tmp = y2;\n                y2 = y1;\n                y1 = tmp;\n            }\n            this.element.style.left = x1 + 'px';\n            this.element.style.top = y1 + 'px';\n            this.element.style.width = x2 - x1 + 'px';\n            this.element.style.height = y2 - y1 + 'px';\n        }\n        if (target && !e.ctrlKey && !e.shiftKey) {\n            var rowIndex = parseInt(target.getAttribute(literals.ariaRowIndex), 10);\n            if (!this.isCellDrag) {\n                this.hideAutoFill();\n                this.selectRowsByRange(this.startDIndex, rowIndex);\n            }\n            else {\n                var td = parentsUntil(e.target, literals.rowCell);\n                if (td) {\n                    this.startAFCell = this.startCell;\n                    this.endAFCell = parentsUntil(e.target, literals.rowCell);\n                    this.selectLikeExcel(e, rowIndex, parseInt(td.getAttribute(literals.ariaColIndex), 10));\n                }\n            }\n        }\n    };\n    Selection.prototype.selectLikeExcel = function (e, rowIndex, cellIndex) {\n        if (!this.isAutoFillSel) {\n            this.clearCellSelection();\n            this.selectCellsByRange({ rowIndex: this.startDIndex, cellIndex: this.startDCellIndex }, { rowIndex: rowIndex, cellIndex: cellIndex });\n            this.drawBorders();\n        }\n        else { //Autofill\n            this.showAFBorders();\n            this.selectLikeAutoFill(e);\n        }\n    };\n    Selection.prototype.drawBorders = function () {\n        if (this.selectionSettings.cellSelectionMode === 'BoxWithBorder' && this.selectedRowCellIndexes.length && !this.parent.isEdit) {\n            this.parent.element.classList.add('e-enabledboxbdr');\n            if (!this.bdrElement) {\n                this.createBorders();\n            }\n            this.positionBorders();\n        }\n        else {\n            this.showHideBorders('none');\n        }\n    };\n    Selection.prototype.isLastCell = function (cell) {\n        var cells = [].slice.call(cell.parentElement.querySelectorAll('.e-rowcell:not(.e-hide)'));\n        return cells[cells.length - 1] === cell;\n    };\n    Selection.prototype.isLastRow = function (cell) {\n        var rows = [].slice.call(closest(cell, literals.tbody).querySelectorAll('.e-row:not(.e-hiddenrow)'));\n        return cell.parentElement === rows[rows.length - 1];\n    };\n    Selection.prototype.isFirstRow = function (cell) {\n        var rows = [].slice.call(closest(cell, literals.tbody).querySelectorAll('.e-row:not(.e-hiddenrow)'));\n        return cell.parentElement === rows[0];\n    };\n    Selection.prototype.isFirstCell = function (cell) {\n        var cells = [].slice.call(cell.parentElement.querySelectorAll('.e-rowcell:not(.e-hide)'));\n        return cells[0] === cell;\n    };\n    Selection.prototype.setBorders = function (parentEle, border, bdrStr) {\n        var cells = [].slice.call(parentEle.getElementsByClassName('e-cellselectionbackground')).\n            filter(function (ele) { return ele.style.display === ''; });\n        if (cells.length) {\n            var isFrozen = this.parent.isFrozenGrid();\n            var start = cells[0];\n            var end = cells[cells.length - 1];\n            var stOff = start.getBoundingClientRect();\n            var endOff = end.getBoundingClientRect();\n            var parentOff = start.offsetParent.getBoundingClientRect();\n            var rowHeight = this.isLastRow(end) && (bdrStr === '1' || bdrStr === '2' || bdrStr === '5') ? 2 : 0;\n            var topOffSet = this.parent.frozenRows && (bdrStr === '1' || bdrStr === '2') &&\n                this.isFirstRow(start) ? 1.5 : 0;\n            var leftOffset = isFrozen && (bdrStr === '2' || bdrStr === '4') && this.isFirstCell(start) ? 1 : 0;\n            var rightOffset = ((this.parent.getFrozenMode() === 'Right' && (bdrStr === '1' || bdrStr === '3'))\n                || (this.parent.getFrozenMode() === literals.leftRight && (bdrStr === '5' || bdrStr === '6')))\n                && this.isFirstCell(start) ? 1 : 0;\n            if (this.parent.enableRtl) {\n                border.style.right = parentOff.right - stOff.right - leftOffset + 'px';\n                border.style.width = stOff.right - endOff.left + leftOffset + 1 + 'px';\n            }\n            else {\n                border.style.left = stOff.left - parentOff.left - leftOffset - rightOffset + 'px';\n                border.style.width = endOff.right - stOff.left + leftOffset - rightOffset + 1 + 'px';\n            }\n            border.style.top = stOff.top - parentOff.top - topOffSet + 'px';\n            border.style.height = endOff.top - stOff.top > 0 ?\n                (endOff.top - parentOff.top + endOff.height + 1) - (stOff.top - parentOff.top) - rowHeight + topOffSet + 'px' :\n                endOff.height + topOffSet - rowHeight + 1 + 'px';\n            this.selectDirection += bdrStr;\n        }\n        else {\n            border.style.display = 'none';\n        }\n    };\n    Selection.prototype.positionBorders = function () {\n        this.updateStartEndCells();\n        if (!this.startCell || !this.bdrElement || !this.selectedRowCellIndexes.length) {\n            return;\n        }\n        this.selectDirection = '';\n        this.showHideBorders('');\n        this.setBorders(this.parent.getContentTable(), this.bdrElement, '1');\n        if (this.parent.isFrozenGrid()) {\n            this.setBorders(this.parent.contentModule.getMovableContent(), this.mcBdrElement, '2');\n            if (this.parent.getFrozenMode() === literals.leftRight) {\n                this.setBorders(this.parent.contentModule.getFrozenRightContent(), this.frcBdrElement, '5');\n            }\n        }\n        if (this.parent.frozenRows) {\n            this.setBorders(this.parent.getHeaderTable(), this.fhBdrElement, '3');\n            if (this.parent.isFrozenGrid()) {\n                this.setBorders(this.parent.headerModule.getMovableHeader(), this.mhBdrElement, '4');\n                if (this.parent.getFrozenMode() === literals.leftRight) {\n                    this.setBorders(this.parent.headerModule.getFrozenRightHeader(), this.frhBdrElement, '6');\n                }\n            }\n        }\n        this.applyBorders(this.selectDirection);\n    };\n    /* eslint-enable */\n    Selection.prototype.applyBothFrozenBorders = function (str) {\n        var rtl = this.parent.enableRtl;\n        switch (str.length) {\n            case 6:\n                {\n                    this.bdrElement.style.borderWidth = rtl ? this.right_bottom : this.bottom_left;\n                    this.mcBdrElement.style.borderWidth = this.bottom;\n                    this.fhBdrElement.style.borderWidth = rtl ? this.top_right : this.top_left;\n                    this.mhBdrElement.style.borderWidth = this.top;\n                    this.frcBdrElement.style.borderWidth = rtl ? this.bottom_left : this.right_bottom;\n                    this.frhBdrElement.style.borderWidth = rtl ? this.top_left : this.top_right;\n                }\n                break;\n            case 4:\n                {\n                    if (str.includes('1') && str.includes('2') && str.includes('3') && str.includes('4')) {\n                        this.fhBdrElement.style.borderWidth = rtl ? this.top_right : this.top_left;\n                        this.mhBdrElement.style.borderWidth = rtl ? this.top_left : this.top_right;\n                        this.bdrElement.style.borderWidth = rtl ? this.right_bottom : this.bottom_left;\n                        this.mcBdrElement.style.borderWidth = rtl ? this.bottom_left : this.right_bottom;\n                    }\n                    if (str.includes('2') && str.includes('4') && str.includes('5') && str.includes('6')) {\n                        this.mcBdrElement.style.borderWidth = rtl ? this.right_bottom : this.bottom_left;\n                        this.mhBdrElement.style.borderWidth = rtl ? this.top_right : this.top_left;\n                        this.frcBdrElement.style.borderWidth = rtl ? this.bottom_left : this.right_bottom;\n                        this.frhBdrElement.style.borderWidth = rtl ? this.top_left : this.top_right;\n                    }\n                }\n                break;\n            case 3:\n                {\n                    this.bdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n                    this.mcBdrElement.style.borderWidth = this.top_bottom;\n                    this.frcBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n                    if (this.parent.frozenRows) {\n                        this.fhBdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n                        this.mhBdrElement.style.borderWidth = this.top_bottom;\n                        this.frcBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n                    }\n                }\n                break;\n            case 2:\n                {\n                    if (str.includes('1')) {\n                        this.mcBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n                        if (this.parent.frozenRows) {\n                            this.fhBdrElement.style.borderWidth = this.top_right_left;\n                        }\n                    }\n                    if (str.includes('2')) {\n                        this.bdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n                        this.frcBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n                        if (this.parent.frozenRows) {\n                            this.mhBdrElement.style.borderWidth = this.top_right_left;\n                        }\n                    }\n                    if (str.includes('3')) {\n                        this.mhBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n                        this.bdrElement.style.borderWidth = this.right_bottom_left;\n                    }\n                    if (str.includes('4')) {\n                        this.fhBdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n                        this.frhBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n                        this.mcBdrElement.style.borderWidth = this.right_bottom_left;\n                    }\n                    if (str.includes('5')) {\n                        this.mcBdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n                        if (this.parent.frozenRows) {\n                            this.frhBdrElement.style.borderWidth = this.top_right_left;\n                        }\n                    }\n                    if (str.includes('6')) {\n                        this.mhBdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n                        this.frcBdrElement.style.borderWidth = this.right_bottom_left;\n                    }\n                }\n                break;\n            default:\n                this.bdrElement.style.borderWidth = this.all_border;\n                this.mcBdrElement.style.borderWidth = this.all_border;\n                this.frcBdrElement.style.borderWidth = this.all_border;\n                if (this.parent.frozenRows) {\n                    this.fhBdrElement.style.borderWidth = this.all_border;\n                    this.mhBdrElement.style.borderWidth = this.all_border;\n                    this.frhBdrElement.style.borderWidth = this.all_border;\n                }\n                break;\n        }\n    };\n    Selection.prototype.applyBorders = function (str) {\n        var rtl = this.parent.enableRtl;\n        if (this.parent.getFrozenMode() === literals.leftRight) {\n            this.applyBothFrozenBorders(str);\n        }\n        else {\n            switch (str.length) {\n                case 4:\n                    {\n                        if (this.parent.getFrozenMode() === 'Right') {\n                            this.bdrElement.style.borderWidth = rtl ? this.bottom_left : this.right_bottom;\n                            this.mcBdrElement.style.borderWidth = rtl ? this.right_bottom : this.bottom_left;\n                            this.fhBdrElement.style.borderWidth = rtl ? this.top_left : this.top_right;\n                            this.mhBdrElement.style.borderWidth = rtl ? this.top_right : this.top_left;\n                        }\n                        else {\n                            this.bdrElement.style.borderWidth = rtl ? this.right_bottom : this.bottom_left;\n                            this.mcBdrElement.style.borderWidth = rtl ? this.bottom_left : this.right_bottom;\n                            this.fhBdrElement.style.borderWidth = rtl ? this.top_right : this.top_left;\n                            this.mhBdrElement.style.borderWidth = rtl ? this.top_left : this.top_right;\n                        }\n                    }\n                    break;\n                case 2:\n                    {\n                        if (this.parent.getFrozenMode() === 'Right') {\n                            this.bdrElement.style.borderWidth = str.includes('2') ? rtl ? this.top_bottom_left\n                                : this.top_right_bottom : this.right_bottom_left;\n                            this.mcBdrElement.style.borderWidth = str.includes('1') ? rtl ? this.top_right_bottom\n                                : this.top_bottom_left : this.right_bottom_left;\n                            if (this.parent.frozenRows) {\n                                this.fhBdrElement.style.borderWidth = str.includes('1') ? this.top_right_left\n                                    : rtl ? this.top_bottom_left : this.top_right_bottom;\n                                this.mhBdrElement.style.borderWidth = str.includes('2') ? this.top_right_left\n                                    : rtl ? this.top_right_bottom : this.top_bottom_left;\n                            }\n                        }\n                        else {\n                            this.bdrElement.style.borderWidth = str.includes('2') ? rtl ? this.top_right_bottom\n                                : this.top_bottom_left : this.right_bottom_left;\n                            if (this.parent.isFrozenGrid()) {\n                                this.mcBdrElement.style.borderWidth = str.includes('1') ? rtl ? this.top_bottom_left\n                                    : this.top_right_bottom : this.right_bottom_left;\n                            }\n                            if (this.parent.frozenRows) {\n                                this.fhBdrElement.style.borderWidth = str.includes('1') ? this.top_right_left\n                                    : rtl ? this.top_right_bottom : this.top_bottom_left;\n                                if (this.parent.isFrozenGrid()) {\n                                    this.mhBdrElement.style.borderWidth = str.includes('2') ? this.top_right_left\n                                        : rtl ? this.top_bottom_left : this.top_right_bottom;\n                                }\n                            }\n                        }\n                    }\n                    break;\n                default:\n                    this.bdrElement.style.borderWidth = this.all_border;\n                    if (this.parent.isFrozenGrid()) {\n                        this.mcBdrElement.style.borderWidth = this.all_border;\n                    }\n                    if (this.parent.frozenRows) {\n                        this.fhBdrElement.style.borderWidth = this.all_border;\n                        if (this.parent.isFrozenGrid()) {\n                            this.mhBdrElement.style.borderWidth = this.all_border;\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    Selection.prototype.createBorders = function () {\n        if (!this.bdrElement) {\n            this.bdrElement = this.parent.getContentTable().parentElement.appendChild(createElement('div', {\n                className: 'e-xlsel', id: this.parent.element.id + '_bdr',\n                styles: 'width: 2px; border-width: 0;'\n            }));\n            if (this.parent.isFrozenGrid()) {\n                this.mcBdrElement = this.parent.contentModule.getMovableContent().appendChild(createElement('div', {\n                    className: 'e-xlsel', id: this.parent.element.id + '_mcbdr',\n                    styles: 'height: 2px; border-width: 0;'\n                }));\n                if (this.parent.getFrozenMode() === literals.leftRight) {\n                    this.frcBdrElement = this.parent.contentModule.getFrozenRightContent().appendChild(createElement('div', {\n                        className: 'e-xlsel', id: this.parent.element.id + '_frcbdr',\n                        styles: 'height: 2px; border-width: 0;'\n                    }));\n                }\n            }\n            if (this.parent.frozenRows) {\n                this.fhBdrElement = this.parent.getHeaderTable().parentElement.appendChild(createElement('div', { className: 'e-xlsel', id: this.parent.element.id + '_fhbdr', styles: 'height: 2px;' }));\n            }\n            if (this.parent.frozenRows && this.parent.isFrozenGrid()) {\n                this.mhBdrElement = this.parent.headerModule.getMovableHeader().appendChild(createElement('div', { className: 'e-xlsel', id: this.parent.element.id + '_mhbdr', styles: 'height: 2px;' }));\n                if (this.parent.getFrozenMode() === literals.leftRight) {\n                    this.frhBdrElement = this.parent.headerModule.getFrozenRightHeader().appendChild(createElement('div', { className: 'e-xlsel', id: this.parent.element.id + '_frhbdr', styles: 'height: 2px;' }));\n                }\n            }\n        }\n    };\n    Selection.prototype.showHideBorders = function (display) {\n        if (this.bdrElement) {\n            this.bdrElement.style.display = display;\n            if (this.parent.isFrozenGrid()) {\n                this.mcBdrElement.style.display = display;\n                if (this.parent.getFrozenMode() === literals.leftRight) {\n                    this.frcBdrElement.style.display = display;\n                }\n            }\n            if (this.parent.frozenRows) {\n                this.fhBdrElement.style.display = display;\n            }\n            if (this.parent.frozenRows && this.parent.isFrozenGrid()) {\n                this.mhBdrElement.style.display = display;\n                if (this.parent.getFrozenMode() === literals.leftRight) {\n                    this.frhBdrElement.style.display = display;\n                }\n            }\n        }\n    };\n    Selection.prototype.drawAFBorders = function () {\n        if (!this.bdrAFBottom) {\n            this.createAFBorders();\n        }\n        this.positionAFBorders();\n    };\n    Selection.prototype.positionAFBorders = function () {\n        if (!this.startCell || !this.bdrAFLeft) {\n            return;\n        }\n        var stOff = this.startAFCell.getBoundingClientRect();\n        var endOff = this.endAFCell.getBoundingClientRect();\n        var top = endOff.top - stOff.top > 0 ? 1 : 0;\n        var firstCellTop = endOff.top - stOff.top >= 0 && (parentsUntil(this.startAFCell, literals.movableContent) ||\n            parentsUntil(this.startAFCell, 'e-frozencontent')) && this.isFirstRow(this.startAFCell) ? 1.5 : 0;\n        var firstCellLeft = (parentsUntil(this.startAFCell, literals.movableContent) ||\n            parentsUntil(this.startAFCell, literals.movableHeader)) && this.isFirstCell(this.startAFCell) ? 1 : 0;\n        var rowHeight = this.isLastRow(this.endAFCell) && (parentsUntil(this.endAFCell, literals.movableContent) ||\n            parentsUntil(this.endAFCell, 'e-frozencontent')) ? 2 : 0;\n        var parentOff = this.startAFCell.offsetParent.getBoundingClientRect();\n        var parentRect = this.parent.element.getBoundingClientRect();\n        var sTop = this.startAFCell.offsetParent.parentElement.scrollTop;\n        var sLeft = this.startAFCell.offsetParent.parentElement.scrollLeft;\n        var scrollTop = sTop - this.startAFCell.offsetTop;\n        var scrollLeft = sLeft - this.startAFCell.offsetLeft;\n        var totalHeight = this.parent.element.clientHeight;\n        var totalWidth = this.parent.element.clientWidth;\n        scrollTop = scrollTop > 0 ? Math.floor(scrollTop) - 1 : 0;\n        scrollLeft = scrollLeft > 0 ? scrollLeft : 0;\n        var left = stOff.left - parentRect.left;\n        if (!this.parent.enableRtl) {\n            this.bdrAFLeft.style.left = left - firstCellLeft + scrollLeft - 1 + 'px';\n            this.bdrAFRight.style.left = endOff.left - parentRect.left - 2 + endOff.width + 'px';\n            this.bdrAFRight.style.width = totalWidth <= parseInt(this.bdrAFRight.style.left, 10) ? '0px' : '2px';\n            this.bdrAFTop.style.left = left + scrollLeft - 0.5 + 'px';\n            this.bdrAFTop.style.width = parseInt(this.bdrAFRight.style.left, 10) - parseInt(this.bdrAFLeft.style.left, 10)\n                - firstCellLeft + 1 + 'px';\n            if (totalWidth <= (parseInt(this.bdrAFTop.style.width, 10) + parseInt(this.bdrAFTop.style.left, 10))) {\n                var leftRemove = (parseInt(this.bdrAFTop.style.width, 10) + parseInt(this.bdrAFTop.style.left, 10)) - totalWidth;\n                this.bdrAFTop.style.width = parseInt(this.bdrAFTop.style.width, 10) - leftRemove + 'px';\n            }\n        }\n        else {\n            var scrolloffSet = (parentsUntil(this.startAFCell, literals.movableContent) ||\n                parentsUntil(this.startAFCell, literals.movableHeader)) ? stOff.right -\n                this.startAFCell.offsetParent.parentElement.getBoundingClientRect().width -\n                parentRect.left : 0;\n            this.bdrAFLeft.style.right = parentRect.right - endOff.right - 2 + endOff.width + 'px';\n            this.bdrAFLeft.style.width = totalWidth <= parseInt(this.bdrAFLeft.style.right, 10) ? '0px' : '2px';\n            this.bdrAFRight.style.right = parentRect.right - stOff.right - firstCellLeft + scrolloffSet - 1 + 'px';\n            this.bdrAFTop.style.left = endOff.left - parentRect.left - 0.5 + 'px';\n            this.bdrAFTop.style.width = parseInt(this.bdrAFLeft.style.right, 10) - parseInt(this.bdrAFRight.style.right, 10)\n                - firstCellLeft + 1 + 'px';\n            if (parseInt(this.bdrAFTop.style.left, 10) < 0) {\n                this.bdrAFTop.style.width = parseInt(this.bdrAFTop.style.width, 10) + parseInt(this.bdrAFTop.style.left, 10) + 'px';\n                this.bdrAFTop.style.left = '0px';\n            }\n        }\n        this.bdrAFLeft.style.top = stOff.top - parentRect.top - firstCellTop + scrollTop + 'px';\n        this.bdrAFLeft.style.height = endOff.top - stOff.top > 0 ?\n            (endOff.top - parentOff.top + endOff.height + 1) - (stOff.top - parentOff.top) + firstCellTop - rowHeight - scrollTop + 'px' :\n            endOff.height + firstCellTop - rowHeight - scrollTop + 'px';\n        this.bdrAFRight.style.top = this.bdrAFLeft.style.top;\n        this.bdrAFRight.style.height = parseInt(this.bdrAFLeft.style.height, 10) + 'px';\n        this.bdrAFTop.style.top = this.bdrAFRight.style.top;\n        this.bdrAFBottom.style.left = this.bdrAFTop.style.left;\n        this.bdrAFBottom.style.top = parseFloat(this.bdrAFLeft.style.top) + parseFloat(this.bdrAFLeft.style.height) - top - 1 + 'px';\n        this.bdrAFBottom.style.width = totalHeight <= parseFloat(this.bdrAFBottom.style.top) ? '0px' : this.bdrAFTop.style.width;\n        if (totalHeight <= (parseInt(this.bdrAFLeft.style.height, 10) + parseInt(this.bdrAFLeft.style.top, 10))) {\n            var topRemove = parseInt(this.bdrAFLeft.style.height, 10) + parseInt(this.bdrAFLeft.style.top, 10) - totalHeight;\n            this.bdrAFLeft.style.height = parseInt(this.bdrAFLeft.style.height, 10) - topRemove + 'px';\n            this.bdrAFRight.style.height = parseInt(this.bdrAFLeft.style.height, 10) + 'px';\n        }\n    };\n    Selection.prototype.createAFBorders = function () {\n        if (!this.bdrAFLeft) {\n            this.bdrAFLeft = this.parent.element.appendChild(createElement('div', { className: 'e-xlselaf', id: this.parent.element.id + '_bdrafleft', styles: 'width: 2px;' }));\n            this.bdrAFRight = this.parent.element.appendChild(createElement('div', { className: 'e-xlselaf', id: this.parent.element.id + '_bdrafright', styles: 'width: 2px;' }));\n            this.bdrAFBottom = this.parent.element.appendChild(createElement('div', { className: 'e-xlselaf', id: this.parent.element.id + '_bdrafbottom', styles: 'height: 2px;' }));\n            this.bdrAFTop = this.parent.element.appendChild(createElement('div', { className: 'e-xlselaf', id: this.parent.element.id + '_bdraftop', styles: 'height: 2px;' }));\n        }\n    };\n    Selection.prototype.showAFBorders = function () {\n        if (this.bdrAFLeft) {\n            this.bdrAFLeft.style.display = '';\n            this.bdrAFRight.style.display = '';\n            this.bdrAFBottom.style.display = '';\n            this.bdrAFTop.style.display = '';\n        }\n    };\n    Selection.prototype.hideAFBorders = function () {\n        if (this.bdrAFLeft) {\n            this.bdrAFLeft.style.display = 'none';\n            this.bdrAFRight.style.display = 'none';\n            this.bdrAFBottom.style.display = 'none';\n            this.bdrAFTop.style.display = 'none';\n        }\n    };\n    Selection.prototype.updateValue = function (rIdx, cIdx, cell) {\n        var args = this.createBeforeAutoFill(rIdx, cIdx, cell);\n        if (!args.cancel) {\n            var col = this.parent.getColumnByIndex(cIdx);\n            if (this.parent.editModule && cell) {\n                if (col.type === 'number') {\n                    this.parent.editModule.updateCell(rIdx, col.field, parseInt(args.value, 10));\n                }\n                else {\n                    this.parent.editModule.updateCell(rIdx, col.field, args.value);\n                }\n            }\n        }\n    };\n    Selection.prototype.createBeforeAutoFill = function (rowIndex, colIndex, cell) {\n        var col = this.parent.getColumnByIndex(colIndex);\n        var args = {\n            column: col,\n            value: cell.innerText\n        };\n        this.parent.trigger(events.beforeAutoFill, args);\n        return args;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    Selection.prototype.getAutoFillCells = function (rowIndex, startCellIdx) {\n        var cls = '.e-cellselectionbackground';\n        var cells = [].slice.call(this.parent.getDataRows()[rowIndex].querySelectorAll(cls));\n        if (this.parent.isFrozenGrid()) {\n            cells = cells.concat([].slice.call(this.parent.getMovableDataRows()[rowIndex].querySelectorAll(cls)));\n            if (this.parent.getFrozenMode() === literals.leftRight) {\n                cells = cells.concat([].slice.call(this.parent.getFrozenRightDataRows()[rowIndex].querySelectorAll(cls)));\n            }\n        }\n        return cells;\n    };\n    Selection.prototype.selectLikeAutoFill = function (e, isApply) {\n        var startrowIdx = parseInt(parentsUntil(this.startAFCell, literals.row).getAttribute(literals.ariaRowIndex), 10);\n        var startCellIdx = parseInt(this.startAFCell.getAttribute(literals.ariaColIndex), 10);\n        var endrowIdx = parseInt(parentsUntil(this.endAFCell, literals.row).getAttribute(literals.ariaRowIndex), 10);\n        var endCellIdx = parseInt(this.endAFCell.getAttribute(literals.ariaColIndex), 10);\n        var rowLen = this.selectedRowCellIndexes.length - 1;\n        var colLen = this.selectedRowCellIndexes[0].cellIndexes.length - 1;\n        switch (true) { //direction\n            case !isApply && this.endAFCell.classList.contains('e-cellselectionbackground') &&\n                !!parentsUntil(e.target, literals.rowCell):\n                this.startAFCell = this.parent.getCellFromIndex(startrowIdx, startCellIdx);\n                this.endAFCell = this.parent.getCellFromIndex(startrowIdx + rowLen, startCellIdx + colLen);\n                this.drawAFBorders();\n                break;\n            case this.autoFillRLselection && startCellIdx + colLen < endCellIdx && //right\n                endCellIdx - startCellIdx - colLen + 1 > endrowIdx - startrowIdx - rowLen // right bottom\n                && endCellIdx - startCellIdx - colLen + 1 > startrowIdx - endrowIdx: //right top\n                this.endAFCell = this.parent.getCellFromIndex(startrowIdx + rowLen, endCellIdx);\n                endrowIdx = parseInt(parentsUntil(this.endAFCell, literals.row).getAttribute(literals.ariaRowIndex), 10);\n                endCellIdx = parseInt(this.endAFCell.getAttribute(literals.ariaColIndex), 10);\n                if (!isApply) {\n                    this.drawAFBorders();\n                }\n                else {\n                    var cellIdx = parseInt(this.endCell.getAttribute(literals.ariaColIndex), 10);\n                    for (var i = startrowIdx; i <= endrowIdx; i++) {\n                        var cells = this.getAutoFillCells(i, startCellIdx);\n                        var c = 0;\n                        for (var j = cellIdx + 1; j <= endCellIdx; j++) {\n                            if (c > colLen) {\n                                c = 0;\n                            }\n                            this.updateValue(i, j, cells[c]);\n                            c++;\n                        }\n                    }\n                    this.selectCellsByRange({ rowIndex: startrowIdx, cellIndex: this.startCellIndex }, { rowIndex: endrowIdx, cellIndex: endCellIdx });\n                }\n                break;\n            case this.autoFillRLselection && startCellIdx > endCellIdx && // left\n                startCellIdx - endCellIdx + 1 > endrowIdx - startrowIdx - rowLen && //left top\n                startCellIdx - endCellIdx + 1 > startrowIdx - endrowIdx: // left bottom\n                this.startAFCell = this.parent.getCellFromIndex(startrowIdx, endCellIdx);\n                this.endAFCell = this.endCell;\n                if (!isApply) {\n                    this.drawAFBorders();\n                }\n                else {\n                    for (var i = startrowIdx; i <= startrowIdx + rowLen; i++) {\n                        var cells = this.getAutoFillCells(i, startCellIdx);\n                        cells.reverse();\n                        var c = 0;\n                        for (var j = this.startCellIndex - 1; j >= endCellIdx; j--) {\n                            if (c > colLen) {\n                                c = 0;\n                            }\n                            this.updateValue(i, j, cells[c]);\n                            c++;\n                        }\n                    }\n                    this.selectCellsByRange({ rowIndex: startrowIdx, cellIndex: endCellIdx }, { rowIndex: startrowIdx + rowLen, cellIndex: this.startCellIndex + colLen });\n                }\n                break;\n            case startrowIdx > endrowIdx: //up\n                this.startAFCell = this.parent.getCellFromIndex(endrowIdx, startCellIdx);\n                this.endAFCell = this.endCell;\n                if (!isApply) {\n                    this.drawAFBorders();\n                }\n                else {\n                    var trIdx = parseInt(this.endCell.parentElement.getAttribute(literals.ariaRowIndex), 10);\n                    var r = trIdx;\n                    for (var i = startrowIdx - 1; i >= endrowIdx; i--) {\n                        if (r === this.startIndex - 1) {\n                            r = trIdx;\n                        }\n                        var cells = this.getAutoFillCells(r, startCellIdx);\n                        var c = 0;\n                        r--;\n                        for (var j = this.startCellIndex; j <= this.startCellIndex + colLen; j++) {\n                            this.updateValue(i, j, cells[c]);\n                            c++;\n                        }\n                    }\n                    this.selectCellsByRange({ rowIndex: endrowIdx, cellIndex: startCellIdx + colLen }, { rowIndex: startrowIdx + rowLen, cellIndex: startCellIdx });\n                }\n                break;\n            default: //down\n                this.endAFCell = this.parent.getCellFromIndex(endrowIdx, startCellIdx + colLen);\n                if (!isApply) {\n                    this.drawAFBorders();\n                }\n                else {\n                    var trIdx = parseInt(this.endCell.parentElement.getAttribute(literals.ariaRowIndex), 10);\n                    var r = this.startIndex;\n                    for (var i = trIdx + 1; i <= endrowIdx; i++) {\n                        if (r === trIdx + 1) {\n                            r = this.startIndex;\n                        }\n                        var cells = this.getAutoFillCells(r, startCellIdx);\n                        r++;\n                        var c = 0;\n                        for (var m = this.startCellIndex; m <= this.startCellIndex + colLen; m++) {\n                            this.updateValue(i, m, cells[c]);\n                            c++;\n                        }\n                    }\n                    this.selectCellsByRange({ rowIndex: trIdx - rowLen, cellIndex: startCellIdx }, { rowIndex: endrowIdx, cellIndex: startCellIdx + colLen });\n                }\n                break;\n        }\n    };\n    Selection.prototype.mouseUpHandler = function (e) {\n        document.body.classList.remove('e-disableuserselect');\n        if (this.element) {\n            remove(this.element);\n        }\n        if (this.isDragged && this.selectedRowCellIndexes.length === 1 && this.selectedRowCellIndexes[0].cellIndexes.length === 1) {\n            this.mUPTarget = parentsUntil(e.target, literals.rowCell);\n        }\n        else {\n            this.mUPTarget = null;\n        }\n        if (this.isDragged && !this.isAutoFillSel && this.selectionSettings.mode === 'Cell') {\n            var target = e.target;\n            var rowIndex = parseInt(target.parentElement.getAttribute(literals.ariaRowIndex), 10);\n            var cellIndex = parseInt(target.getAttribute(literals.ariaColIndex), 10);\n            this.isDragged = false;\n            this.clearCellSelection();\n            this.selectCellsByRange({ rowIndex: this.startDIndex, cellIndex: this.startDCellIndex }, { rowIndex: rowIndex, cellIndex: cellIndex });\n        }\n        this.isDragged = false;\n        this.updateAutoFillPosition();\n        if (this.isAutoFillSel) {\n            var lastCell = parentsUntil(e.target, literals.rowCell);\n            this.endAFCell = lastCell ? lastCell : this.endCell === this.endAFCell ? this.startAFCell : this.endAFCell;\n            this.startAFCell = this.startCell;\n            this.updateStartCellsIndex();\n            this.selectLikeAutoFill(e, true);\n            this.updateAutoFillPosition();\n            this.hideAFBorders();\n            this.positionBorders();\n            this.isAutoFillSel = false;\n        }\n        EventHandler.remove(this.parent.getContent(), 'mousemove', this.mouseMoveHandler);\n        if (this.parent.frozenRows) {\n            EventHandler.remove(this.parent.getHeaderContent(), 'mousemove', this.mouseMoveHandler);\n        }\n        EventHandler.remove(document, 'mouseup', this.mouseUpHandler);\n    };\n    Selection.prototype.hideAutoFill = function () {\n        if (this.autofill) {\n            this.autofill.style.display = 'none';\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.updateAutoFillPosition = function () {\n        if (this.parent.enableAutoFill && !this.parent.isEdit &&\n            this.selectionSettings.cellSelectionMode.indexOf('Box') > -1 && !this.isRowType() && !this.isSingleSel()\n            && this.selectedRowCellIndexes.length) {\n            var index = parseInt(this.target.getAttribute(literals.ariaColIndex), 10);\n            var rindex = parseInt(this.target.getAttribute('index'), 10);\n            var rowIndex = this.selectedRowCellIndexes[this.selectedRowCellIndexes.length - 1].rowIndex;\n            var cells = this.getAutoFillCells(rowIndex, index).filter(function (ele) { return ele.style.display === ''; });\n            var col = this.parent.getColumnByIndex(index);\n            var isFrozenCol = col.getFreezeTableName() === 'movable';\n            var isFrozenRow = rindex < this.parent.frozenRows;\n            var isFrozenRight = this.parent.getFrozenMode() === literals.leftRight\n                && col.getFreezeTableName() === literals.frozenRight;\n            if (!select('#' + this.parent.element.id + '_autofill', parentsUntil(this.target, literals.table))) {\n                if (select('#' + this.parent.element.id + '_autofill', this.parent.element)) {\n                    select('#' + this.parent.element.id + '_autofill', this.parent.element).remove();\n                }\n                this.autofill = createElement('div', { className: 'e-autofill', id: this.parent.element.id + '_autofill' });\n                this.autofill.style.display = 'none';\n                if (!isFrozenRow) {\n                    if (!isFrozenCol) {\n                        this.parent.getContentTable().parentElement.appendChild(this.autofill);\n                    }\n                    else {\n                        this.parent.contentModule.getMovableContent().appendChild(this.autofill);\n                    }\n                }\n                else {\n                    if (!isFrozenCol) {\n                        this.parent.getHeaderTable().parentElement.appendChild(this.autofill);\n                    }\n                    else {\n                        this.parent.headerModule.getMovableHeader().appendChild(this.autofill);\n                    }\n                }\n                if (isFrozenRight) {\n                    if (isFrozenRow) {\n                        this.parent.getFrozenRightHeader().appendChild(this.autofill);\n                    }\n                    else {\n                        this.parent.getFrozenRightContent().appendChild(this.autofill);\n                    }\n                }\n            }\n            var cell = cells[cells.length - 1];\n            if (cell && cell.offsetParent) {\n                var clientRect = cell.getBoundingClientRect();\n                var parentOff = cell.offsetParent.getBoundingClientRect();\n                var colWidth = this.isLastCell(cell) ? 4 : 0;\n                var rowHeight = this.isLastRow(cell) ? 3 : 0;\n                if (!this.parent.enableRtl) {\n                    this.autofill.style.left = clientRect.left - parentOff.left + clientRect.width - 4 - colWidth + 'px';\n                }\n                else {\n                    this.autofill.style.right = parentOff.right - clientRect.right + clientRect.width - 4 - colWidth + 'px';\n                }\n                this.autofill.style.top = clientRect.top - parentOff.top + clientRect.height - 5 - rowHeight + 'px';\n            }\n            this.autofill.style.display = '';\n        }\n        else {\n            this.hideAutoFill();\n        }\n    };\n    Selection.prototype.mouseDownHandler = function (e) {\n        this.mouseButton = e.button;\n        var target = e.target;\n        var gObj = this.parent;\n        var isDrag;\n        var gridElement = parentsUntil(target, 'e-grid');\n        if (gridElement && gridElement.id !== gObj.element.id || parentsUntil(target, literals.headerContent) && !this.parent.frozenRows ||\n            parentsUntil(target, 'e-editedbatchcell') || parentsUntil(target, literals.editedRow)) {\n            return;\n        }\n        if (e.shiftKey || e.ctrlKey) {\n            e.preventDefault();\n        }\n        if (parentsUntil(target, literals.rowCell) && !e.shiftKey && !e.ctrlKey) {\n            if (gObj.selectionSettings.cellSelectionMode.indexOf('Box') > -1 && !this.isRowType() && !this.isSingleSel()) {\n                this.isCellDrag = true;\n                isDrag = true;\n            }\n            else if (gObj.allowRowDragAndDrop && !gObj.isEdit && !this.parent.selectionSettings.checkboxOnly) {\n                if (!this.isRowType() || this.isSingleSel() || closest(target, 'td').classList.contains('e-selectionbackground')) {\n                    this.isDragged = false;\n                    return;\n                }\n                isDrag = true;\n                this.element = this.parent.createElement('div', { className: 'e-griddragarea' });\n                gObj.getContent().appendChild(this.element);\n            }\n            if (isDrag) {\n                this.enableDrag(e, true);\n            }\n        }\n        this.updateStartEndCells();\n        if (target.classList.contains('e-autofill') || target.classList.contains('e-xlsel')) {\n            this.isCellDrag = true;\n            this.isAutoFillSel = true;\n            this.enableDrag(e);\n        }\n    };\n    Selection.prototype.updateStartEndCells = function () {\n        var cells = [].slice.call(this.parent.element.getElementsByClassName('e-cellselectionbackground'));\n        this.startCell = cells[0];\n        this.endCell = cells[cells.length - 1];\n        if (this.startCell) {\n            this.startIndex = parseInt(this.startCell.parentElement.getAttribute(literals.ariaRowIndex), 10);\n            this.startCellIndex = parseInt(parentsUntil(this.startCell, literals.rowCell).getAttribute(literals.ariaColIndex), 10);\n        }\n    };\n    Selection.prototype.updateStartCellsIndex = function () {\n        if (this.startCell) {\n            this.startIndex = parseInt(this.startCell.parentElement.getAttribute(literals.ariaRowIndex), 10);\n            this.startCellIndex = parseInt(parentsUntil(this.startCell, literals.rowCell).getAttribute(literals.ariaColIndex), 10);\n        }\n    };\n    Selection.prototype.enableDrag = function (e, isUpdate) {\n        var gObj = this.parent;\n        if (isUpdate) {\n            var tr = closest(e.target, 'tr');\n            this.startDIndex = parseInt(tr.getAttribute(literals.ariaRowIndex), 10);\n            this.startDCellIndex = parseInt(parentsUntil(e.target, literals.rowCell).getAttribute(literals.ariaColIndex), 10);\n        }\n        document.body.classList.add('e-disableuserselect');\n        var gBRect = gObj.element.getBoundingClientRect();\n        var postion = getPosition(e);\n        this.x = postion.x - gBRect.left;\n        this.y = postion.y - gBRect.top;\n        EventHandler.add(gObj.getContent(), 'mousemove', this.mouseMoveHandler, this);\n        if (this.parent.frozenRows) {\n            EventHandler.add(gObj.getHeaderContent(), 'mousemove', this.mouseMoveHandler, this);\n        }\n        EventHandler.add(document, 'mouseup', this.mouseUpHandler, this);\n    };\n    Selection.prototype.clearSelAfterRefresh = function (e) {\n        var isInfiniteScroll = this.parent.enableInfiniteScrolling && e.requestType === 'infiniteScroll';\n        if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection && !isInfiniteScroll) {\n            this.clearSelection();\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.evtHandlers = [{ event: events.uiUpdate, handler: this.enableAfterRender },\n            { event: events.initialEnd, handler: this.initializeSelection },\n            { event: events.rowSelectionComplete, handler: this.onActionComplete },\n            { event: events.cellSelectionComplete, handler: this.onActionComplete },\n            { event: events.inBoundModelChanged, handler: this.onPropertyChanged },\n            { event: events.cellFocused, handler: this.onCellFocused },\n            { event: events.beforeFragAppend, handler: this.clearSelAfterRefresh },\n            { event: events.columnPositionChanged, handler: this.columnPositionChanged },\n            { event: events.contentReady, handler: this.initialEnd },\n            { event: events.rowsRemoved, handler: this.rowsRemoved },\n            { event: events.headerRefreshed, handler: this.refreshHeader }];\n        addRemoveEventListener(this.parent, this.evtHandlers, true, this);\n        this.actionBeginFunction = this.actionBegin.bind(this);\n        this.actionCompleteFunction = this.actionComplete.bind(this);\n        this.parent.addEventListener(events.actionBegin, this.actionBeginFunction);\n        this.parent.addEventListener(events.actionComplete, this.actionCompleteFunction);\n        this.addEventListener_checkbox();\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        addRemoveEventListener(this.parent, this.evtHandlers, false);\n        this.parent.removeEventListener(events.actionBegin, this.actionBeginFunction);\n        this.parent.removeEventListener(events.actionComplete, this.actionCompleteFunction);\n        this.removeEventListener_checkbox();\n    };\n    Selection.prototype.wireEvents = function () {\n        this.isMacOS = navigator.userAgent.indexOf('Mac OS') !== -1;\n        if (this.isMacOS) {\n            EventHandler.add(this.parent.element, 'keydown', this.keyDownHandler, this);\n            EventHandler.add(this.parent.element, 'keyup', this.keyUpHandler, this);\n        }\n    };\n    Selection.prototype.unWireEvents = function () {\n        if (this.isMacOS) {\n            EventHandler.remove(this.parent.element, 'keydown', this.keyDownHandler);\n            EventHandler.remove(this.parent.element, 'keyup', this.keyUpHandler);\n        }\n    };\n    Selection.prototype.columnPositionChanged = function () {\n        if (!this.parent.isPersistSelection) {\n            this.clearSelection();\n        }\n    };\n    Selection.prototype.refreshHeader = function () {\n        this.setCheckAllState();\n    };\n    Selection.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            delete (this.selectedRowState[e.records[i][this.primaryKey]]);\n            --this.totalRecordsCount;\n        }\n        this.setCheckAllState();\n    };\n    Selection.prototype.beforeFragAppend = function (e) {\n        if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection) {\n            this.clearSelection();\n        }\n    };\n    Selection.prototype.getCheckAllBox = function () {\n        return this.parent.getHeaderContent().querySelector('.e-checkselectall');\n    };\n    Selection.prototype.enableAfterRender = function (e) {\n        if (e.module === this.getModuleName() && e.enable) {\n            this.render();\n            this.initPerisistSelection();\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    Selection.prototype.render = function (e) {\n        EventHandler.add(this.parent.getContent(), 'mousedown', this.mouseDownHandler, this);\n        EventHandler.add(this.parent.getHeaderContent(), 'mousedown', this.mouseDownHandler, this);\n    };\n    Selection.prototype.onPropertyChanged = function (e) {\n        if (e.module !== this.getModuleName()) {\n            return;\n        }\n        var gObj = this.parent;\n        if (!isNullOrUndefined(e.properties.type) && this.selectionSettings.type === 'Single') {\n            if (this.selectedRowCellIndexes.length > 1) {\n                this.clearCellSelection();\n                this.prevCIdxs = undefined;\n            }\n            if (this.selectedRowIndexes.length > 1) {\n                this.clearRowSelection();\n                this.prevRowIndex = undefined;\n            }\n            if (this.selectedColumnsIndexes.length > 1) {\n                this.clearColumnSelection();\n                this.prevColIndex = undefined;\n            }\n            this.enableSelectMultiTouch = false;\n            this.hidePopUp();\n        }\n        if (!isNullOrUndefined(e.properties.mode) ||\n            !isNullOrUndefined(e.properties.cellSelectionMode)) {\n            this.clearSelection();\n            this.prevRowIndex = undefined;\n            this.prevCIdxs = undefined;\n            this.prevColIndex = undefined;\n        }\n        this.isPersisted = true;\n        this.checkBoxSelectionChanged();\n        this.isPersisted = false;\n        this.initPerisistSelection();\n        var checkboxColumn = this.parent.getColumns().filter(function (col) { return col.type === 'checkbox'; });\n        if (checkboxColumn.length) {\n            gObj.isCheckBoxSelection = !(this.selectionSettings.checkboxMode === 'ResetOnRowClick');\n        }\n        this.drawBorders();\n    };\n    Selection.prototype.hidePopUp = function () {\n        if (this.parent.element.querySelector('.e-gridpopup').getElementsByClassName('e-rowselect').length) {\n            this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n        }\n    };\n    Selection.prototype.initialEnd = function (e) {\n        var isFrozen = this.parent.isFrozenGrid();\n        var isLeftRightFrozen = this.parent.getFrozenMode() === literals.leftRight;\n        if (!isFrozen || (isFrozen && (!isLeftRightFrozen && !e.args.isFrozen)\n            || (isLeftRightFrozen && e.args.renderFrozenRightContent))) {\n            this.parent.off(events.contentReady, this.initialEnd);\n            this.selectRow(this.parent.selectedRowIndex);\n        }\n    };\n    Selection.prototype.checkBoxSelectionChanged = function () {\n        var gobj = this.parent;\n        gobj.off(events.contentReady, this.checkBoxSelectionChanged);\n        var checkboxColumn = gobj.getColumns().filter(function (col) { return col.type === 'checkbox'; });\n        if (checkboxColumn.length > 0) {\n            gobj.isCheckBoxSelection = true;\n            this.chkField = checkboxColumn[0].field;\n            this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n            if (isNullOrUndefined(this.totalRecordsCount)) {\n                this.totalRecordsCount = this.getCurrentBatchRecordChanges().length;\n            }\n            if (this.isSingleSel()) {\n                gobj.selectionSettings.type = 'Multiple';\n                gobj.dataBind();\n            }\n            else {\n                this.initPerisistSelection();\n            }\n        }\n        if (!gobj.isCheckBoxSelection && !this.isPersisted) {\n            this.chkField = null;\n            this.initPerisistSelection();\n        }\n    };\n    Selection.prototype.initPerisistSelection = function () {\n        var gobj = this.parent;\n        if (this.parent.selectionSettings.persistSelection && this.parent.getPrimaryKeyFieldNames().length > 0) {\n            gobj.isPersistSelection = true;\n            this.ensureCheckboxFieldSelection();\n        }\n        else if (this.parent.getPrimaryKeyFieldNames().length > 0) {\n            gobj.isPersistSelection = false;\n            this.ensureCheckboxFieldSelection();\n        }\n        else {\n            gobj.isPersistSelection = false;\n            this.selectedRowState = {};\n        }\n    };\n    Selection.prototype.ensureCheckboxFieldSelection = function () {\n        var gobj = this.parent;\n        this.primaryKey = this.parent.getPrimaryKeyFieldNames()[0];\n        if (!gobj.enableVirtualization && this.chkField\n            && ((gobj.isPersistSelection && Object.keys(this.selectedRowState).length === 0) ||\n                !gobj.isPersistSelection)) {\n            var data = this.parent.getDataModule();\n            var query = new Query().where(this.chkField, 'equal', true);\n            if (!query.params) {\n                query.params = this.parent.query.params;\n            }\n            var dataManager = data.getData({}, query);\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var proxy_1 = this;\n            this.parent.showSpinner();\n            dataManager.then(function (e) {\n                proxy_1.dataSuccess(e.result);\n                proxy_1.refreshPersistSelection();\n                proxy_1.parent.hideSpinner();\n            });\n        }\n    };\n    Selection.prototype.dataSuccess = function (res) {\n        for (var i = 0; i < res.length; i++) {\n            if (isNullOrUndefined(this.selectedRowState[res[i][this.primaryKey]]) && res[i][this.chkField]) {\n                this.selectedRowState[res[i][this.primaryKey]] = res[i][this.chkField];\n            }\n        }\n        this.persistSelectedData = res;\n    };\n    Selection.prototype.setRowSelection = function (state) {\n        if (!this.parent.getDataModule().isRemote() && !isBlazor()) {\n            if (state) {\n                if (this.parent.groupSettings.columns.length) {\n                    for (var _i = 0, _a = this.getData().records; _i < _a.length; _i++) {\n                        var data = _a[_i];\n                        this.selectedRowState[data[this.primaryKey]] = true;\n                    }\n                }\n                else {\n                    for (var _b = 0, _c = this.getData(); _b < _c.length; _b++) {\n                        var data = _c[_b];\n                        this.selectedRowState[data[this.primaryKey]] = true;\n                    }\n                }\n            }\n            else {\n                this.selectedRowState = {};\n            }\n            // (this.getData()).forEach(function (data) {\n            //     this.selectedRowState[data[this.primaryKey]] = true;\n            // })\n        }\n    };\n    Selection.prototype.getData = function () {\n        return this.parent.getDataModule().dataManager.executeLocal(this.parent.getDataModule().generateQuery(true));\n    };\n    Selection.prototype.refreshPersistSelection = function () {\n        var rows = this.parent.getRows();\n        if (this.parent.isCheckBoxSelection && this.parent.isFrozenGrid()) {\n            var mtbody = this.parent.getMovableContentTbody();\n            if (mtbody.querySelector('.e-checkselect')) {\n                rows = this.parent.getMovableRows();\n            }\n            if (this.parent.getFrozenMode() === literals.leftRight) {\n                var frtbody = this.parent.getFrozenRightContentTbody();\n                if (frtbody.querySelector('.e-checkselect')) {\n                    rows = this.parent.getFrozenRightRows();\n                }\n            }\n        }\n        this.totalRecordsCount = this.parent.getCurrentViewRecords().length;\n        if (this.parent.allowPaging) {\n            this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n        }\n        if (rows !== null && rows.length > 0 && (this.parent.isPersistSelection || this.chkField)) {\n            var indexes = [];\n            for (var j = 0; j < rows.length; j++) {\n                var rowObj = this.getRowObj(rows[j]);\n                var pKey = rowObj ? rowObj.data ? rowObj.data[this.primaryKey] : null : null;\n                if (pKey === null) {\n                    return;\n                }\n                var checkState = void 0;\n                var chkBox = rows[j].querySelector('.e-checkselect');\n                if (this.selectedRowState[pKey] || (this.parent.checkAllRows === 'Check' &&\n                    this.totalRecordsCount === Object.keys(this.selectedRowState).length && this.chkAllCollec.indexOf(pKey) < 0)\n                    || (this.parent.checkAllRows === 'Uncheck' && this.chkAllCollec.indexOf(pKey) > 0)\n                    || (this.parent.checkAllRows === 'Intermediate' && !isNullOrUndefined(this.chkField) && rowObj.data[this.chkField])) {\n                    indexes.push(parseInt(rows[j].getAttribute(literals.ariaRowIndex), 10));\n                    checkState = true;\n                }\n                else {\n                    checkState = false;\n                    if (this.checkedTarget !== chkBox && this.parent.isCheckBoxSelection) {\n                        removeAddCboxClasses(chkBox.nextElementSibling, checkState);\n                    }\n                }\n                this.updatePersistCollection(rows[j], checkState);\n            }\n            if (this.isSingleSel() && indexes.length > 0) {\n                this.selectRow(indexes[0], true);\n            }\n            else {\n                this.selectRows(indexes);\n            }\n        }\n        if (this.parent.isCheckBoxSelection && this.getCurrentBatchRecordChanges().length > 0) {\n            this.setCheckAllState();\n        }\n    };\n    Selection.prototype.actionBegin = function (e) {\n        if (e.requestType === 'save' && this.parent.isPersistSelection) {\n            var editChkBox = this.parent.element.querySelector('.e-edit-checkselect');\n            if (!isNullOrUndefined(editChkBox)) {\n                var row = closest(editChkBox, '.' + literals.editedRow);\n                if (row) {\n                    if (this.parent.editSettings.mode === 'Dialog') {\n                        row = this.parent.element.querySelector('.e-dlgeditrow');\n                    }\n                    var rowObj = this.getRowObj(row);\n                    if (!rowObj) {\n                        return;\n                    }\n                    this.selectedRowState[rowObj.data[this.primaryKey]] = rowObj.isSelected = editChkBox.checked;\n                }\n                else {\n                    this.isCheckedOnAdd = editChkBox.checked;\n                }\n            }\n        }\n    };\n    Selection.prototype.actionComplete = function (e) {\n        if (e.requestType === 'save' && this.parent.isPersistSelection) {\n            if (e.action === 'add' && this.isCheckedOnAdd) {\n                var rowObj = this.parent.getRowObjectFromUID(this.parent.getRows()[e.selectedRow].getAttribute('data-uid'));\n                this.selectedRowState[rowObj.data[this.primaryKey]] = rowObj.isSelected = this.isCheckedOnAdd;\n            }\n            this.refreshPersistSelection();\n        }\n        if (e.requestType === 'delete' && this.parent.isPersistSelection) {\n            var records = e.data;\n            var data = records.slice();\n            for (var i = 0; i < data.length; i++) {\n                if (!isNullOrUndefined(data[i][this.primaryKey])) {\n                    this.updatePersistDelete(data[i][this.primaryKey]);\n                }\n            }\n            this.setCheckAllState();\n            this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n        }\n        if (e.requestType === 'paging') {\n            this.prevRowIndex = undefined;\n            this.prevCIdxs = undefined;\n            this.prevECIdxs = undefined;\n        }\n    };\n    Selection.prototype.onDataBound = function () {\n        if (!this.parent.enableVirtualization && this.parent.isPersistSelection) {\n            if (this.selectedRecords.length) {\n                this.isPrevRowSelection = true;\n            }\n            this.refreshPersistSelection();\n        }\n        if (this.parent.enableVirtualization) {\n            this.setCheckAllState();\n        }\n        this.initialRowSelection = this.isRowType() && this.parent.element.querySelectorAll('.e-selectionbackground') &&\n            this.parent.getSelectedRows().length ? true : false;\n        if (this.parent.isCheckBoxSelection && !this.initialRowSelection) {\n            var totalRecords = this.parent.getRowsObject();\n            var indexes = [];\n            for (var i = 0; i < totalRecords.length; i++) {\n                if (totalRecords[i].isSelected) {\n                    indexes.push(i);\n                }\n            }\n            if (indexes.length) {\n                this.selectRows(indexes);\n            }\n            this.initialRowSelection = true;\n        }\n    };\n    Selection.prototype.updatePersistSelectedData = function (checkState) {\n        if (this.parent.isPersistSelection) {\n            var rows = this.parent.getRows();\n            for (var i = 0; i < rows.length; i++) {\n                this.updatePersistCollection(rows[i], checkState);\n            }\n            if (this.parent.checkAllRows === 'Uncheck') {\n                this.setRowSelection(false);\n                this.persistSelectedData = this.parent.getDataModule().isRemote() ? this.persistSelectedData : [];\n            }\n            else if (this.parent.checkAllRows === 'Check') {\n                this.setRowSelection(true);\n                this.persistSelectedData = (!this.parent.getDataModule().isRemote() && !isBlazor()) ?\n                    this.parent.groupSettings.columns.length ? this.getData().records.slice() :\n                        this.getData().slice() : this.persistSelectedData;\n            }\n        }\n    };\n    Selection.prototype.checkSelectAllAction = function (checkState) {\n        var cRenderer = this.getRenderer();\n        var editForm = this.parent.element.querySelector('.e-gridform');\n        this.checkedTarget = this.getCheckAllBox();\n        if (checkState && this.getCurrentBatchRecordChanges().length) {\n            this.parent.checkAllRows = 'Check';\n            this.updatePersistSelectedData(checkState);\n            this.selectRowsByRange(cRenderer.getVirtualRowIndex(0), cRenderer.getVirtualRowIndex(this.getCurrentBatchRecordChanges().length - 1));\n        }\n        else {\n            this.parent.checkAllRows = 'Uncheck';\n            this.updatePersistSelectedData(checkState);\n            this.clearSelection();\n        }\n        this.chkAllCollec = [];\n        if (!isNullOrUndefined(editForm)) {\n            var editChkBox = editForm.querySelector('.e-edit-checkselect');\n            if (!isNullOrUndefined(editChkBox)) {\n                removeAddCboxClasses(editChkBox.nextElementSibling, checkState);\n            }\n        }\n    };\n    Selection.prototype.checkSelectAll = function (checkBox) {\n        var _this = this;\n        var stateStr = this.getCheckAllStatus(checkBox);\n        var state = stateStr === 'Check';\n        this.isHeaderCheckboxClicked = true;\n        if (stateStr === 'Intermediate') {\n            state = this.getCurrentBatchRecordChanges().some(function (data) {\n                return data[_this.primaryKey] in _this.selectedRowState;\n            });\n        }\n        if (this.parent.isPersistSelection && this.parent.allowPaging) {\n            this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n        }\n        this.checkSelectAllAction(!state);\n        this.target = null;\n        if (this.getCurrentBatchRecordChanges().length > 0) {\n            this.setCheckAllState();\n        }\n        this.triggerChkChangeEvent(checkBox, !state);\n    };\n    Selection.prototype.getCheckAllStatus = function (ele) {\n        var classes = ele ? ele.nextElementSibling.classList :\n            this.getCheckAllBox().nextElementSibling.classList;\n        var status;\n        if (classes.contains('e-check')) {\n            status = 'Check';\n        }\n        else if (classes.contains('e-uncheck')) {\n            status = 'Uncheck';\n        }\n        else if (classes.contains('e-stop')) {\n            status = 'Intermediate';\n        }\n        else {\n            status = 'None';\n        }\n        return status;\n    };\n    Selection.prototype.checkSelect = function (checkBox) {\n        var target = closest(this.checkedTarget, '.' + literals.rowCell);\n        var gObj = this.parent;\n        this.isMultiCtrlRequest = true;\n        var rIndex = 0;\n        this.isHeaderCheckboxClicked = false;\n        if (isGroupAdaptive(gObj)) {\n            var uid = target.parentElement.getAttribute('data-uid');\n            rIndex = gObj.getRows().map(function (m) { return m.getAttribute('data-uid'); }).indexOf(uid);\n        }\n        else {\n            rIndex = parseInt(target.parentElement.getAttribute(literals.ariaRowIndex), 10);\n        }\n        if (this.parent.isPersistSelection && this.parent.element.getElementsByClassName(literals.addedRow).length > 0 &&\n            this.parent.editSettings.newRowPosition === 'Top') {\n            ++rIndex;\n        }\n        this.rowCellSelectionHandler(rIndex, parseInt(target.getAttribute(literals.ariaColIndex), 10));\n        this.moveIntoUncheckCollection(closest(target, '.' + literals.row));\n        this.setCheckAllState();\n        this.isMultiCtrlRequest = false;\n        this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'));\n    };\n    Selection.prototype.moveIntoUncheckCollection = function (row) {\n        if (this.parent.checkAllRows === 'Check' || this.parent.checkAllRows === 'Uncheck') {\n            var rowObj = this.getRowObj(row);\n            var pKey = rowObj && rowObj.data ? rowObj.data[this.primaryKey] : null;\n            if (!pKey) {\n                return;\n            }\n            if (this.chkAllCollec.indexOf(pKey) < 0) {\n                this.chkAllCollec.push(pKey);\n            }\n            else {\n                this.chkAllCollec.splice(this.chkAllCollec.indexOf(pKey), 1);\n            }\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState) {\n        this.parent.trigger(events.checkBoxChange, {\n            checked: checkState, selectedRowIndexes: this.parent.getSelectedRowIndexes(),\n            target: checkBox\n        });\n        if (!this.parent.isEdit) {\n            this.checkedTarget = null;\n        }\n    };\n    Selection.prototype.updateSelectedRowIndex = function (index) {\n        if (this.parent.isCheckBoxSelection && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)\n            && !this.parent.getDataModule().isRemote()\n            && !(isBlazor() && this.parent.isServerRendered)) {\n            if (this.parent.checkAllRows === 'Check') {\n                this.selectedRowIndexes = [];\n                var dataLength = this.getData().length;\n                for (var data = 0; data < dataLength; data++) {\n                    this.selectedRowIndexes.push(data);\n                }\n            }\n            else if (this.parent.checkAllRows === 'Uncheck') {\n                this.selectedRowIndexes = [];\n            }\n            else {\n                var row = this.parent.getRowByIndex(index);\n                if (index && row && row.getAttribute('aria-selected') === 'false') {\n                    var selectedVal = this.selectedRowIndexes.indexOf(index);\n                    this.selectedRowIndexes.splice(selectedVal, 1);\n                }\n            }\n        }\n    };\n    Selection.prototype.setCheckAllState = function (index, isInteraction) {\n        if (this.parent.isCheckBoxSelection || this.parent.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n            var checkToSelectAll = void 0;\n            var checkedLen = Object.keys(this.selectedRowState).length;\n            if (!this.parent.isPersistSelection) {\n                checkedLen = this.selectedRowIndexes.length;\n                this.totalRecordsCount = this.getCurrentBatchRecordChanges().length;\n            }\n            var input = this.getCheckAllBox();\n            if (input) {\n                var spanEle = input.nextElementSibling;\n                removeClass([spanEle], ['e-check', 'e-stop', 'e-uncheck']);\n                setChecked(input, false);\n                input.indeterminate = false;\n                if (checkToSelectAll || checkedLen === this.totalRecordsCount && this.totalRecordsCount\n                    || ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)\n                        && !this.parent.allowPaging && !this.parent.getDataModule().isRemote()\n                        && !(isBlazor() && this.parent.isServerRendered)\n                        && (this.getData().length && checkedLen === this.getData().length))) {\n                    addClass([spanEle], ['e-check']);\n                    setChecked(input, true);\n                    if (isInteraction) {\n                        this.getRenderer().setSelection(null, true, true);\n                    }\n                    this.parent.checkAllRows = 'Check';\n                }\n                else if (!this.selectedRowIndexes.length ||\n                    checkedLen === 0 && this.getCurrentBatchRecordChanges().length === 0) {\n                    addClass([spanEle], ['e-uncheck']);\n                    if (isInteraction) {\n                        this.getRenderer().setSelection(null, false, true);\n                    }\n                    this.parent.checkAllRows = 'Uncheck';\n                    if (checkedLen === 0 && this.getCurrentBatchRecordChanges().length === 0) {\n                        addClass([spanEle.parentElement], ['e-checkbox-disabled']);\n                    }\n                    else {\n                        removeClass([spanEle.parentElement], ['e-checkbox-disabled']);\n                    }\n                }\n                else {\n                    addClass([spanEle], ['e-stop']);\n                    this.parent.checkAllRows = 'Intermediate';\n                    input.indeterminate = true;\n                }\n                if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)\n                    && !this.parent.allowPaging && !this.parent.getDataModule().isRemote()) {\n                    this.updateSelectedRowIndex(index);\n                }\n            }\n        }\n    };\n    Selection.prototype.keyDownHandler = function (e) {\n        // Below are keyCode for command key in MAC OS. Safari/Chrome(91-Left command, 93-Right Command), Opera(17), FireFox(224)\n        if ((((Browser.info.name === 'chrome') || (Browser.info.name === 'safari')) && (e.keyCode === 91 || e.keyCode === 93)) ||\n            (Browser.info.name === 'opera' && e.keyCode === 17) || (Browser.info.name === 'mozilla' && e.keyCode === 224)) {\n            this.cmdKeyPressed = true;\n        }\n    };\n    Selection.prototype.keyUpHandler = function (e) {\n        if ((((Browser.info.name === 'chrome') || (Browser.info.name === 'safari')) && (e.keyCode === 91 || e.keyCode === 93)) ||\n            (Browser.info.name === 'opera' && e.keyCode === 17) || (Browser.info.name === 'mozilla' && e.keyCode === 224)) {\n            this.cmdKeyPressed = false;\n        }\n    };\n    Selection.prototype.clickHandler = function (e) {\n        var target = e.target;\n        this.actualTarget = target;\n        if (this.selectionSettings.persistSelection) {\n            this.deSelectedData = iterateExtend(this.persistSelectedData);\n        }\n        if (parentsUntil(target, literals.row) || parentsUntil(target, 'e-headerchkcelldiv') ||\n            (this.selectionSettings.allowColumnSelection && target.classList.contains('e-headercell'))) {\n            this.isInteracted = true;\n        }\n        this.isMultiCtrlRequest = e.ctrlKey || this.enableSelectMultiTouch ||\n            (this.isMacOS && this.cmdKeyPressed);\n        this.isMultiShiftRequest = e.shiftKey;\n        this.popUpClickHandler(e);\n        var chkSelect = false;\n        this.preventFocus = true;\n        var checkBox;\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        this.checkSelectAllClicked = checkWrap && checkWrap.getElementsByClassName('e-checkselectall') ||\n            (this.selectionSettings.persistSelection && parentsUntil(target, literals.row)) ? true : false;\n        if (checkWrap && checkWrap.querySelectorAll('.e-checkselect,.e-checkselectall').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            chkSelect = true;\n        }\n        this.drawBorders();\n        this.updateAutoFillPosition();\n        target = parentsUntil(target, literals.rowCell);\n        if ((target && target.parentElement.classList.contains(literals.row) && !this.parent.selectionSettings.checkboxOnly) || chkSelect) {\n            if (this.parent.isCheckBoxSelection) {\n                this.isMultiCtrlRequest = true;\n            }\n            this.target = target;\n            if (!isNullOrUndefined(checkBox)) {\n                this.checkedTarget = checkBox;\n                if (checkBox.classList.contains('e-checkselectall')) {\n                    this.checkSelectAll(checkBox);\n                }\n                else {\n                    this.checkSelect(checkBox);\n                }\n            }\n            else {\n                var gObj = this.parent;\n                var rIndex = 0;\n                if (isGroupAdaptive(gObj)) {\n                    var uid = target.parentElement.getAttribute('data-uid');\n                    rIndex = gObj.getRows().map(function (m) { return m.getAttribute('data-uid'); }).indexOf(uid);\n                }\n                else {\n                    rIndex = parseInt(target.parentElement.getAttribute(literals.ariaRowIndex), 10);\n                }\n                if (this.parent.isPersistSelection && this.parent.element.getElementsByClassName(literals.addedRow).length > 0) {\n                    ++rIndex;\n                }\n                if (!this.mUPTarget || !this.mUPTarget.isEqualNode(target)) {\n                    this.rowCellSelectionHandler(rIndex, parseInt(target.getAttribute(literals.ariaColIndex), 10));\n                }\n                this.parent.hoverFrozenRows(e);\n                if (this.parent.isCheckBoxSelection) {\n                    this.moveIntoUncheckCollection(closest(target, '.' + literals.row));\n                    this.setCheckAllState();\n                }\n            }\n            if (!this.parent.isCheckBoxSelection && Browser.isDevice && !this.isSingleSel()) {\n                this.showPopup(e);\n            }\n        }\n        else if (e.target.classList.contains('e-headercell') &&\n            !e.target.classList.contains('e-stackedheadercell')) {\n            var uid = e.target.querySelector('.e-headercelldiv').getAttribute('e-mappinguid');\n            this.headerSelectionHandler(this.parent.getColumnIndexByUid(uid));\n        }\n        this.isMultiCtrlRequest = false;\n        this.isMultiShiftRequest = false;\n        if (isNullOrUndefined(closest(e.target, '.e-unboundcell'))) {\n            this.preventFocus = false;\n        }\n    };\n    Selection.prototype.popUpClickHandler = function (e) {\n        var target = e.target;\n        if (closest(target, '.e-headercell') || e.target.classList.contains(literals.rowCell) ||\n            closest(target, '.e-gridpopup')) {\n            if (target.classList.contains('e-rowselect')) {\n                if (!target.classList.contains('e-spanclicked')) {\n                    target.classList.add('e-spanclicked');\n                    this.enableSelectMultiTouch = true;\n                }\n                else {\n                    target.classList.remove('e-spanclicked');\n                    this.enableSelectMultiTouch = false;\n                    this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n                }\n            }\n        }\n        else {\n            this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n        }\n    };\n    Selection.prototype.showPopup = function (e) {\n        if (!this.selectionSettings.enableSimpleMultiRowSelection) {\n            setCssInGridPopUp(this.parent.element.querySelector('.e-gridpopup'), e, 'e-rowselect e-icons e-icon-rowselect' +\n                (!this.isSingleSel() && (this.selectedRecords.length > (this.parent.getFrozenColumns() ? 2 : 1)\n                    || this.selectedRowCellIndexes.length > 1) ? ' e-spanclicked' : ''));\n        }\n    };\n    Selection.prototype.rowCellSelectionHandler = function (rowIndex, cellIndex) {\n        if ((!this.isMultiCtrlRequest && !this.isMultiShiftRequest) || this.isSingleSel()) {\n            if (!this.isDragged) {\n                this.selectRow(rowIndex, this.selectionSettings.enableToggle);\n            }\n            this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex }, this.selectionSettings.enableToggle);\n            if (this.selectedRowCellIndexes.length) {\n                this.updateAutoFillPosition();\n            }\n            this.drawBorders();\n        }\n        else if (this.isMultiShiftRequest) {\n            if (this.parent.isCheckBoxSelection || (!this.parent.isCheckBoxSelection &&\n                !closest(this.target, '.' + literals.rowCell).classList.contains(literals.gridChkBox))) {\n                this.selectRowsByRange(isUndefined(this.prevRowIndex) ? rowIndex : this.prevRowIndex, rowIndex);\n            }\n            else {\n                this.addRowsToSelection([rowIndex]);\n            }\n            this.selectCellsByRange(isUndefined(this.prevCIdxs) ? { rowIndex: rowIndex, cellIndex: cellIndex } : this.prevCIdxs, { rowIndex: rowIndex, cellIndex: cellIndex });\n            this.updateAutoFillPosition();\n            this.drawBorders();\n        }\n        else {\n            this.addRowsToSelection([rowIndex]);\n            this.addCellsToSelection([{ rowIndex: rowIndex, cellIndex: cellIndex }]);\n            this.showHideBorders('none');\n        }\n        this.isDragged = false;\n    };\n    Selection.prototype.onCellFocused = function (e) {\n        if (this.parent.frozenRows && e.container.isHeader && e.byKey) {\n            if (e.keyArgs.action === 'upArrow') {\n                if (this.parent.allowFiltering) {\n                    e.isJump = e.element.tagName === 'INPUT' ? true : false;\n                }\n                else {\n                    e.isJump = e.element.tagName === 'TH' ? true : false;\n                }\n            }\n            else {\n                if (e.keyArgs.action === 'downArrow') {\n                    var rIdx = Number(e.element.parentElement.getAttribute(literals.ariaRowIndex));\n                    e.isJump = rIdx === 0 ? true : false;\n                }\n                else {\n                    if (e.keyArgs.action === 'ctrlHome') {\n                        e.isJump = true;\n                    }\n                }\n            }\n        }\n        var clear = this.parent.isFrozenGrid() ? (((e.container.isHeader && e.element.tagName !== 'TD' && e.isJump &&\n            !this.selectionSettings.allowColumnSelection) ||\n            ((e.container.isContent || e.element.tagName === 'TD') && !(e.container.isSelectable || e.element.tagName === 'TD')))\n            && !(e.byKey && e.keyArgs.action === 'space')) : ((e.container.isHeader && e.isJump) ||\n            (e.container.isContent && !e.container.isSelectable)) && !(e.byKey && e.keyArgs.action === 'space')\n            && !(e.element.classList.contains('e-detailrowexpand') || e.element.classList.contains('e-detailrowcollapse'));\n        var headerAction = (e.container.isHeader && e.element.tagName !== 'TD' && !closest(e.element, '.' + literals.rowCell))\n            && !(e.byKey && e.keyArgs.action === 'space');\n        if (!e.byKey || clear) {\n            if (clear && !this.parent.isCheckBoxSelection) {\n                this.clearSelection();\n            }\n            return;\n        }\n        var _a = e.container.isContent ? e.container.indexes : e.indexes, rowIndex = _a[0], cellIndex = _a[1];\n        var prev = this.focus.getPrevIndexes();\n        if (this.parent.frozenRows) {\n            if (e.container.isHeader && (e.element.tagName === 'TD' || closest(e.element, '.' + literals.rowCell))) {\n                var thLen = this.parent.getHeaderTable().querySelector('thead').childElementCount;\n                rowIndex -= thLen;\n                prev.rowIndex = !isNullOrUndefined(prev.rowIndex) ? prev.rowIndex - thLen : null;\n            }\n            else {\n                rowIndex += this.parent.frozenRows;\n                prev.rowIndex = prev.rowIndex === 0 || !isNullOrUndefined(prev.rowIndex) ? prev.rowIndex + this.parent.frozenRows : null;\n            }\n        }\n        if (this.parent.isFrozenGrid()) {\n            var cIdx = Number(e.element.getAttribute(literals.ariaColIndex));\n            var selectedIndexes = this.parent.getSelectedRowCellIndexes();\n            if (selectedIndexes.length && prev.cellIndex === 0) {\n                prev.cellIndex = selectedIndexes[selectedIndexes.length - 1].cellIndexes[0];\n            }\n            prev.cellIndex = !isNullOrUndefined(prev.cellIndex) ? (prev.cellIndex === cellIndex ? cIdx : cIdx - 1) : null;\n            cellIndex = cIdx;\n        }\n        if ((headerAction || (['ctrlPlusA', 'escape'].indexOf(e.keyArgs.action) === -1 &&\n            e.keyArgs.action !== 'space' && rowIndex === prev.rowIndex && cellIndex === prev.cellIndex)) &&\n            !this.selectionSettings.allowColumnSelection) {\n            return;\n        }\n        this.preventFocus = true;\n        var columnIndex = this.getKeyColIndex(e);\n        if (this.needColumnSelection) {\n            cellIndex = columnIndex;\n        }\n        switch (e.keyArgs.action) {\n            case 'downArrow':\n            case 'upArrow':\n            case 'enter':\n            case 'shiftEnter':\n                this.target = e.element;\n                this.applyDownUpKey(rowIndex, cellIndex);\n                break;\n            case 'rightArrow':\n            case 'leftArrow':\n                this.applyRightLeftKey(rowIndex, cellIndex);\n                break;\n            case 'shiftDown':\n            case 'shiftUp':\n                this.shiftDownKey(rowIndex, cellIndex);\n                break;\n            case 'shiftLeft':\n            case 'shiftRight':\n                this.applyShiftLeftRightKey(rowIndex, cellIndex);\n                break;\n            case 'home':\n            case 'end':\n                cellIndex = e.keyArgs.action === 'end' ? this.getLastColIndex(rowIndex) : 0;\n                this.applyHomeEndKey(rowIndex, cellIndex);\n                break;\n            case 'ctrlHome':\n            case 'ctrlEnd':\n                this.applyCtrlHomeEndKey(rowIndex, cellIndex);\n                break;\n            case 'escape':\n                this.clearSelection();\n                break;\n            case 'ctrlPlusA':\n                this.ctrlPlusA();\n                break;\n            case 'space':\n                this.applySpaceSelection(e.element);\n                break;\n            case 'tab':\n                if (this.parent.editSettings.allowNextRowEdit) {\n                    this.selectRow(rowIndex);\n                }\n                break;\n        }\n        this.needColumnSelection = false;\n        this.preventFocus = false;\n        this.positionBorders();\n        this.updateAutoFillPosition();\n    };\n    Selection.prototype.getKeyColIndex = function (e) {\n        var uid;\n        var index = null;\n        var stackedHeader = e.element.querySelector('.e-stackedheadercelldiv');\n        if (this.selectionSettings.allowColumnSelection && parentsUntil(e.element, 'e-columnheader')) {\n            this.needColumnSelection = e.container.isHeader ? true : false;\n            if (stackedHeader) {\n                if (e.keyArgs.action === 'rightArrow' || e.keyArgs.action === 'leftArrow') {\n                    return index;\n                }\n                uid = stackedHeader.getAttribute('e-mappinguid');\n                var innerColumn = this.getstackedColumns(this.parent.getColumnByUid(uid).columns);\n                var lastIndex = this.parent.getColumnIndexByUid(innerColumn[innerColumn.length - 1].uid);\n                var firstIndex = this.parent.getColumnIndexByUid(innerColumn[0].uid);\n                index = this.prevColIndex >= lastIndex ? firstIndex : lastIndex;\n            }\n            else {\n                index = this.parent.getColumnIndexByUid(e.element\n                    .querySelector('.e-headercelldiv').getAttribute('e-mappinguid'));\n            }\n        }\n        return index;\n    };\n    /**\n     * Apply ctrl + A key selection\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.ctrlPlusA = function () {\n        if (this.isRowType() && !this.isSingleSel()) {\n            this.selectRowsByRange(0, this.getCurrentBatchRecordChanges().length - 1);\n        }\n        if (this.isCellType() && !this.isSingleSel()) {\n            this.selectCellsByRange({ rowIndex: 0, cellIndex: 0 }, { rowIndex: this.parent.getRows().length - 1, cellIndex: this.parent.getColumns().length - 1 });\n        }\n    };\n    Selection.prototype.applySpaceSelection = function (target) {\n        if (target.classList.contains('e-checkselectall')) {\n            this.checkedTarget = target;\n            this.checkSelectAll(this.checkedTarget);\n        }\n        else {\n            if (target.classList.contains('e-checkselect')) {\n                this.checkedTarget = target;\n                this.checkSelect(this.checkedTarget);\n            }\n        }\n    };\n    Selection.prototype.applyDownUpKey = function (rowIndex, cellIndex) {\n        var gObj = this.parent;\n        if (this.parent.isCheckBoxSelection && this.parent.checkAllRows === 'Check' && !this.selectionSettings.persistSelection) {\n            this.checkSelectAllAction(false);\n            this.checkedTarget = null;\n        }\n        if (this.isRowType()) {\n            if (this.parent.frozenRows) {\n                this.selectRow(rowIndex, true);\n                this.applyUpDown(gObj.selectedRowIndex);\n            }\n            else {\n                this.selectRow(rowIndex, true);\n                this.applyUpDown(gObj.selectedRowIndex);\n            }\n        }\n        if (this.isCellType()) {\n            this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex }, true);\n        }\n        if (this.selectionSettings.allowColumnSelection && this.needColumnSelection) {\n            this.selectColumn(cellIndex);\n        }\n    };\n    Selection.prototype.applyUpDown = function (rowIndex) {\n        if (rowIndex < 0) {\n            return;\n        }\n        if (!this.target) {\n            this.target = this.parent.getRows()[0].children[this.parent.groupSettings.columns.length || 0];\n        }\n        var cIndex = parseInt(this.target.getAttribute(literals.ariaColIndex), 10);\n        var frzCols = this.parent.getFrozenColumns();\n        if (frzCols) {\n            if (cIndex >= frzCols) {\n                this.target =\n                    this.contentRenderer.getMovableRowByIndex(rowIndex).getElementsByClassName(literals.rowCell)[cIndex - frzCols];\n            }\n            else {\n                this.target = this.contentRenderer.getRowByIndex(rowIndex).getElementsByClassName(literals.rowCell)[cIndex];\n            }\n        }\n        else {\n            this.target = this.contentRenderer.getRowByIndex(rowIndex).getElementsByClassName(literals.rowCell)[cIndex];\n        }\n        this.addAttribute(this.target);\n    };\n    Selection.prototype.applyRightLeftKey = function (rowIndex, cellIndex) {\n        if (this.selectionSettings.allowColumnSelection && this.needColumnSelection) {\n            this.selectColumn(cellIndex);\n        }\n        else if (this.isCellType()) {\n            this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex }, true);\n            this.addAttribute(this.target);\n        }\n    };\n    Selection.prototype.applyHomeEndKey = function (rowIndex, cellIndex) {\n        if (this.isCellType()) {\n            this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex }, true);\n        }\n        else {\n            this.addAttribute(this.parent.getCellFromIndex(rowIndex, cellIndex));\n        }\n    };\n    /**\n     * Apply shift+down key selection\n     *\n     * @param {number} rowIndex - specfies the rowIndex\n     * @param {number} cellIndex - specifies the CellIndex\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.shiftDownKey = function (rowIndex, cellIndex) {\n        this.isMultiShiftRequest = true;\n        if (this.isRowType() && !this.isSingleSel()) {\n            if (!isUndefined(this.prevRowIndex)) {\n                this.selectRowsByRange(this.prevRowIndex, rowIndex);\n                this.applyUpDown(rowIndex);\n            }\n            else {\n                this.selectRow(0, true);\n            }\n        }\n        if (this.isCellType() && !this.isSingleSel()) {\n            this.selectCellsByRange(this.prevCIdxs || { rowIndex: 0, cellIndex: 0 }, { rowIndex: rowIndex, cellIndex: cellIndex });\n        }\n        this.isMultiShiftRequest = false;\n    };\n    Selection.prototype.applyShiftLeftRightKey = function (rowIndex, cellIndex) {\n        this.isMultiShiftRequest = true;\n        if (this.selectionSettings.allowColumnSelection && this.needColumnSelection) {\n            this.selectColumnsByRange(this.prevColIndex, cellIndex);\n        }\n        else {\n            this.selectCellsByRange(this.prevCIdxs, { rowIndex: rowIndex, cellIndex: cellIndex });\n        }\n        this.isMultiShiftRequest = false;\n    };\n    Selection.prototype.getstackedColumns = function (column) {\n        var innerColumnIndexes = [];\n        for (var i = 0, len = column.length; i < len; i++) {\n            if (column[i].columns) {\n                this.getstackedColumns(column[i].columns);\n            }\n            else {\n                innerColumnIndexes.push(column[i]);\n            }\n        }\n        return innerColumnIndexes;\n    };\n    Selection.prototype.applyCtrlHomeEndKey = function (rowIndex, cellIndex) {\n        if (this.isRowType()) {\n            this.selectRow(rowIndex, true);\n            this.addAttribute(this.parent.getCellFromIndex(rowIndex, cellIndex));\n        }\n        if (this.isCellType()) {\n            this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex }, true);\n        }\n    };\n    Selection.prototype.addRemoveClassesForRow = function (row, isAdd, clearAll) {\n        var args = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            args[_i - 3] = arguments[_i];\n        }\n        if (row) {\n            var cells = [].slice.call(row.getElementsByClassName(literals.rowCell));\n            var detailIndentCell = row.querySelector('.e-detailrowcollapse') || row.querySelector('.e-detailrowexpand');\n            var dragdropIndentCell = row.querySelector('.e-rowdragdrop');\n            if (detailIndentCell) {\n                cells.push(detailIndentCell);\n            }\n            if (dragdropIndentCell) {\n                cells.push(dragdropIndentCell);\n            }\n            addRemoveActiveClasses.apply(void 0, [cells, isAdd].concat(args));\n        }\n        this.getRenderer().setSelection(row ? row.getAttribute('data-uid') : null, isAdd, clearAll);\n    };\n    Selection.prototype.isRowType = function () {\n        return this.selectionSettings.mode === 'Row' || this.selectionSettings.mode === 'Both';\n    };\n    Selection.prototype.isCellType = function () {\n        return this.selectionSettings.mode === 'Cell' || this.selectionSettings.mode === 'Both';\n    };\n    Selection.prototype.isSingleSel = function () {\n        return this.selectionSettings.type === 'Single';\n    };\n    Selection.prototype.getRenderer = function () {\n        if (isNullOrUndefined(this.contentRenderer)) {\n            this.contentRenderer = this.factory.getRenderer(RenderType.Content);\n        }\n        return this.contentRenderer;\n    };\n    /**\n     * Gets the collection of selected records.\n     *\n     * @returns {Object[]} returns the Object\n     */\n    Selection.prototype.getSelectedRecords = function () {\n        var selectedData = [];\n        if (!this.selectionSettings.persistSelection) {\n            selectedData = this.parent.getRowsObject().filter(function (row) { return row.isSelected; })\n                .map(function (m) { return m.data; });\n        }\n        else {\n            selectedData = this.persistSelectedData;\n        }\n        return selectedData;\n    };\n    /**\n     * Select the column by passing start column index\n     *\n     * @param {number} index - specifies the index\n     * @returns {void}\n     */\n    Selection.prototype.selectColumn = function (index) {\n        var gObj = this.parent;\n        if (isNullOrUndefined(gObj.getColumns()[index])) {\n            return;\n        }\n        var column = gObj.getColumnByIndex(index);\n        var selectedCol = gObj.getColumnHeaderByUid(column.uid);\n        var isColSelected = selectedCol.classList.contains('e-columnselection');\n        if ((!gObj.selectionSettings.allowColumnSelection)) {\n            return;\n        }\n        var isMultiColumns = this.selectedColumnsIndexes.length > 1 &&\n            this.selectedColumnsIndexes.indexOf(index) > -1;\n        this.clearColDependency();\n        if (!isColSelected || !this.selectionSettings.enableToggle || isMultiColumns) {\n            var args = {\n                columnIndex: index, headerCell: selectedCol,\n                column: column,\n                cancel: false, target: this.actualTarget,\n                isInteracted: this.isInteracted, previousColumnIndex: this.prevColIndex,\n                isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest\n            };\n            this.onActionBegin(args, events.columnSelecting);\n            if (args.cancel) {\n                this.disableInteracted();\n                return;\n            }\n            if (!(gObj.selectionSettings.enableToggle && index === this.prevColIndex && isColSelected) || isMultiColumns) {\n                this.updateColSelection(selectedCol, index);\n            }\n            var selectedArgs = {\n                columnIndex: index, headerCell: selectedCol,\n                column: column,\n                target: this.actualTarget,\n                isInteracted: this.isInteracted, previousColumnIndex: this.prevColIndex\n            };\n            this.onActionComplete(selectedArgs, events.columnSelected);\n        }\n        this.updateColProps(index);\n    };\n    /**\n     * Select the columns by passing start and end column index\n     *\n     * @param  {number} startIndex - specifies the start index\n     * @param  {number} endIndex - specifies the end index\n     * @returns {void}\n     */\n    Selection.prototype.selectColumnsByRange = function (startIndex, endIndex) {\n        var gObj = this.parent;\n        if (isNullOrUndefined(gObj.getColumns()[startIndex])) {\n            return;\n        }\n        var indexes = [];\n        if (gObj.selectionSettings.type === 'Single' || isNullOrUndefined(endIndex)) {\n            indexes[0] = startIndex;\n        }\n        else {\n            var min = startIndex < endIndex;\n            for (var i = startIndex; min ? i <= endIndex : i >= endIndex; min ? i++ : i--) {\n                indexes.push(i);\n            }\n        }\n        this.selectColumns(indexes);\n    };\n    /**\n     * Select the columns by passing column indexes\n     *\n     * @param  {number[]} columnIndexes - specifies the columnIndexes\n     * @returns {void}\n     */\n    Selection.prototype.selectColumns = function (columnIndexes) {\n        var gObj = this.parent;\n        var selectedCol = this.getselectedCols();\n        if (gObj.selectionSettings.type === 'Single') {\n            columnIndexes = [columnIndexes[0]];\n        }\n        if (!gObj.selectionSettings.allowColumnSelection) {\n            return;\n        }\n        this.clearColDependency();\n        var selectingArgs = {\n            columnIndex: columnIndexes[0], headerCell: selectedCol,\n            columnIndexes: columnIndexes,\n            column: gObj.getColumnByIndex(columnIndexes[0]),\n            cancel: false, target: this.actualTarget,\n            isInteracted: this.isInteracted, previousColumnIndex: this.prevColIndex,\n            isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest\n        };\n        this.onActionBegin(selectingArgs, events.columnSelecting);\n        if (selectingArgs.cancel) {\n            this.disableInteracted();\n            return;\n        }\n        for (var i = 0, len = columnIndexes.length; i < len; i++) {\n            this.updateColSelection(gObj.getColumnHeaderByUid(gObj.getColumnByIndex(columnIndexes[i]).uid), columnIndexes[i]);\n        }\n        selectedCol = this.getselectedCols();\n        var selectedArgs = {\n            columnIndex: columnIndexes[0], headerCell: selectedCol,\n            columnIndexes: columnIndexes,\n            column: gObj.getColumnByIndex(columnIndexes[0]),\n            target: this.actualTarget,\n            isInteracted: this.isInteracted, previousColumnIndex: this.prevColIndex\n        };\n        this.onActionComplete(selectedArgs, events.columnSelected);\n        this.updateColProps(columnIndexes[0]);\n    };\n    /**\n     * Select the column with existing column by passing column index\n     *\n     * @param  {number} startIndex - specifies the start index\n     * @returns {void}\n     */\n    Selection.prototype.selectColumnWithExisting = function (startIndex) {\n        var gObj = this.parent;\n        if (isNullOrUndefined(gObj.getColumns()[startIndex])) {\n            return;\n        }\n        var newCol = gObj.getColumnHeaderByUid(gObj.getColumnByIndex(startIndex).uid);\n        var selectedCol = this.getselectedCols();\n        if (gObj.selectionSettings.type === 'Single') {\n            this.clearColDependency();\n        }\n        if (!gObj.selectionSettings.allowColumnSelection) {\n            return;\n        }\n        if (this.selectedColumnsIndexes.indexOf(startIndex) > -1) {\n            this.clearColumnSelection(startIndex);\n        }\n        else {\n            var selectingArgs = {\n                columnIndex: startIndex, headerCell: selectedCol,\n                columnIndexes: this.selectedColumnsIndexes,\n                column: gObj.getColumnByIndex(startIndex),\n                cancel: false, target: this.actualTarget,\n                isInteracted: this.isInteracted, previousColumnIndex: this.prevColIndex,\n                isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest\n            };\n            this.onActionBegin(selectingArgs, events.columnSelecting);\n            if (selectingArgs.cancel) {\n                this.disableInteracted();\n                return;\n            }\n            this.updateColSelection(newCol, startIndex);\n            selectedCol = this.getselectedCols();\n            var selectedArgs = {\n                columnIndex: startIndex, headerCell: selectedCol,\n                column: gObj.getColumnByIndex(startIndex),\n                columnIndexes: this.selectedColumnsIndexes,\n                target: this.actualTarget,\n                isInteracted: this.isInteracted, previousColumnIndex: this.prevColIndex\n            };\n            this.onActionComplete(selectedArgs, events.columnSelected);\n        }\n        this.updateColProps(startIndex);\n    };\n    /**\n     * Clear the column selection\n     *\n     * @param {number} clearIndex - specifies the clearIndex\n     * @returns {void}\n     */\n    Selection.prototype.clearColumnSelection = function (clearIndex) {\n        if (this.isColumnSelected) {\n            var gObj = this.parent;\n            if (!isNullOrUndefined(clearIndex) && this.selectedColumnsIndexes.indexOf(clearIndex) === -1) {\n                return;\n            }\n            var index = !isNullOrUndefined(clearIndex) ? clearIndex :\n                this.selectedColumnsIndexes[this.selectedColumnsIndexes.length - 1];\n            var col = gObj.getColumnByIndex(index);\n            var selectedCol = void 0;\n            var column = gObj.getColumnByIndex(index);\n            if (col.getFreezeTableName() === literals.frozenRight) {\n                selectedCol = gObj.getFrozenRightColumnHeaderByIndex(index);\n            }\n            else if (col.getFreezeTableName() === 'movable') {\n                selectedCol = gObj.getMovableColumnHeaderByIndex(index);\n            }\n            else {\n                selectedCol = gObj.getColumnHeaderByUid(column.uid);\n            }\n            var deselectedArgs = {\n                columnIndex: index, headerCell: selectedCol,\n                columnIndexes: this.selectedColumnsIndexes,\n                column: column,\n                cancel: false, target: this.actualTarget,\n                isInteracted: this.isInteracted\n            };\n            var isCanceled = this.columnDeselect(deselectedArgs, events.columnDeselecting);\n            if (isCanceled) {\n                this.disableInteracted();\n                return;\n            }\n            var selectedHeader = !isNullOrUndefined(clearIndex) ? [selectedCol] :\n                [].slice.call(gObj.getHeaderContent().getElementsByClassName('e-columnselection'));\n            var selectedCells = this.getSelectedColumnCells(clearIndex);\n            for (var i = 0, len = selectedHeader.length; i < len; i++) {\n                addRemoveActiveClasses([selectedHeader[i]], false, 'e-columnselection');\n            }\n            for (var i = 0, len = selectedCells.length; i < len; i++) {\n                addRemoveActiveClasses([selectedCells[i]], false, 'e-columnselection');\n            }\n            if (!isNullOrUndefined(clearIndex)) {\n                this.selectedColumnsIndexes.splice(this.selectedColumnsIndexes.indexOf(clearIndex), 1);\n                this.parent.getColumns()[clearIndex].isSelected = false;\n            }\n            else {\n                this.columnDeselect(deselectedArgs, events.columnDeselected);\n                this.selectedColumnsIndexes = [];\n                this.isColumnSelected = false;\n                this.parent.getColumns().filter(function (col) { return col.isSelected = false; });\n            }\n        }\n    };\n    Selection.prototype.getselectedCols = function () {\n        var gObj = this.parent;\n        var selectedCol;\n        if (this.selectedColumnsIndexes.length > 1) {\n            selectedCol = [];\n            for (var i = 0; i < this.selectedColumnsIndexes.length; i++) {\n                (selectedCol).push(gObj.getColumnHeaderByUid(gObj.getColumnByIndex(this.selectedColumnsIndexes[i]).uid));\n            }\n        }\n        else {\n            selectedCol = gObj.getColumnHeaderByUid(gObj.getColumnByIndex(this.selectedColumnsIndexes[0]).uid);\n        }\n        return selectedCol;\n    };\n    Selection.prototype.getSelectedColumnCells = function (clearIndex) {\n        var gObj = this.parent;\n        var isRowTemplate = !isNullOrUndefined(this.parent.rowTemplate);\n        var rows = isRowTemplate ? gObj.getRows() : gObj.getDataRows();\n        var movableRows;\n        var frRows;\n        if (gObj.isFrozenGrid() && gObj.getContent().querySelector('.' + literals.movableContent)) {\n            movableRows = isRowTemplate ? gObj.getMovableRows() : gObj.getMovableDataRows();\n            rows = gObj.addMovableRows(rows, movableRows);\n            if (gObj.getFrozenMode() === literals.leftRight) {\n                frRows = isRowTemplate ? gObj.getFrozenRightRows() : gObj.getFrozenRightDataRows();\n                rows = gObj.addMovableRows(rows, frRows);\n            }\n        }\n        var seletedcells = [];\n        var selectionString = !isNullOrUndefined(clearIndex) ? '[aria-colindex=\"' + clearIndex + '\"]' : '.e-columnselection';\n        for (var i = 0, len = rows.length; i < len; i++) {\n            seletedcells = seletedcells.concat([].slice.call(rows[i].querySelectorAll(selectionString)));\n        }\n        return seletedcells;\n    };\n    Selection.prototype.columnDeselect = function (args, event) {\n        if (event === 'columnDeselected') {\n            delete args.cancel;\n        }\n        this.onActionComplete(args, event);\n        return args.cancel;\n    };\n    Selection.prototype.updateColProps = function (startIndex) {\n        this.prevColIndex = startIndex;\n        this.isColumnSelected = this.selectedColumnsIndexes.length && true;\n    };\n    Selection.prototype.clearColDependency = function () {\n        this.clearColumnSelection();\n        this.selectedColumnsIndexes = [];\n    };\n    Selection.prototype.updateColSelection = function (selectedCol, startIndex) {\n        if (isNullOrUndefined(this.parent.getColumns()[startIndex])) {\n            return;\n        }\n        var left = this.parent.getFrozenLeftCount();\n        var movable = this.parent.getMovableColumnsCount();\n        var col = this.parent.getColumnByIndex(startIndex);\n        var isRowTemplate = !isNullOrUndefined(this.parent.rowTemplate);\n        var rows;\n        this.selectedColumnsIndexes.push(startIndex);\n        this.parent.getColumns()[startIndex].isSelected = true;\n        if (col.getFreezeTableName() === literals.frozenRight) {\n            startIndex = startIndex - (left + movable);\n            rows = isRowTemplate ? this.parent.getFrozenRightRows() : this.parent.getFrozenRightDataRows();\n        }\n        else if (col.getFreezeTableName() === 'movable') {\n            startIndex = startIndex - left;\n            rows = isRowTemplate ? this.parent.getMovableRows() : this.parent.getMovableDataRows();\n        }\n        else {\n            startIndex = startIndex + this.parent.getIndentCount();\n            rows = isRowTemplate ? this.parent.getRows() : this.parent.getDataRows();\n        }\n        addRemoveActiveClasses([selectedCol], true, 'e-columnselection');\n        for (var j = 0, len = rows.length; j < len; j++) {\n            if (rows[j].classList.contains(literals.row)) {\n                if ((rows[j].classList.contains(literals.editedRow) || rows[j].classList.contains(literals.addedRow)) &&\n                    this.parent.editSettings.mode === 'Normal' && !isNullOrUndefined(rows[j].querySelector('tr').childNodes[startIndex])) {\n                    addRemoveActiveClasses([rows[j].querySelector('tr').childNodes[startIndex]], true, 'e-columnselection');\n                }\n                else if (!isNullOrUndefined(rows[j].childNodes[startIndex])) {\n                    addRemoveActiveClasses([rows[j].childNodes[startIndex]], true, 'e-columnselection');\n                }\n            }\n        }\n    };\n    Selection.prototype.headerSelectionHandler = function (colIndex) {\n        if ((!this.isMultiCtrlRequest && !this.isMultiShiftRequest) || this.isSingleSel()) {\n            this.selectColumn(colIndex);\n        }\n        else if (this.isMultiShiftRequest) {\n            this.selectColumnsByRange(isUndefined(this.prevColIndex) ? colIndex : this.prevColIndex, colIndex);\n        }\n        else {\n            this.selectColumnWithExisting(colIndex);\n        }\n    };\n    // eslint-disable-next-line camelcase\n    Selection.prototype.addEventListener_checkbox = function () {\n        var _this = this;\n        this.parent.on(events.dataReady, this.dataReady, this);\n        this.onDataBoundFunction = this.onDataBound.bind(this);\n        this.parent.addEventListener(events.dataBound, this.onDataBoundFunction);\n        this.parent.on(events.contentReady, this.checkBoxSelectionChanged, this);\n        this.parent.on(events.beforeRefreshOnDataChange, this.initPerisistSelection, this);\n        this.parent.on(events.onEmpty, this.setCheckAllForEmptyGrid, this);\n        this.actionCompleteFunc = this.actionCompleteHandler.bind(this);\n        this.parent.addEventListener(events.actionComplete, this.actionCompleteFunc);\n        this.parent.on(events.click, this.clickHandler, this);\n        this.resizeEndFn = function () {\n            _this.updateAutoFillPosition();\n            _this.drawBorders();\n        };\n        this.resizeEndFn.bind(this);\n        this.parent.addEventListener(events.resizeStop, this.resizeEndFn);\n    };\n    // eslint-disable-next-line camelcase\n    Selection.prototype.removeEventListener_checkbox = function () {\n        this.parent.off(events.dataReady, this.dataReady);\n        this.parent.removeEventListener(events.dataBound, this.onDataBoundFunction);\n        this.parent.removeEventListener(events.actionComplete, this.actionCompleteFunc);\n        this.parent.off(events.onEmpty, this.setCheckAllForEmptyGrid);\n        this.parent.off(events.click, this.clickHandler);\n        this.parent.off(events.beforeRefreshOnDataChange, this.initPerisistSelection);\n    };\n    Selection.prototype.setCheckAllForEmptyGrid = function () {\n        var checkAllBox = this.getCheckAllBox();\n        if (checkAllBox) {\n            this.parent.isCheckBoxSelection = true;\n            var spanEle = checkAllBox.nextElementSibling;\n            removeClass([spanEle], ['e-check', 'e-stop', 'e-uncheck']);\n        }\n    };\n    Selection.prototype.dataReady = function (e) {\n        this.isHeaderCheckboxClicked = false;\n        var isInfinitecroll = this.parent.enableInfiniteScrolling && e.requestType === 'infiniteScroll';\n        if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection && !isInfinitecroll) {\n            this.disableUI = !this.parent.enableImmutableMode;\n            this.clearSelection();\n            this.setCheckAllState();\n            this.disableUI = false;\n        }\n    };\n    Selection.prototype.actionCompleteHandler = function (e) {\n        if (e.requestType === 'save' && this.parent.isPersistSelection) {\n            this.refreshPersistSelection();\n        }\n    };\n    Selection.prototype.selectRowIndex = function (index) {\n        this.parent.isSelectedRowIndexUpdating = true;\n        this.parent.selectedRowIndex = index;\n    };\n    Selection.prototype.disableInteracted = function () {\n        this.isInteracted = false;\n    };\n    Selection.prototype.activeTarget = function () {\n        this.actualTarget = this.isInteracted ? this.actualTarget : null;\n    };\n    return Selection;\n}());\nexport { Selection };\n"]},"metadata":{},"sourceType":"module"}